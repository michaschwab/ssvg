{"version":3,"sources":["webpack://SSVG/webpack/universalModuleDefinition","webpack://SSVG/webpack/bootstrap","webpack://SSVG/./canvasworker/drawingUtils.ts","webpack://SSVG/./node_modules/worker-loader/dist/workers/InlineWorker.js","webpack://SSVG/./frontend/ssvg-auto-exporter.ts","webpack://SSVG/./frontend/ssvg.ts","webpack://SSVG/./frontend/domhandler.ts","webpack://SSVG/./util/vdom/vdom-manager.ts","webpack://SSVG/./frontend/attrs.ts","webpack://SSVG/./canvasworker/canvasrenderer.ts","webpack://SSVG/./canvasworker/index.ts","webpack://SSVG/./canvasworker/canvasworker.ts","webpack://SSVG/./syncworker/index.ts","webpack://SSVG/./syncworker/syncworker.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DrawingUtils","[object Object]","transform","transformObject","translateX","translateY","scaleX","scaleY","rotate","translateBeforeScale","rotateLast","transformString","replace","translate","exec","parseFloat","scale","substr","matrix","transformA","transformB","size","fallback","defaultValue","undefined","Math","round","parseInt","match","console","warn","color","opacity","defaultColor","cacheKey","rgbaCache","CssNamedColorToHex","rgba","test","Error","substring","length","join","g","b","rgb","hslToRgb","h","hue2rgb","q","COLOR_HEXES","toUpperCase","selector","specificity","parts","concat","apply","split","map","part","start","countClasses","min","default","ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREY","DARKGREEN","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREY","GREEN","GREENYELLOW","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","KHAKI","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREY","LIGHTGREEN","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","NAVY","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","REBECCAPURPLE","RED","ROSYBROWN","ROYALBLUE","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","STEELBLUE","TAN","TEAL","THISTLE","TOMATO","TURQUOISE","VIOLET","WHEAT","WHITE","WHITESMOKE","YELLOW","YELLOWGREEN","URL","webkitURL","content","url","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","e","Blob","Worker","createObjectURL","encodeURIComponent","ssvg_1","location","search","domhandler_1","__importDefault","canvasrenderer_1","drawingUtils_1","canvasworker_1","syncworker_1","SSVG","options","this","unassignedNodes","interactionSelections","svgAssignedAndSizeSet","lastCanvasDrawTimes","enterExitQueue","safeMode","useWorker","getFps","maxPixelRatio","canvas","document","createElement","worker","syncWorker","onmessage","data","msg","logDrawn","raf","updateFps","updateCanvas","requestAnimationFrame","captureD3On","svg","setupElementsIfSvgExists","addEventListener","propagateMouseEvent","propagateTouchEvent","lastHovered","hoveredElement","dispatchEvent","MouseEvent","duplicateTouchEvent","propagateWheelEvent","replaceNativeRemoveChild","replaceNativeAttribute","replaceNativePathFunctions","replaceNativeCreateElement","replaceNativeAppendChild","replaceD3Attr","replaceNativeSelect","replaceNativeGetComputedStyle","replaceD3Select","replaceD3Remove","setTimeout","log","vdom","svgEl","getElementsByTagName","urlConnector","href","indexOf","svgSwitchUrl","svgSwitchComment","createComment","parent","parentElement","nextSibling","next","insertBefore","appendChild","domHandler","getVDom","setCanvasSize","hasChanges","nodeUpdated","node","attr","renderer","applyStyles","transferBufferQueueDataToSynced","queue","getQueue","clearQueue","updatePropertiesFromQueue","sendUpdateToWorker","draw","width","height","devicePixelRatio","style","offscreen","transferControlToOffscreen","channel","MessageChannel","postMessage","cmd","visData","port","port2","port1","ensureNodesMapped","element","isWithinSvg","parentEl","parentNode","d3","originalOn","selection","on","me","el","_parents","children","push","arguments","getReplacement","original","elements","_groups","filter","logContents","safeLogCount","safeLog","childElements","getVisNode","childNodes","getVisNodesFromSelector","getElementFromNode","returnValue","forEach","childNode","childEl","selectAll","select","origFilter","selectorString","firstElement","getNodeFromElement","nodes","selectors","sel","trim","filteredNodes","matchingNodes","filterNodesBySelector","filteredElements","origGetComputedStyle","getComputedStyle","getPropertyValue","propertyName","origQuerySelector","Element","querySelector","globalElementIndex","originalFct","prefix","els","returnVal","getAttributeFromSelector","keys","child","error","queueSetAttributeOnElement","queueSetAttributeOnSelection","origSelectionAttr","origSelectionStyle","originalClassed","classed","className","enableFrontendDesignProperties","prevClassNames","evaluatedValue","__data__","newClassNames","originalTransition","transition","originalText","text","newRemove","getNewRemoveChild","d3Remove","remove","origCreate","createElementNS","newArgs","Array","from","getNewAppendChild","origRemoveChild","skipUpdateSelectors","writable","childGlobalIndex","parentGlobalIndex","removeNode","removeChild","origAppend","appended","el2","keepChildren","getNodeDataFromEl","setProperty","styleProp","removeProperty","linkNodeToElement","addNodeToParent","restyleNode","addNode","index","splice","origAppendChild","newAppend","newChild","refChild","origGetTotalLength","SVGPathElement","getTotalLength","getAttribute","origSetAttribute","origSetAttr","setAttribute","origSetAttrNS","setAttributeNS","origGetAttr","evt","type","propagateEvent","createEvent","initEvent","prop","touches","touch","identifier","pageX","pageY","clientX","clientY","WheelEvent","new_event","triggeredElement","x","y","getMousePosition","interactionSel","j","vdomNode","nodeAtPosition","svgChildEl","event","pos","safeErrorLog","visNode","cx","cy","parseTransform","sqrt","pow","elX","elY","centerX","centerY","distanceX","abs","distanceY","getTotalTransformation","matchAny","Date","now","shift","timeForTenDrawsMs","fps","enterExit","update","vdom_manager_1","attrs_1","ignoreDesign","nodesToRestyle","maxGlobalElementIndex","removedNodeIndices","css","VdomManager","display","addChildNodesToVisData","attrName","ensureInitialized","set","styleName","getNodeFromIndex","tagName","toLowerCase","id","textContent","RELEVANT_ATTRS","hasAttribute","ROUNDED_ATTRS","copyStylesFromElement","CSS_STYLES","kebabCase","styleSheets","sheet","rules","cssRules","rule","selectorText","applyRuleToMatchingNodes","selectorPartsLooseStrict","relevantIds","nodeToBeStyled","getNodeParent","relevantIdMap","setStyle","longSpecName","checkNode","currentNode","looseIndex","strictIndex","selPart","childIndex","isCssRulePartialMatch","removedClass","removeRuleStylesFromNode","restyleIndex","childEls","parentSelector","elementType","getNewElementIndex","getParentNode","parents","pop","totalTransform","addTransforms","isRenderer","sharedRenderData","values","buffers","syncedSharedData","sharedDataQueue","useSharedArrayFor","indexToNodeMap","changed","cachedListSelections","useBuffer","numNodes","newLength","newByteLength","Int32Array","BYTES_PER_ELEMENT","byteLength","buffer","createBufferTransferValues","prevData","SharedArrayBuffer","prevBufferVals","BUFFER_PRECISION_FACTOR","storage","addToMap","nodeData","parentNodeIndex","removePendingChanges","styleValue","onNodeUpdated","applyStyleToNodeAndChildren","applyCssToNodeAndChildren","filtered","attrs","isArray","getSingle","setAttrQueue","self","attrNameStart","IGNOREDESIGN_ATTRIBUTES","lastSplitPos","lastIndexOf","selectorWithoutLast","lastPart","parentSel","nthChildPosition","selectedNodes","findMatchingChildren","addDirectChildrenIfMatch","matchIndex","selectedNodeSelectors","selParts","findChildrenOfType","matching","cssRuleSelectorPart","newSelPart","searchClassNames","allTrue","searchClassName","indexPart","targetIndex","cutoff","typeName","rect","circle","path","title","tspan","image","clippath","line","ROUNDED_ATTRS_ARR","forceSingle","onDrawn","parentValues","lastFullSecond","countSinceLastFullSecond","circlesByColor","rectsByColor","drawTexts","drawImages","linesByColor","ctx","getContext","save","restore","clearRect","drawLine","drawCircle","drawRect","drawText","drawImage","drawNodeAndChildren","fullSecond","performance","elData","drawClip","parentValuesBackup","assign","saveRestoreContext","applyTransform","clipPathId","clipNode","getNodeById","Path2D","clip","drawSingleNode","fill","stroke","drawFct","handle","getFillStyle","getStrokeStyle","strokeStyle","beginPath","fillStyle","lineWidth","getStrokeWidth","moveTo","arc","PI","fillAndStrokeColor","fillColor","strokeColor","sampleData","includes","getAttributeStyleCss","defaultCol","colorToRgba","highestSpec","getCssRuleSpecificityNumber","fillRect","isClip","drawSingle","fontFamily","fontSize","customSize","convertSizeToPx","font","align","textAlign","dx","dy","fillText","strokeWidth","lineJoin","addPath","textAnchor","x1","x2","y1","y2","val","lineTo","CanvasWorkerImporter","SyncWorkerImporter"],"mappings":"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","file":"ssvg-auto.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SSVG\"] = factory();\n\telse\n\t\troot[\"SSVG\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export type Transformation = {\n    translateX: number,\n    translateY: number,\n    scaleX: number,\n    scaleY: number,\n    rotate: number,\n    translateBeforeScale: boolean,\n    rotateLast: boolean,\n}\n\nexport default class DrawingUtils {\n    static parseTransform(transform: string|{}): Transformation {\n        const transformObject: Transformation = {\n            translateX: 0,\n            translateY: 0,\n            scaleX: 1,\n            scaleY: 1,\n            rotate: 0,\n            translateBeforeScale: false,\n            rotateLast: false\n        };\n        \n        if (transform) {\n            if(typeof transform !== \"string\") {\n                transformObject.scaleX = transform['k'];\n                transformObject.scaleY = transform['k'];\n                transformObject.translateX = transform['x'];\n                transformObject.translateY = transform['y'];\n                transformObject.translateBeforeScale = true;\n                return transformObject;\n            }\n            let transformString = <string> transform;\n            transformString = transformString.replace(/ /g, '');\n            \n            //let translate  = /translate\\((\\d+),(\\d+)\\)/.exec(transform);\n            const translate = /\\s*translate\\(([-0-9.]+),([-0-9.]+)\\)/.exec(transformString);\n            if (translate) {\n                transformObject.translateX = parseFloat(translate[1]);\n                transformObject.translateY = parseFloat(translate[2]);\n            }\n            else {\n                //console.error('no translate found', transform);\n            }\n            \n            const scale = /\\s*scale\\(([-0-9.]+)(,[-0-9.]+)?\\)/.exec(transformString);\n            if (scale) {\n                transformObject.scaleX = parseFloat(scale[1]);\n                transformObject.scaleY = scale[2] ? parseFloat(scale[2].substr(1)) : parseFloat(scale[1]);\n            }\n            else {\n                //console.error('no scale found', transform);\n            }\n            \n            const rotate = /\\s*rotate\\(([-0-9.]+)\\)/.exec(transformString);\n            if (rotate) {\n                transformObject.rotate = parseFloat(rotate[1]);\n            }\n            else {\n                //console.error('no rotate found', transform);\n            }\n            \n            const translateScale = /\\s*translate\\(([-0-9.]+),([-0-9.]+)\\)scale\\(([-0-9.,]+)\\)/.exec(transformString);\n            if (translateScale) {\n                transformObject.translateBeforeScale = true;\n            }\n\n            const rotateLast = /\\s*rotate\\(([-0-9.,]+)\\)$/.exec(transformString);\n            if (rotateLast) {\n                transformObject.rotateLast = true;\n            }\n            \n            const matrix = /\\s*matrix\\(([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+)\\)/.exec(transformString);\n            if(matrix) {\n                transformObject.scaleX = parseFloat(matrix[1]);\n                // 2 is horizontal skewing\n                // 3 is vertical skewing\n                transformObject.scaleY = parseFloat(matrix[4]);\n                transformObject.translateX = parseFloat(matrix[5]);\n                transformObject.translateY = parseFloat(matrix[6]);\n            }\n        }\n        \n        return transformObject;\n    }\n\n    static addTransforms(transformA: Transformation, transformB: Transformation): Transformation {\n        return {\n            translateX: transformA.translateX + transformB.translateX,\n            translateY: transformA.translateY + transformB.translateY,\n            scaleX: transformA.scaleX * transformB.scaleX,\n            scaleY: transformA.scaleY * transformB.scaleY,\n            rotate: transformA.rotate + transformB.rotate,\n            translateBeforeScale: false,\n            rotateLast: false\n        };\n        //TODO: consider translateBeforeScale and rotateLast\n    }\n\n    static convertSizeToPx(size: string|number, fallback = true): number|undefined {\n        const defaultValue = fallback ? 14 : undefined;\n        if(size === undefined) {\n            return defaultValue;\n        }\n        if(typeof size === \"number\") {\n            return size;\n        }\n        if(size.substr(-2) === 'em') {\n            return Math.round(parseFloat(size) * 12);\n        }\n        if(size.substr(-2) === 'px') {\n            return parseInt(size);\n        }\n        if(size.match(/^[0-9]+$/)) {\n            return parseInt(size);\n        }\n        console.warn('size in unsupported format: ', size);\n        return defaultValue;\n    }\n\n    static rgbaCache = {};\n    static colorToRgba(color: string|{r: number, g: number, b: number}|{h: number, s: number, l: number},\n                       opacity: string|number = 1,\n                       defaultColor ='none'): string {\n        if(color === 'none') {\n            return color;\n        }\n        if(!color) {\n            color = defaultColor;\n        }\n        const cacheKey = `${color}-${opacity}`;\n        if(DrawingUtils.rgbaCache[cacheKey]) {\n            return DrawingUtils.rgbaCache[cacheKey];\n        }\n\n        color = DrawingUtils.CssNamedColorToHex(color);\n        if(opacity === 1 && typeof color === 'string') {\n            DrawingUtils.rgbaCache[cacheKey] = color;\n            return color;\n        }\n        let rgba: string;\n        if(typeof color === 'string' && color[0] === '#') {\n            let c; // From https://stackoverflow.com/questions/21646738/convert-hex-to-rgba\n            if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(color)){\n                c = color.substring(1);\n                if(c.length == 3){\n                    c = c[0] + c[0] + c[1] + c[1] + c[2] + c[2];\n                }\n                c = '0x' + c;\n                rgba = 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n            } else {\n                throw new Error('Bad Hex');\n            }\n        } else if(typeof color === 'object') {\n            if('r' in color) {\n                rgba = 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')';\n            } else if('h' in color) {\n                const rgb = DrawingUtils.hslToRgb(color.h / 360, color.s, color.l);\n                rgba = 'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + opacity + ')';\n            }\n        } else if(color.substr(0, 4) === 'rgb(') {\n            rgba = color.substr(0, color.length - 1).replace('rgb','rgba') +\n                ', ' + opacity + ')';\n        }\n        DrawingUtils.rgbaCache[cacheKey] = rgba;\n        return rgba;\n    }\n\n    // From https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\n    static hslToRgb(h, s, l) {\n        var r, g, b;\n\n        if(s == 0){\n            r = g = b = l; // achromatic\n        } else {\n            var hue2rgb = function hue2rgb(p, q, t){\n                if(t < 0) t += 1;\n                if(t > 1) t -= 1;\n                if(t < 1/6) return p + (q - p) * 6 * t;\n                if(t < 1/2) return q;\n                if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n                return p;\n            };\n\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1/3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1/3);\n        }\n\n        return {r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255)};\n    }\n\n    static CssNamedColorToHex(color: any) {\n        if(typeof color === 'string' && COLOR_HEXES[color.toUpperCase()]) {\n            return COLOR_HEXES[color.toUpperCase()];\n        }\n        return color;\n    }\n\n    /**\n     * Basic implementation to get a sense of specificity. Numbers are completely made up.\n     * Should eventually be more sophisticated, e.g. using https://github.com/keeganstreet/specificity.\n     * @param selector CSS rule as string.\n     */\n    static getCssRuleSpecificityNumber(selector: string) {\n        let specificity = 0;\n\n        selector = selector\n            .replace(/ >/g, '>')\n            .replace(/> /g, '>');\n\n        const parts = [].concat.apply([], selector.split(' ')\n            .map(part => part.split('>')));\n\n        // Rough logic: the more stuff, the more specific. IDs and classes are more specific than other things.\n        for(const part of parts) {\n            specificity += 100;\n            const start = part[0];\n\n            if(start === '#') {\n                specificity += 1000;\n            } else if(start === '.') {\n                // More classes are more specific, but never more specific than an ID.\n                const countClasses = part.split('.').length - 1;\n                specificity += Math.min(900, countClasses * 100);\n            }\n        }\n\n        return specificity;\n    }\n}\n\nconst COLOR_HEXES = {\n    ALICEBLUE: '#F0F8FF',\n    ANTIQUEWHITE: '#FAEBD7',\n    AQUA: '#00FFFF',\n    AQUAMARINE: '#7FFFD4',\n    AZURE: '#F0FFFF',\n    BEIGE: '#F5F5DC',\n    BISQUE: '#FFE4C4',\n    BLACK: '#000000',\n    BLANCHEDALMOND: '#FFEBCD',\n    BLUE: '#0000FF',\n    BLUEVIOLET: '#8A2BE2',\n    BROWN: '#A52A2A',\n    BURLYWOOD: '#DEB887',\n    CADETBLUE: '#5F9EA0',\n    CHARTREUSE: '#7FFF00',\n    CHOCOLATE: '#D2691E',\n    CORAL: '#FF7F50',\n    CORNFLOWERBLUE: '#6495ED',\n    CORNSILK: '#FFF8DC',\n    CRIMSON: '#DC143C',\n    CYAN: '#00FFFF',\n    DARKBLUE: '#00008B',\n    DARKCYAN: '#008B8B',\n    DARKGOLDENROD: '#B8860B',\n    DARKGRAY: '#A9A9A9',\n    DARKGREY: '#A9A9A9',\n    DARKGREEN: '#006400',\n    DARKKHAKI: '#BDB76B',\n    DARKMAGENTA: '#8B008B',\n    DARKOLIVEGREEN: '#556B2F',\n    DARKORANGE: '#FF8C00',\n    DARKORCHID: '#9932CC',\n    DARKRED: '#8B0000',\n    DARKSALMON: '#E9967A',\n    DARKSEAGREEN: '#8FBC8F',\n    DARKSLATEBLUE: '#483D8B',\n    DARKSLATEGRAY: '#2F4F4F',\n    DARKSLATEGREY: '#2F4F4F',\n    DARKTURQUOISE: '#00CED1',\n    DARKVIOLET: '#9400D3',\n    DEEPPINK: '#FF1493',\n    DEEPSKYBLUE: '#00BFFF',\n    DIMGRAY: '#696969',\n    DIMGREY: '#696969',\n    DODGERBLUE: '#1E90FF',\n    FIREBRICK: '#B22222',\n    FLORALWHITE: '#FFFAF0',\n    FORESTGREEN: '#228B22',\n    FUCHSIA: '#FF00FF',\n    GAINSBORO: '#DCDCDC',\n    GHOSTWHITE: '#F8F8FF',\n    GOLD: '#FFD700',\n    GOLDENROD: '#DAA520',\n    GRAY: '#808080',\n    GREY: '#808080',\n    GREEN: '#008000',\n    GREENYELLOW: '#ADFF2F',\n    HONEYDEW: '#F0FFF0',\n    HOTPINK: '#FF69B4',\n    INDIANRED: '#CD5C5C',\n    INDIGO: '#4B0082',\n    IVORY: '#FFFFF0',\n    KHAKI: '#F0E68C',\n    LAVENDER: '#E6E6FA',\n    LAVENDERBLUSH: '#FFF0F5',\n    LAWNGREEN: '#7CFC00',\n    LEMONCHIFFON: '#FFFACD',\n    LIGHTBLUE: '#ADD8E6',\n    LIGHTCORAL: '#F08080',\n    LIGHTCYAN: '#E0FFFF',\n    LIGHTGOLDENRODYELLOW: '#FAFAD2',\n    LIGHTGRAY: '#D3D3D3',\n    LIGHTGREY: '#D3D3D3',\n    LIGHTGREEN: '#90EE90',\n    LIGHTPINK: '#FFB6C1',\n    LIGHTSALMON: '#FFA07A',\n    LIGHTSEAGREEN: '#20B2AA',\n    LIGHTSKYBLUE: '#87CEFA',\n    LIGHTSLATEGRAY: '#778899',\n    LIGHTSLATEGREY: '#778899',\n    LIGHTSTEELBLUE: '#B0C4DE',\n    LIGHTYELLOW: '#FFFFE0',\n    LIME: '#00FF00',\n    LIMEGREEN: '#32CD32',\n    LINEN: '#FAF0E6',\n    MAGENTA: '#FF00FF',\n    MAROON: '#800000',\n    MEDIUMAQUAMARINE: '#66CDAA',\n    MEDIUMBLUE: '#0000CD',\n    MEDIUMORCHID: '#BA55D3',\n    MEDIUMPURPLE: '#9370DB',\n    MEDIUMSEAGREEN: '#3CB371',\n    MEDIUMSLATEBLUE: '#7B68EE',\n    MEDIUMSPRINGGREEN: '#00FA9A',\n    MEDIUMTURQUOISE: '#48D1CC',\n    MEDIUMVIOLETRED: '#C71585',\n    MIDNIGHTBLUE: '#191970',\n    MINTCREAM: '#F5FFFA',\n    MISTYROSE: '#FFE4E1',\n    MOCCASIN: '#FFE4B5',\n    NAVAJOWHITE: '#FFDEAD',\n    NAVY: '#000080',\n    OLDLACE: '#FDF5E6',\n    OLIVE: '#808000',\n    OLIVEDRAB: '#6B8E23',\n    ORANGE: '#FFA500',\n    ORANGERED: '#FF4500',\n    ORCHID: '#DA70D6',\n    PALEGOLDENROD: '#EEE8AA',\n    PALEGREEN: '#98FB98',\n    PALETURQUOISE: '#AFEEEE',\n    PALEVIOLETRED: '#DB7093',\n    PAPAYAWHIP: '#FFEFD5',\n    PEACHPUFF: '#FFDAB9',\n    PERU: '#CD853F',\n    PINK: '#FFC0CB',\n    PLUM: '#DDA0DD',\n    POWDERBLUE: '#B0E0E6',\n    PURPLE: '#800080',\n    REBECCAPURPLE: '#663399',\n    RED: '#FF0000',\n    ROSYBROWN: '#BC8F8F',\n    ROYALBLUE: '#4169E1',\n    SADDLEBROWN: '#8B4513',\n    SALMON: '#FA8072',\n    SANDYBROWN: '#F4A460',\n    SEAGREEN: '#2E8B57',\n    SEASHELL: '#FFF5EE',\n    SIENNA: '#A0522D',\n    SILVER: '#C0C0C0',\n    SKYBLUE: '#87CEEB',\n    SLATEBLUE: '#6A5ACD',\n    SLATEGRAY: '#708090',\n    SLATEGREY: '#708090',\n    SNOW: '#FFFAFA',\n    SPRINGGREEN: '#00FF7F',\n    STEELBLUE: '#4682B4',\n    TAN: '#D2B48C',\n    TEAL: '#008080',\n    THISTLE: '#D8BFD8',\n    TOMATO: '#FF6347',\n    TURQUOISE: '#40E0D0',\n    VIOLET: '#EE82EE',\n    WHEAT: '#F5DEB3',\n    WHITE: '#FFFFFF',\n    WHITESMOKE: '#F5F5F5',\n    YELLOW: '#FFFF00',\n    YELLOWGREEN: '#9ACD32'\n};\n\n","'use strict';\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};","import SSVG from \"./ssvg\";\n\nif(!location.search.match(/(\\?|&)svg($|&)/)) {\n    window['ssvg'] = new SSVG();\n}\n\nexport = SSVG;\n","import {VdomManager} from \"../util/vdom/vdom-manager\";\nimport {VdomNode} from \"../util/vdom/vdom\";\nimport {CanvasWorkerMessage, CanvasUpdateWorkerMessage, CanvasUpdateData} from \"../util/canvas-worker-message\"\nimport Domhandler, {SsvgElement} from \"./domhandler\";\nimport CanvasWorker from \"../canvasworker/canvasworker\";\nimport Canvasrenderer from \"../canvasworker/canvasrenderer\";\nimport DrawingUtils from \"../canvasworker/drawingUtils\";\nimport CanvasWorkerImporter from '../canvasworker';\nimport SyncWorkerImporter from '../syncworker';\n\nexport default class SSVG {\n    private unassignedNodes: Node[] = [];\n    private worker: Worker;\n    private syncWorker: Worker;\n    private domHandler: Domhandler;\n    private vdom: VdomManager;\n    private interactionSelections: SsvgElement[] = [];\n    \n    private renderer: CanvasWorker;\n\n    private svg: (SVGElement & SsvgElement)|undefined;\n    private readonly canvas: HTMLCanvasElement;\n    private svgAssignedAndSizeSet = false;\n    \n    private lastCanvasDrawTimes: number[] = [];\n    \n    private enterExitQueue: CanvasUpdateData[] = [];\n\n    private readonly safeMode: boolean = false;\n    private readonly maxPixelRatio: number|undefined;\n    private readonly useWorker: boolean = true;\n    private readonly getFps: (fps: number) => void = () => {};\n\n    private hoveredElement: Element|undefined;\n\n    constructor(options?: {\n        safeMode?: boolean,\n        maxPixelRatio?: number,\n        useWorker?: boolean,\n        getFps?: (fps: number) => void,\n        svg?: SVGElement & SsvgElement,\n    }) {\n        if(options) {\n            if(options.safeMode !== undefined) {\n                this.safeMode = options.safeMode;\n            }\n            this.maxPixelRatio = options.maxPixelRatio;\n            if(options.useWorker !== undefined) {\n                this.useWorker = options.useWorker;\n            }\n            if(options.getFps !== undefined) {\n                this.getFps = options.getFps;\n            }\n        }\n\n        this.canvas = document.createElement('canvas');\n        if(!('OffscreenCanvas' in window)) {\n            this.useWorker = false;\n        }\n\n        if(this.useWorker) {\n            this.worker = new CanvasWorkerImporter();\n            this.syncWorker = new SyncWorkerImporter();\n    \n            this.worker.onmessage = e => {\n                if(e.data && e.data.msg && e.data.msg === 'DRAWN') {\n                    this.logDrawn();\n                    //this.updateCanvas();\n                }\n            };\n            const raf = () => {\n                this.updateFps();\n                this.updateCanvas();\n                requestAnimationFrame(raf);\n            };\n            raf();\n        } else {\n            const raf = () => {\n                this.updateFps();\n                this.logDrawn();\n                this.updateCanvas();\n                requestAnimationFrame(raf);\n            };\n            raf();\n        }\n\n        this.captureD3On();\n        const svg = options && options.svg ? options.svg : undefined;\n        this.setupElementsIfSvgExists(svg);\n        \n        this.canvas.addEventListener('mousedown', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('touchstart', e => this.propagateTouchEvent(e));\n        this.canvas.addEventListener('mousemove', e => {\n            const lastHovered = this.hoveredElement;\n            this.hoveredElement = this.propagateMouseEvent(e);\n            if(lastHovered !== this.hoveredElement) {\n                if(lastHovered) {\n                    lastHovered.dispatchEvent(new MouseEvent('mouseout', e));\n                }\n            }\n            this.propagateMouseEvent(e, 'mouseover');\n        });\n        this.canvas.addEventListener('touchmove', e => {\n            const lastHovered = this.hoveredElement;\n            this.hoveredElement = this.propagateTouchEvent(e);\n            if(lastHovered !== this.hoveredElement) {\n                if(lastHovered) {\n                    lastHovered.dispatchEvent(this.duplicateTouchEvent(e, 'mouseout'));\n                }\n            }\n            this.propagateTouchEvent(e, 'mouseover');\n        });\n        this.canvas.addEventListener('mouseup', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('touchend', e => this.propagateTouchEvent(e));\n        this.canvas.addEventListener('click', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('wheel', e => this.propagateWheelEvent(e));\n\n        this.replaceNativeRemoveChild();\n        this.replaceNativeAttribute();\n        this.replaceNativePathFunctions();\n        this.replaceNativeCreateElement();\n        this.replaceNativeAppendChild();\n        this.replaceD3Attr();\n        this.replaceNativeSelect();\n        this.replaceNativeGetComputedStyle();\n        this.replaceD3Select();\n        this.replaceD3Remove();\n\n        setTimeout(() => {\n            console.log(this.vdom.data);\n        }, 1000);\n    }\n    \n    private setupElementsIfSvgExists(svgEl?: SVGElement & SsvgElement) {\n        if(this.svg) {\n            return true;\n        }\n\n        const svg = !svgEl ? document.getElementsByTagName('svg')[0] : svgEl;\n        \n        if(!svg) {\n            return false;\n        }\n\n        const urlConnector = document.location.href.indexOf('?') === -1 ? '?' : '&';\n        const svgSwitchUrl = document.location.href + urlConnector + 'svg';\n        const svgSwitchComment = document.createComment(' This project uses SSVG.io to render a SVG as Canvas.\\r\\n' +\n            'To inspect the SVG, please open the following URL:\\r\\n' +\n            svgSwitchUrl + '\\r\\n');\n        \n        this.svg = svg as SVGElement & SsvgElement;\n        const parent = this.svg.parentElement;\n\n        if(this.svg.nextSibling) {\n            const next = this.svg.nextSibling;\n            parent.insertBefore(svgSwitchComment, next);\n            parent.insertBefore(this.canvas, next);\n        } else {\n            parent.appendChild(svgSwitchComment);\n            parent.appendChild(this.canvas);\n        }\n\n        this.domHandler = new Domhandler(this.svg, this.useWorker, this.useWorker);\n        this.vdom = this.domHandler.getVDom();\n\n        this.setCanvasSize();\n        \n        return true;\n    }\n\n    private updateCanvas() {\n        if(!this.svgAssignedAndSizeSet) {\n            return;\n        }\n\n        if(!this.vdom.hasChanges() && !this.domHandler.hasChanges()) {\n            return;\n        }\n\n        const nodeUpdated = this.useWorker ? undefined : (node, attr) =>\n            this.renderer.nodeUpdated(node, attr);\n        this.domHandler.applyStyles();\n\n        this.vdom.transferBufferQueueDataToSynced();\n        const queue = this.vdom.getQueue();\n        this.vdom.clearQueue();\n        this.vdom.updatePropertiesFromQueue(queue, nodeUpdated);\n\n        if(this.useWorker) {\n            this.sendUpdateToWorker(queue);\n        } else {\n            if(this.renderer.updatePropertiesFromQueue) {\n                this.renderer.updatePropertiesFromQueue(queue);\n            }\n            this.renderer.draw();\n        }\n    }\n    \n    private setCanvasSize() {\n        if(!this.svg || !this.vdom.data.width || !this.vdom.data.height) {\n            return;\n        }\n        this.vdom.data.scale = window.devicePixelRatio;\n        if(this.maxPixelRatio !== undefined && this.vdom.data.scale > this.maxPixelRatio) {\n            this.vdom.data.scale = this.maxPixelRatio;\n        }\n    \n        this.canvas.style.width = this.vdom.data.width + 'px';\n        this.canvas.style.height = this.vdom.data.height + 'px';\n        this.canvas.width = this.vdom.data.width * this.vdom.data.scale;\n        this.canvas.height = this.vdom.data.height * this.vdom.data.scale;\n        \n        if(this.useWorker) {\n            const offscreen = (this.canvas as any).transferControlToOffscreen();\n            const channel = new MessageChannel();\n            this.worker.postMessage({cmd: 'INIT', data: {\n                    canvas: offscreen,\n                    visData: this.vdom.data,\n                    safeMode: this.safeMode,\n                    port: channel.port2\n                }\n            }, [offscreen, channel.port2]);\n            this.syncWorker.postMessage({cmd: 'INIT', data: {\n                    visData: this.vdom.data,\n                    safeMode: this.safeMode,\n                    port: channel.port1\n                }\n            }, [channel.port1]);\n\n            this.vdom.ensureNodesMapped();\n        } else {\n            this.renderer = new Canvasrenderer(this.vdom, this.canvas, this.safeMode, () => {});\n        }\n        \n        this.svgAssignedAndSizeSet = true;\n    }\n\n    private isWithinSvg(element: Element) {\n        let isWithinSvg = false;\n        let parentEl = element;\n\n        while(parentEl && parentEl.parentNode) {\n            if(parentEl === this.svg) {\n                isWithinSvg = true;\n            }\n            parentEl = <Element> parentEl.parentNode;\n        }\n        return isWithinSvg;\n    }\n    \n    private captureD3On() {\n        if((window as any)['d3']) {\n            const d3 = (window as any)['d3'];\n            const originalOn = d3.selection.prototype.on;\n            const me = this;\n\n            d3.selection.prototype.on = function()\n            {\n                let el = this._parents && this._parents.length ? this._parents[0] : this[0].parentNode;\n                if(el === document.children[0]) {\n                    el = me.svg;\n                }\n                let isWithinSvg = me.isWithinSvg(el);\n\n                if(el && isWithinSvg && me.interactionSelections.indexOf(el) === -1)\n                {\n                    me.interactionSelections.push(el); // This one works for native get/setAttribute\n                    //interactionSelections.push(this); // This one works for d3 .attr.\n                }\n        \n                return originalOn.apply(this, arguments);\n            };\n        }\n    }\n    \n    private replaceD3Select() {\n        if((window as any)['d3']) {\n            const me = this;\n            const d3 = (window as any)['d3'];\n\n            const getReplacement = (original) => {\n                return function(selector: string|(()=>{})) {\n                    if(typeof selector === 'string') {\n                        if(selector === 'body') {\n                            return original.apply(this, arguments);\n                        }\n                        let elements: SsvgElement[];\n                        if(this === d3) {\n                            elements = [me.svg];\n                        } else {\n                            elements = this._groups ? this._groups[0] : this[0];\n                        }\n\n                        if(!elements.filter(e => e).length) {\n                            safeLog('element not found within svg, using normal execution', this, selector);\n                            return original.apply(this, arguments);\n                        }\n\n                        let childElements: SsvgElement[] = [];\n\n                        for(let i = 0; i < elements.length; i++) {\n                            const element = elements[i];\n                            const node = me.domHandler.getVisNode(element);\n\n                            if(!node) {\n                                console.warn('node not found', element);\n                                return original.apply(this, arguments);\n                            }\n\n                            const childNodes = me.vdom.getVisNodesFromSelector(node, selector);\n                            childElements = childElements.concat(childNodes.map(node => {\n                                return me.domHandler.getElementFromNode(node);\n                            }));\n                        }\n\n                        const returnValue = original.apply(this, arguments);\n                        const elementsOutsideSvg: NodeList = returnValue._groups ? returnValue._groups[0]\n                            : returnValue[0];\n                        elementsOutsideSvg.forEach(childNode => {\n                            const childEl = <SsvgElement> <any> childNode;\n                            if(childElements.indexOf(childEl) === -1) {\n                                childElements.push();\n                            }\n                        });\n\n                        if(returnValue._groups) {\n                            returnValue._groups[0] = childElements;\n                        } else {\n                            // Older d3 versions\n                            const parentNode = returnValue[0].parentNode;\n                            returnValue[0] = childElements;\n                            returnValue[0].parentNode = parentNode;\n                        }\n\n                        return returnValue;\n                    }\n\n                    return original.apply(this, arguments);\n                }\n            };\n\n            d3.selection.prototype.selectAll = getReplacement(d3.selection.prototype.selectAll);\n            d3.selectAll = getReplacement(d3.selectAll);\n            d3.selection.prototype.select = getReplacement(d3.selection.prototype.select);\n            d3.select = getReplacement(d3.select);\n\n            const origFilter = d3.selection.prototype.filter;\n            d3.selection.prototype.filter = function(selectorString: string) {\n                const elements = this._groups ? this._groups[0] : this[0];\n                if(typeof selectorString !== 'string') {\n                    return origFilter.apply(this, arguments);\n                }\n                let firstElement = elements[0];\n                let i = 1;\n                while(!firstElement && i < elements.length) {\n                    i++;\n                    firstElement = elements[i];\n                }\n\n                const parentNode = firstElement ? me.domHandler.getNodeFromElement(firstElement.parentNode) : null;\n                const nodes = elements.map(element => me.domHandler.getNodeFromElement(element));\n\n                const selectors = selectorString.split(',').map(sel => sel.trim());\n                const filteredNodes = [];\n\n                for(const selector of selectors) {\n                    const matchingNodes = me.vdom.filterNodesBySelector(parentNode, nodes, selector);\n\n                    for(const node of matchingNodes) {\n                        if(filteredNodes.indexOf(node) === -1) {\n                            filteredNodes.push(node);\n                        }\n                    }\n                }\n\n                const filteredElements = filteredNodes.map(node => me.domHandler.getElementFromNode(node));\n\n                const returnValue = origFilter.apply(this, arguments);\n\n                if(returnValue._groups) {\n                    returnValue._groups[0] = filteredElements;\n                } else {\n                    // Older d3 versions\n                    const parentNode = returnValue[0].parentNode;\n                    returnValue[0] = filteredElements;\n                    returnValue[0].parentNode = parentNode;\n                }\n                return returnValue;\n            }\n        }\n    }\n\n    private replaceNativeGetComputedStyle() {\n        const origGetComputedStyle = window.getComputedStyle;\n        const me = this;\n\n        window.getComputedStyle = function(element: SsvgElement) {\n            if(element && !me.isWithinSvg(element) && (<Window> <any> element) !== window) {\n                return origGetComputedStyle.call(this, element);\n            }\n\n            const node = me.domHandler.getNodeFromElement(element);\n            if(!node) {\n                console.warn('node not found for ', this, element);\n                return origGetComputedStyle.call(this, element);\n            }\n            return {\n                getPropertyValue(propertyName: string): string {\n                    //console.log(propertyName, node, node.style[propertyName]);\n                    return node.style[propertyName];\n                }\n            } as CSSStyleDeclaration;\n        };\n    }\n\n    private replaceNativeSelect() {\n        const origQuerySelector = Element.prototype.querySelector;\n        const me = this;\n\n        Element.prototype.querySelector = function(this: SsvgElement, selector: string) {\n            if(!me.isWithinSvg(this)) {\n                return origQuerySelector.apply(this, arguments);\n            }\n\n            const node = me.domHandler.getVisNode(this);\n            const childNodes = me.vdom.getVisNodesFromSelector(node, selector);\n            if(childNodes.length === 0) {\n                console.warn('could not find selection', this, node, node.globalElementIndex, selector);\n                return null;\n            }\n            return me.domHandler.getElementFromNode(childNodes[0]);\n        };\n    }\n\n    private replaceD3Attr() {\n\n        const me = this;\n\n        function getReplacement(originalFct, prefix = '') {\n            return function(name, value) {\n                \n                if(value === undefined) {\n\n                    if(me.unassignedNodes.indexOf(this) !== -1) {\n                        return originalFct.apply(this, arguments);\n                    } else {\n                        // Dealing with d3 v3.\n                        const els = this._groups ? this._groups[0] : this[0];\n                        if(els[0] && !me.isWithinSvg(els[0])) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        if(els.length > 1) {\n                            const returnVal = [];\n                            for(const el of els) {\n                                returnVal.push(me.domHandler.getAttributeFromSelector(el, name))\n                            }\n                            return returnVal;\n                        } else {\n                            return me.domHandler.getAttributeFromSelector(els[0], name);\n                        }\n                    }\n                } else {\n                    if(name === 'class' || !me.svg) {\n                        return originalFct.apply(this, arguments);\n                    }\n                    // For d3 v4, this would just be this.groups[0]. The rest is for\n                    // earlier versions, where selectAll() returned other values.\n                    let elements = this._groups ? this._groups[0] : this[0];\n\n                    if(typeof elements === 'object' && Object.keys(elements).length === 1 && elements.parentNode) {\n                        const parentElement = elements.parentNode;\n                        let parentNode: VdomNode;\n                        if(parentElement !== document.children[0]) {\n                            parentNode = me.domHandler.getVisNode(parentElement);\n                        } else {\n                            parentNode = me.vdom.data;\n                        }\n\n                        elements = [];\n                        for(const child of parentNode.children) {\n                            elements.push(me.domHandler.getElementFromNode(child));\n                        }\n                    }\n                    if(!elements) {\n                        return originalFct.apply(this, arguments);\n                    }\n                    const filteredElements = [];\n                    try {\n                        for (const element of elements) {\n                            if (element) {\n                                filteredElements.push(element);\n                            }\n                        }\n                    } catch(e) {\n                        console.error(elements, this);\n                        console.error(e);\n                    }\n                    if(filteredElements.length === 1) {\n                        const element = filteredElements[0];\n                        if(!element) {\n                            console.warn('element not found', this, name, value);\n                            return this;\n                        }\n                        if(!me.isWithinSvg(element)) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        me.domHandler.queueSetAttributeOnElement(element, prefix + name, value);\n                    } else {\n                        if(!me.isWithinSvg(elements[0])) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        me.domHandler.queueSetAttributeOnSelection(filteredElements, prefix + name, value);\n                    }\n                    \n                    if(filteredElements[0] === me.svg && (name === 'width' || name === 'height')) {\n                        me.vdom.data[name] = parseInt(value);\n                        me.setCanvasSize();\n                    }\n                \n                    return this;\n                }\n            };\n        }\n    \n        if((window as any)['d3']) {\n            const d3 = (window as any)['d3'];\n\n            const origSelectionAttr = d3.selection.prototype.attr;\n            d3.selection.prototype.attr = getReplacement(origSelectionAttr);\n\n            const origSelectionStyle = d3.selection.prototype.style;\n            d3.selection.prototype.style = getReplacement(origSelectionStyle, 'style;');\n\n            const originalClassed = d3.selection.prototype.classed;\n            d3.selection.prototype.classed = function(className: string,\n                                                      value?: boolean|((data: any, index: number) => boolean)) {\n                if(value !== undefined) {\n                    me.domHandler.enableFrontendDesignProperties();\n                    let elements = this._groups ? this._groups[0] : this[0];\n                    let i = -1;\n                    for(let element of elements) {\n                        i++;\n                        if(element) {\n                            const node = me.domHandler.getNodeFromElement(element);\n                            if(!node) {\n                                console.warn('node not found', element);\n                                continue;\n                            }\n                            const prevClassNames = node.className || '';\n                            const evaluatedValue = typeof value === \"function\" ? value(element.__data__, i) : value;\n                            if(evaluatedValue === true) {\n                                if(prevClassNames.indexOf(className) === -1) {\n                                    let newClassNames = (prevClassNames + ' ' + className).trim();\n\n                                    me.domHandler.queueSetAttributeOnElement(element, 'class', newClassNames);\n                                }\n                            } else if(evaluatedValue === false) {\n                                const containedPreviously = prevClassNames.indexOf(className) !== -1;\n                                if(containedPreviously) {\n                                    const newClassNames = prevClassNames.replace(className, '').replace('  ', ' ');\n                                    me.domHandler.queueSetAttributeOnElement(element, 'class', newClassNames);\n\n                                    if(!node['removedClasses']) {\n                                        node['removedClasses'] = [];\n                                    }\n                                    node['removedClasses'].push(className); // For removing associated styles.\n                                }\n                            }\n                        }\n\n                    }\n                }\n                return originalClassed.apply(this, arguments);\n            };\n\n            const originalTransition = d3.selection.prototype.transition;\n            d3.selection.prototype.transition = function() {\n                me.domHandler.enableFrontendDesignProperties();\n                return originalTransition.apply(this, arguments);\n            };\n\n            const originalText = d3.selection.prototype.text;\n            d3.selection.prototype.text = function(value?: (number|string|((el: HTMLElement) => (number|string)))) {\n                if(value !== undefined) {\n                    let elements = this._groups ? this._groups[0] : this[0];\n                    let i = 0;\n                    for(let element of elements) {\n                        if(element && me.isWithinSvg(element)) {\n                            me.domHandler.queueSetAttributeOnElement(element, 'text', value);\n                        }\n\n                        i++;\n                    }\n                }\n                return originalText.apply(this, arguments);\n            };\n        }\n    }\n\n    private replaceD3Remove() {\n        if(window['d3']) {\n            const d3 = window['d3'];\n            const me = this;\n\n            const newRemove = this.getNewRemoveChild(() => {}, true);\n            const d3Remove = function() {\n                let elements = this._groups ? this._groups[0] : this[0];\n\n                if(elements.length) {\n                    let parentElement: SsvgElement = null;\n                    for(let i = elements.length - 1; i > -1; i--) {\n                        const element = elements[i];\n                        if(element) {\n                            parentElement = element.parentNode;\n                            if(!parentElement) {\n                                console.error('element has no parent node', element);\n                            }\n                            newRemove.call(parentElement, element);\n                        }\n                    }\n                }\n                return this;\n            };\n            d3.selection.prototype.remove = d3Remove;\n            //d3.transition.prototype.remove = d3Remove;\n        }\n    }\n    \n    private replaceNativeCreateElement() {\n        const origCreate = document.createElementNS;\n        const me = this;\n        \n        document.createElementNS = function() {\n            let newArgs = Array.from(arguments);\n            const el = origCreate.apply(this, newArgs);\n            \n            /*el.appendChild = () => {\n                console.log('hi!!', el, arguments);\n                //return el;\n            };*/\n    \n            el.appendChild = me.getNewAppendChild(el.appendChild);\n            \n            me.unassignedNodes.push(el);\n    \n            //console.log(me.unassignedNodes);\n            \n            return el;\n        }\n    }\n\n    private getNewRemoveChild(origRemoveChild: ((<T extends Node>(oldChild: T) => T)|(() => void)),\n        skipUpdateSelectors = false) {\n        const me = this;\n\n        return function<T extends Node>(this: SsvgElement, el: T & SsvgElement) {\n            if(!this) {\n                console.error('context not defined');\n                return el;\n            }\n            if(!me.isWithinSvg(el)) {\n                return origRemoveChild.apply(this, arguments);\n            }\n            const parentNode = me.domHandler.getNodeFromElement(this);\n            const node = me.domHandler.getNodeFromElement(el);\n\n            if(!node) {\n                console.error('node not found', node, el, this, parentNode);\n                return origRemoveChild.apply(this, arguments);\n            }\n\n            // Remove all child elements.\n            /*for(const childNode of node.children) {\n                const childEl = me.domHandler.getElementFromNode(childNode);\n                el.removeChild(childEl);\n            }*/\n\n            // Remove from current parent first.\n            Object.defineProperty(el, 'parentNode', {\n                writable: true,\n                value: undefined\n            });\n\n            //console.log('remove')\n            me.enterExitQueue.push({\n                cmd: 'EXIT',\n                childGlobalIndex: el.globalElementIndex,\n                parentGlobalIndex: parentNode.globalElementIndex\n            });\n\n            me.domHandler.removeNode(el, node, parentNode);\n\n            // Fix child indices of all children.\n            if(!skipUpdateSelectors) {\n                if(!parentNode) {\n                    console.error('parent not found', parentNode, this, el);\n                }\n            }\n\n            delete el['selector'];\n\n            return el;\n        };\n    }\n\n    private replaceNativeRemoveChild() {\n        Element.prototype.removeChild = this.getNewRemoveChild(Element.prototype.removeChild);\n    }\n    \n    private getNewAppendChild(origAppend) {\n        const me = this;\n        \n        return function<T extends Node>(this: SsvgElement, el: T & SsvgElement) {\n            if(!me.svgAssignedAndSizeSet) {\n                if(!me.svg && el['tagName'] === 'svg') {\n                    const appended = origAppend.apply(this, arguments);\n                    me.setupElementsIfSvgExists(<SVGElement & SsvgElement> <any> el);\n                    return appended;\n                    \n                } else {\n                    return origAppend.apply(this, arguments);\n                }\n            }\n            \n            if(!me.isWithinSvg(this)) {\n                return origAppend.apply(this, arguments);\n            }\n\n            Object.defineProperty(el, 'ownerSVGElement', {\n                writable: true,\n                value: me.svg\n            });\n            el['appendChild'] = <T extends Node>(el2: T) => {\n                return me.getNewAppendChild(origAppend).call(el, el2);\n            };\n\n            const parentNode = me.domHandler.getNodeFromElement(this);\n            if(!parentNode) {\n                return console.error('parent node not found', this);\n            }\n            let node: VdomNode;\n            let keepChildren = false;\n\n            if(el.globalElementIndex) {\n                node = me.domHandler.getVisNode(el);\n\n                me.getNewRemoveChild(() => {}).call(this, el);\n                keepChildren = true; // If the element is being moved around, keep children.\n            } else {\n                node = me.domHandler.getNodeDataFromEl(el);\n            }\n\n            Object.defineProperty(el, 'style', {\n                writable: true,\n                value: {\n                    setProperty: function(styleProp: string, value: string) {\n                        me.domHandler.queueSetAttributeOnElement(el, 'style;' + styleProp, value);\n                    },\n                    getPropertyValue: function(styleProp) {\n                        me.domHandler.enableFrontendDesignProperties();\n                        return node.style[styleProp];\n                    },\n                    removeProperty: function() {\n                        console.log('remove property not yet implemented.');\n                        //TODO implement removeProperty CSS function.\n                    }\n                }\n            });\n\n            Object.defineProperty(el, 'parentNode', {\n                writable: true,\n                value: this\n            });\n    \n            me.domHandler.linkNodeToElement(node, el);\n            me.vdom.addNodeToParent(node, parentNode.globalElementIndex);\n            me.domHandler.restyleNode(node);\n\n            if(me.useWorker) {\n                me.enterExitQueue.push({\n                    cmd: 'ENTER',\n                    node: node,\n                    parentGlobalIndex: parentNode.globalElementIndex,\n                    keepChildren: keepChildren\n                });\n            } else {\n                if(me.renderer.addNode) {\n                    me.renderer.addNode(node);\n                }\n            }\n    \n            if(me.unassignedNodes.indexOf(el) !== -1) {\n                const index = me.unassignedNodes.indexOf(el);\n                me.unassignedNodes.splice(index, 1);\n            }\n    \n            return el;\n        };\n    }\n    \n    private replaceNativeAppendChild() {\n        const origAppendChild = Element.prototype.appendChild;\n        const newAppend = this.getNewAppendChild(origAppendChild);\n    \n        Element.prototype.appendChild = newAppend;\n        Element.prototype.insertBefore = function<T extends Node>(newChild: T, refChild: Node|null) {\n    \n            newAppend.call(this, newChild);\n            \n            return newChild;\n        };\n    }\n\n    private replaceNativePathFunctions() {\n        const me = this;\n        //const origGetPointAtLength = SVGPathElement.prototype.getPointAtLength;\n        const origGetTotalLength = SVGPathElement.prototype.getTotalLength;\n\n        /*SVGPathElement.prototype.getPointAtLength = function() {\n            if(me.isWithinSvg(this)) {\n                const d = this.getAttribute('d');\n                me.origSetAttribute.call(this, 'd', d);\n            }\n            return origGetPointAtLength.apply(this, arguments);\n        };*/\n        SVGPathElement.prototype.getTotalLength = function() {\n            if(me.isWithinSvg(this)) {\n                const d = this.getAttribute('d');\n                me.origSetAttribute.call(this, 'd', d);\n            }\n\n            return origGetTotalLength.apply(this, arguments);\n        };\n    }\n\n    private origSetAttribute;\n\n    private replaceNativeAttribute() {\n        const origSetAttr = Element.prototype.setAttribute;\n        this.origSetAttribute = origSetAttr;\n        const origSetAttrNS = Element.prototype.setAttributeNS;\n        const origGetAttr = Element.prototype.getAttribute;\n        const me = this;\n    \n        Element.prototype.setAttribute = function(this: SsvgElement, name: string, value: any) {\n            if(name === 'easypz' || me.unassignedNodes.indexOf(this) !== -1) {\n                // Update the original SVG\n                origSetAttr.apply(this, arguments);\n                return;\n            }\n            if(name === 'class') {\n                origSetAttr.apply(this, arguments);\n            }\n            if(!me.isWithinSvg(this)) {\n                return origSetAttr.apply(this, arguments);\n            }\n            me.domHandler.queueSetAttributeOnElement(this, name, value);\n        };\n        //TODO: Figure out how to access the element when setting a style property.\n        /*CSSStyleDeclaration.prototype.setProperty = function(name: string, value: any) {\n            safeLog(this, arguments);\n            me.elementHandler.queueSetAttributeOnElement(this, 'style;' + name, value);\n        };*/\n        Element.prototype.setAttributeNS = function(this: SsvgElement, name: string, value: any) {\n            if(name === 'easypz' || me.unassignedNodes.indexOf(this) !== -1) {\n                // Update the original SVG\n                origSetAttrNS.apply(this, arguments);\n                return;\n            }\n            if(name === 'class') {\n                origSetAttrNS.apply(this, arguments);\n            }\n            if(!me.isWithinSvg(this)) {\n                return origSetAttrNS.apply(this, arguments);\n            }\n            me.domHandler.queueSetAttributeOnElement(this, name, value);\n        };\n    \n        Element.prototype.getAttribute = function(this: SsvgElement, name) {\n            if(me.unassignedNodes.indexOf(this) !== -1) {\n                return origGetAttr.apply(this, arguments);\n            } else {\n                try {\n                    return me.domHandler.getAttributeFromSelector(this, name);\n                } catch(e) {\n                    console.error(e);\n                    return origGetAttr.apply(this, arguments);\n                }\n            }\n        };\n    }\n    \n    private propagateMouseEvent(evt: MouseEvent, type?: string) {\n        return this.propagateEvent(new MouseEvent(type? type : evt.type, evt));\n    }\n\n    private duplicateTouchEvent(evt: TouchEvent, type?: string) {\n        const e = document.createEvent('TouchEvent');\n        if(!type) {\n            type = evt.type;\n        }\n        e.initEvent(type, true, false);\n        for(const prop in evt) {\n            if(prop !== 'isTrusted' && evt.hasOwnProperty(prop)) {\n                Object.defineProperty(e, prop, {\n                    writable: true,\n                    value: evt[prop],\n                });\n            }\n        }\n        Object.defineProperty(e, 'type', {\n            writable: true,\n            value: type,\n        });\n        const touches = [];\n        for(let i = 0; i < evt.touches.length; i++) {\n            const touch = evt.touches[i];\n            touches.push({identifier: touch.identifier, pageX: touch.pageX, pageY: touch.pageY,\n                clientX: touch.clientX, clientY: touch.clientY});\n        }\n        Object.defineProperty(e, 'touches', {\n            writable: true,\n            value: touches,\n        });\n        return e;\n    }\n\n    private propagateTouchEvent(evt: TouchEvent, type?: string) {\n        return this.propagateEvent(this.duplicateTouchEvent(evt, type));\n    }\n    \n    private propagateWheelEvent(evt: WheelEvent) {\n        return this.propagateEvent(new WheelEvent(evt.type, evt));\n    }\n    \n    private propagateEvent(new_event: MouseEvent|TouchEvent|WheelEvent): undefined|Element {\n        this.svg.dispatchEvent(new_event); // for EasyPZ\n\n        let triggeredElement: undefined|Element;\n        const {x, y} = SSVG.getMousePosition(new_event);\n\n        for(let interactionSel of this.interactionSelections)\n        {\n            let parentNode = this.domHandler.getVisNode(interactionSel)\n            \n            //let matchingVisParent = selectedNodes[i];\n            let j = 1;\n            \n            if(!parentNode) {\n                //console.error(interactionSel, parentSelector, parentNode);\n            } else {\n                for(let vdomNode of parentNode.children)\n                {\n                    let childNode = this.nodeAtPosition(vdomNode, x - 10, y - 10);\n\n                    if(childNode)\n                    {\n                        const svgEl = this.domHandler.getElementFromNode(vdomNode);\n                        const svgChildEl = this.domHandler.getElementFromNode(childNode);\n\n                        if(svgChildEl) {\n                            Object.defineProperty(new_event, 'target', {\n                                writable: true,\n                                value: svgChildEl\n                            });\n                        }\n\n                        if(svgChildEl) {\n                            triggeredElement = svgChildEl;\n                            svgChildEl.dispatchEvent(new_event);\n                        }\n\n                        if(svgEl !== svgChildEl) {\n                            if(!triggeredElement) {\n                                triggeredElement = svgEl;\n                            }\n                            svgEl.dispatchEvent(new_event);\n                        }\n                    }\n                    j++;\n                }\n            }\n        }\n        return triggeredElement;\n    }\n\n    //TODO move this function somewhere else.\n    private static getMousePosition(event: MouseEvent|TouchEvent) : {x: number, y: number}|null\n    {\n        let pos = {x: 0, y: 0};\n\n        const mouseEvents = ['wheel', 'click', 'mousemove', 'mousedown', 'mouseup', 'dblclick', 'contextmenu',\n            'mouseenter', 'mouseleave', 'mouseout', 'mouseover'];\n        if(mouseEvents.indexOf(event.type) !== -1 && event['clientX']) {\n            pos = {x: event['clientX'], y: event['clientY']};\n        } else if(event.type.substr(0,5) === 'touch') {\n            const touches = event['touches'] ? event['touches'] : [];\n            if(touches.length < 1) return null;\n            pos = {x: touches[0].clientX, y: touches[0].clientY};\n        } else {\n            safeErrorLog('no event pos for event type ', event);\n        }\n\n        return pos;\n    }\n    \n    private nodeAtPosition(visNode: VdomNode, x: number, y: number): false|VdomNode {\n        if (visNode.type === 'circle') {\n            let cx = this.vdom.get(visNode, 'cx') || 0;\n            let cy = this.vdom.get(visNode, 'cy') || 0;\n            if (visNode.transform) {\n                const transform = DrawingUtils.parseTransform(visNode.transform);\n                if (transform.translateX) {\n                    cx += transform.translateX;\n                }\n                if (transform.translateY) {\n                    cy += transform.translateY;\n                }\n            }\n            const distance = Math.sqrt(Math.pow(cx - x, 2) + Math.pow(cy - y, 2));\n            return distance < visNode.r ? visNode : false;\n        } else if(visNode.type === 'rect' || visNode.type === 'image') {\n\n            let elX = this.vdom.get(visNode, 'x') || 0;\n            let elY = this.vdom.get(visNode, 'y') || 0;\n            const width = visNode.width;\n            const height = visNode.height;\n\n            if (visNode.transform) {\n                const transform = DrawingUtils.parseTransform(visNode.transform);\n                if (transform.translateX) {\n                    elX += transform.translateX;\n                }\n                if (transform.translateY) {\n                    elY += transform.translateY;\n                }\n            }\n\n            const centerX = elX + width / 2;\n            const centerY = elY + height / 2;\n\n            const distanceX = Math.abs(centerX - x);\n            const distanceY = Math.abs(centerY - y);\n\n            return distanceX < width / 2 && distanceY < height / 2 ? visNode : false;\n\n        } else if(visNode.type === 'g') {\n\n            const transform = this.domHandler.getTotalTransformation(visNode);\n            if(transform.translateX) {\n                x -= transform.translateX;\n            }\n            if(transform.translateY) {\n                y -= transform.translateY;\n            }\n\n            let matchAny: false|VdomNode = false;\n            for(let i = 0; i < visNode.children.length; i++) {\n                if(this.nodeAtPosition(visNode.children[i], x, y)) {\n                    matchAny = visNode.children[i];\n                }\n            }\n            return matchAny;\n        }\n        return false;\n    }\n    \n    private logDrawn() {\n        this.lastCanvasDrawTimes.push(Date.now());\n        \n        if(this.lastCanvasDrawTimes.length > 20) {\n            this.lastCanvasDrawTimes.shift(); // Remove first item\n        }\n    }\n    \n    private updateFps() {\n        if(this.lastCanvasDrawTimes.length) {\n            const timeForTenDrawsMs = Date.now() - this.lastCanvasDrawTimes[0];\n            const fps = Math.round(this.lastCanvasDrawTimes.length / timeForTenDrawsMs * 1000);\n            this.getFps(fps);\n        }\n    }\n\n    private sendUpdateToWorker(queue) {\n        const msg: CanvasUpdateWorkerMessage = {\n            cmd: 'UPDATE_NODES',\n            data: {\n                enterExit: this.enterExitQueue,\n                update: queue,\n            }\n        };\n\n        this.syncWorker.postMessage(msg);\n        //this.worker.postMessage(msg);\n        this.enterExitQueue = [];\n    }\n}\n\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 200) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 200) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import {VDOM, VdomNode, VdomNodeType} from \"../util/vdom/vdom\";\nimport {VdomManager} from \"../util/vdom/vdom-manager\";\nimport DrawingUtils, {Transformation} from \"../canvasworker/drawingUtils\";\nimport drawingUtils from \"../canvasworker/drawingUtils\";\nimport {CSS_STYLES, RELEVANT_ATTRS, ROUNDED_ATTRS} from \"./attrs\";\n\nexport default class Domhandler {\n    private readonly vdom: VdomManager;\n    nodes: {[globalElementIndex: number]: VdomNode} = {};\n    elements: {[globalElementIndex: number]: SsvgElement} = {};\n    private nodesToRestyle: VdomNode[] = [];\n    private maxGlobalElementIndex = 0;\n    private removedNodeIndices: number[] = [];\n\n    constructor(private svg: SVGElement & SsvgElement, useWorker: boolean, private ignoreDesign: boolean) {\n        const visData: VDOM = {\n            type: 'svg',\n            width: parseInt(this.svg.getAttribute('width')),\n            height: parseInt(this.svg.getAttribute('height')),\n            scale: 1,\n            children: [],\n            globalElementIndex: 0,\n            style: {},\n            css: {},\n        };\n\n        this.vdom = new VdomManager(visData, ignoreDesign, false);\n        this.linkNodeToElement(visData, this.svg);\n        this.svg.style.display = 'none';\n        this.svg['selector'] = 'svg';\n\n        this.addChildNodesToVisData(this.svg.childNodes, this.vdom.data);\n    }\n\n    hasChanges() {\n        return this.nodesToRestyle.length > 0;\n    }\n\n    enableFrontendDesignProperties() {\n        this.ignoreDesign = false;\n        this.vdom.enableFrontendDesignProperties();\n    }\n    \n    getVDom() {\n        return this.vdom;\n    }\n    \n    queueSetAttributeOnElement(element: SsvgElement, attrName: string,\n                               value: (number|string|((el: HTMLElement) => (number|string)))) {\n        //TODO: merge with updatePropertiesFromQueue from VdomManager?\n        this.vdom.ensureInitialized(attrName, false);\n\n        const node = this.getNodeFromElement(element);\n\n        const parentIndices = this.getNodeFromElement(element.parentNode as SsvgElement)\n            .children.map(n => n.globalElementIndex);\n        const index = parentIndices.indexOf(node.globalElementIndex);\n        const evaluatedValue = typeof value === \"function\" ?\n            value.call(element, element.__data__, index) : value;\n\n        if(!node) {\n            console.error('node not found for ', element);\n            return;\n        }\n        this.vdom.set(node, attrName, evaluatedValue, false);\n\n        if(attrName === \"href\") {\n            safeLog('href not yet supported.');\n            /*\n            try {\n                fetch(location.origin + evaluatedValue, {mode: 'cors'})\n                    .then(resp => resp.blob())\n                    .then(blob => createImageBitmap(blob))\n                    .then(bitmap => {\n                        this.vdom.ensureInitialized('image', false);\n                        this.vdom.set(node, 'image', <string> bitmap, false);\n                    });\n            }\n            catch(e) {console.log(e);}\n            */\n        }\n\n        if(attrName === 'class' || attrName.indexOf('style') !== -1) {\n            // Apply classes immediately so styles can be applied correctly.\n            if(attrName === 'class') {\n                node.className = evaluatedValue;\n                this.nodesToRestyle.push(node);\n            } else {\n                const styleName = attrName.substr(6);\n                if(!node.style) {\n                    console.error('no styles on node ', node);\n                }\n                node.style[styleName] = evaluatedValue;\n            }\n        }\n    }\n\n    queueSetAttributeOnSelection(elements: SsvgElement[], attrName: string, value) {\n        if(!elements.length) return;\n        if(!elements[0]) {\n            //console.error('selection elements not found', elements);\n            return;\n        }\n\n        this.vdom.ensureInitialized(attrName, true, this.maxGlobalElementIndex);\n        const parentIndices = this.getNodeFromElement(elements[0].parentNode as SsvgElement)\n            .children.map(n => n.globalElementIndex);\n\n        for(let i = 0; i < elements.length; i++) {\n            const svgEl = elements[i];\n            const evaluatedValue = typeof value === \"function\"\n                ? value(svgEl.__data__, i) : value;\n\n            this.vdom.set(svgEl, attrName, evaluatedValue);\n\n            //TODO: re-implement.\n            /*if(attrName === \"href\") {\n                try {\n                    fetch(location.origin + evaluatedValue, {mode: 'cors'})\n                    .then(resp => resp.blob())\n                    .then(blob => createImageBitmap(blob))\n                    .then(bitmap => {\n                        //this.checkAttrName(parentSelector, \"image\", useSharedArray, parentNode);\n                        this.setAttrQueue.ensureInitialized(\"image\", false);\n                        this.setAttrQueue[parentSelector][\"image\"][indexOfParent] = bitmap;\n                    });\n                }\n                catch(e) {console.log(e);}\n            }*/\n        }\n\n        if(attrName === 'className' || attrName.indexOf('style') !== -1) {\n            // Apply classes immediately so styles can be applied correctly.\n            for(let i = 0; i < elements.length; i++) {\n                const node = this.getNodeFromElement(elements[i]);\n                const evaluatedValue = typeof value === \"function\" ? value(elements[i].__data__, i) : value;\n\n                if(attrName === 'className') {\n                    node.className = evaluatedValue;\n                    this.nodesToRestyle.push(node);\n                } else {\n                    const styleName = attrName.substr(6);\n                    node.style[styleName] = evaluatedValue;\n                }\n            }\n        }\n    }\n\n    getAttributeFromSelector(element: SsvgElement, name: string) {\n        const node = this.getNodeFromElement(element);\n        \n        if(!node) {\n            console.error('trying to get attribute for unfit selection', node, element, name);\n            throw Error('element not found');\n        }\n        \n        return node[name];\n    }\n    \n    getVisNode(element: SsvgElement): VdomNode|null {\n        if(element === this.svg) {\n            return this.vdom.data;\n        }\n        return this.vdom.getNodeFromIndex(element.globalElementIndex);\n    }\n    \n    getNodeDataFromEl(el: HTMLElement): VdomNode {\n        const type = el.tagName.toLowerCase() as VdomNodeType;\n        const node = {\n            type,\n            className: el.getAttribute('class'),\n            transform: el.getAttribute('transform'),\n            id: el.getAttribute('id'),\n            style: {},\n            css: {},\n            children: [],\n            globalElementIndex: -1,\n            text: !el.childNodes || (el.childNodes.length === 1 && !(el.childNodes[0] as HTMLElement).tagName)\n                ? el.textContent : undefined,\n        };\n\n        for(const attr of RELEVANT_ATTRS[type]) {\n            if(el.hasAttribute(attr)) {\n                const value = el.getAttribute(attr);\n                node[attr] = ROUNDED_ATTRS[attr] ? parseFloat(value) : value;\n            }\n        }\n\n        this.copyStylesFromElement(el, node);\n\n        /*const clean = obj => {\n            const propNames = Object.getOwnPropertyNames(obj);\n            for (let i = 0; i < propNames.length; i++) {\n                const propName = propNames[i];\n                if (obj[propName] === null || obj[propName] === undefined) {\n                    delete obj[propName];\n                }\n            }\n        };\n        \n        clean(node);*/\n        \n        return node;\n    }\n\n    copyStylesFromElement(el: HTMLElement, node: VdomNode) {\n        for(const styleProp of CSS_STYLES) {\n            if(el.style.hasOwnProperty(styleProp)) {\n                const val = el.style[styleProp];\n                if(val && typeof el.style[styleProp] !== 'function') {\n                    const kebabCase = styleProp.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n                    node.style[kebabCase] = el.style[styleProp];\n                }\n            }\n        }\n    }\n\n    applyStyles() {\n        if(!this.nodesToRestyle || !this.nodesToRestyle.length) {\n            return;\n        }\n\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            const sheet = document.styleSheets[i] as any;\n            const rules = (sheet.rules ? sheet.rules : sheet.cssRules) as CSSRuleList;\n        \n            for (let j = 0; j < rules.length; j++) {\n                const rule = rules[j] as any;\n                const selector = rule.selectorText as string;\n                if(!selector) {\n                    continue; // Skip @imports etc.\n                }\n                this.applyRuleToMatchingNodes(selector, rule);\n            }\n        }\n\n        this.nodesToRestyle = [];\n    }\n\n    private applyRuleToMatchingNodes(selectorString: string, rule: {style: {[settingName: string]: string}}): boolean {\n        selectorString = selectorString.trim();\n\n        const selector = selectorString\n            .replace(' >', '>')\n            .replace('> ', '>')\n            .replace('svg>', '');\n        \n        const selectorPartsLooseStrict = selector.split(' ')\n            .map(part => part.split('>'));\n\n        // Find all relevant element IDs.\n        const relevantIds = this.nodesToRestyle.map(n => n.globalElementIndex);\n        for(const nodeToBeStyled of this.nodesToRestyle) {\n            if(nodeToBeStyled) { // I don't know why, but there are null values in there.\n                let parent = this.getNodeParent(nodeToBeStyled);\n                while(parent && relevantIds.indexOf(parent.globalElementIndex) === -1) {\n                    relevantIds.push(parent.globalElementIndex);\n                    parent = this.getNodeParent(parent);\n                }\n            }\n        }\n        const relevantIdMap: {[globalElementIndex: number]: true} = {};\n        for(const index of relevantIds) {\n            relevantIdMap[index] = true;\n        }\n\n        const setStyle = (styleName: string, rule: {style: {[settingName: string]: string}}, child: VdomNode) => {\n            if(rule.style[styleName]) {\n                const longSpecName = `css;${selectorString};${styleName}`;\n                this.vdom.ensureInitialized(longSpecName);\n\n                this.vdom.set(child, longSpecName, rule.style[styleName]);\n            }\n        };\n\n        const checkNode = (currentNode: VdomNode, looseIndex = 0, strictIndex = 0): boolean => {\n            const selPart = selectorPartsLooseStrict[looseIndex][strictIndex];\n\n            for(let childIndex = 0; childIndex < currentNode.children.length; childIndex++) {\n                const child = currentNode.children[childIndex];\n                if(!relevantIdMap[child.globalElementIndex]) {\n                    continue;\n                }\n                let partialMatch = VdomManager.isCssRulePartialMatch(selPart, child, currentNode);\n\n                if(partialMatch) {\n                    if(selectorPartsLooseStrict[looseIndex].length > strictIndex + 1) {\n                        checkNode(child, looseIndex, strictIndex + 1);\n                    } else if(selectorPartsLooseStrict.length > looseIndex + 1) {\n                        checkNode(child, looseIndex + 1, strictIndex);\n                    } else {\n                        if(!child.css[selectorString]) {\n                            for(const styleName of CSS_STYLES) {\n                                setStyle(styleName, rule, child);\n                            }\n                        }\n                    }\n                } else {\n                    if(child['removedClasses']) {\n                        // temporarily add the class, see if it matches this rule, and if so, un-apply its stuff.\n                        for(const removedClass of child['removedClasses']) {\n                            child.className += ' ' + removedClass;\n\n                            let newPartialMatch = VdomManager.isCssRulePartialMatch(selPart, child, currentNode);\n                            if(newPartialMatch) {\n                                this.removeRuleStylesFromNode(selectorString, child);\n                            }\n\n                            child.className = child.className.substr(0, child.className.length -\n                                removedClass.length - 1);\n                        }\n                        setTimeout(() => {\n                            delete child['removedClasses'];\n                        }); // After this frame, reset which classes have been removed.\n                    }\n                    checkNode(child, looseIndex, strictIndex);\n                }\n            }\n            return false;\n        };\n\n        return checkNode(this.vdom.data);\n    }\n\n    removeRuleStylesFromNode(selector: string, child: VdomNode) {\n        if(child.css[selector]) {\n            this.vdom.ensureInitialized(`css;${selector};*`);\n            this.vdom.set(child, `css;${selector};*`, '');\n        }\n    }\n\n    removeNode(element: SsvgElement, node: VdomNode, parentNode: VdomNode) {\n        //console.log('removing', node, 'from', parentNode, [...parentNode.children], childIndex, childIndex2);\n        this.vdom.removeNode(node, parentNode);\n\n        this.nodes[node.globalElementIndex] = null;\n        this.elements[element.globalElementIndex] = null;\n\n        const restyleIndex = this.nodesToRestyle.indexOf(node);\n        if(restyleIndex !== -1) {\n            this.nodesToRestyle.splice(restyleIndex, 1);\n        }\n        this.removedNodeIndices.push(element.globalElementIndex);\n    }\n\n    restyleNode(node: VdomNode) {\n        if(!this.nodes[node.globalElementIndex] || this.nodes[node.globalElementIndex] !== node) {\n            console.error(node);\n            throw new Error('restyling incorrect node');\n        }\n        this.nodesToRestyle.push(node);\n    }\n    \n    private addChildNodesToVisData(childEls: SsvgElement[]|NodeList, parentNode: VdomNode) {\n\n        for(let i  = 0; i < childEls.length; i++) {\n            let el = childEls[i] as SsvgElement;\n\n            try {\n                const node = this.getNodeDataFromEl(el);\n\n                parentNode.children.push(node);\n                this.linkNodeToElement(node, el);\n                this.nodesToRestyle.push(node);\n                \n                if(el.childNodes)\n                {\n                    this.addChildNodesToVisData(el.childNodes, node);\n                }\n                if(node.type === 'tspan')\n                {\n                    //console.log(node, el, el.childNodes, el.textContent);\n                    //console.log(el.childNodes[0])\n                    //console.log(node, style.textAnchor);\n                }\n                if(node.type === 'text')\n                {\n                    //console.log(node, el, el.childNodes, el.textContent);\n                }\n            }\n            catch(e)\n            {\n                //console.log(e);\n                //console.log(el);\n            }\n        }\n    }\n\n    combineElementSelectors(parentSelector: string, elementType: string, childIndex: number) {\n        return parentSelector + ' > ' + elementType + ':nth-child(' + childIndex + ')';\n    }\n\n    getNodeParent(node: VdomNode): VdomNode|null {\n        if(node === this.vdom.data) {\n            return null;\n        }\n        const el = this.getElementFromNode(node);\n        if(!el) {\n            console.error('can not find element for node ', node);\n            return null;\n        }\n        const parentEl = el.parentNode as SsvgElement;\n        return this.getNodeFromElement(parentEl);\n    }\n\n    private getNewElementIndex() {\n        if(this.removedNodeIndices.length) {\n            return this.removedNodeIndices.shift();\n        }\n        this.maxGlobalElementIndex++;\n        return this.maxGlobalElementIndex - 1;\n    }\n\n    linkNodeToElement(node: VdomNode, element: SsvgElement) {\n        const index = this.getNewElementIndex();\n        node.globalElementIndex = index;\n        element.globalElementIndex = index;\n\n        this.nodes[index] = node;\n        this.elements[index] = element;\n\n        this.vdom.addNode(node);\n    }\n\n    getElementFromNode(node: VdomNode): SsvgElement {\n        if(node === this.vdom.data) {\n            return this.svg;\n        }\n        return this.elements[node.globalElementIndex];\n    }\n\n    getNodeFromElement(element: SsvgElement): VdomNode {\n        if(element === this.svg) {\n            return this.vdom.data;\n        }\n        return this.vdom.getNodeFromIndex(element.globalElementIndex);\n    }\n\n    getParentNode(node: VdomNode): VdomNode|null {\n        const element = this.getElementFromNode(node);\n        const parentElement = element.parentNode as SsvgElement;\n        return this.getNodeFromElement(parentElement);\n    }\n\n    getTotalTransformation(node: VdomNode): Transformation {\n        let parent = this.getParentNode(node);\n        const parents = [node];\n\n        while(parent) {\n            parents.push(parent);\n            parent = this.getParentNode(parent);\n        }\n\n        parent = parents.pop();\n        let totalTransform: Transformation = {\n            translateX: 0,\n            translateY: 0,\n            scaleX: 0,\n            scaleY: 0,\n            rotate: 0,\n            translateBeforeScale: false,\n            rotateLast: false,\n        };\n\n        while(parent) {\n            const transform = DrawingUtils.parseTransform(parent.transform);\n            totalTransform = DrawingUtils.addTransforms(totalTransform, transform);\n            parent = parents.pop();\n        }\n\n        return totalTransform;\n    }\n}\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n\nexport type SsvgElement = HTMLElement & {\n    __data__: any,\n    globalElementIndex: number,\n};\n","import SetPropertyQueueData, {AttrValues} from \"./set-property-queue-data\";\nimport {VDOM, VdomNode} from \"./vdom\";\nimport {SsvgElement} from \"../../frontend/domhandler\";\n\ninterface SharedDataStore {\n    values: {[attrName: string]: Int32Array},\n    buffers: {[attrName: string]: SharedArrayBuffer}\n}\n\nexport class VdomManager {\n    private sharedRenderData: SharedDataStore = {values: {}, buffers: {}};\n    private syncedSharedData: SharedDataStore = {values: {}, buffers: {}};\n    private sharedDataQueue: SharedDataStore = {values: {}, buffers: {}};\n    private queue: SetPropertyQueueData = {};\n    private useSharedArrayFor = ['cx', 'cy', 'x1', 'x2', 'y1', 'y2', 'x', 'y'];\n    private static IGNOREDESIGN_ATTRIBUTES = ['fill', 'stroke', 'opacity'];\n    private indexToNodeMap: {[index: number]: VdomNode} = {};\n    private static BUFFER_PRECISION_FACTOR = 10;\n    private changed = false;\n\n    constructor(public data: VDOM, private ignoreDesign: boolean, private isRenderer: boolean) {\n        this.ensureNodesMapped();\n    }\n\n    ensureInitialized(attrName: string, useBuffer = true, numNodes?: number) {\n        if(attrName === 'class') {\n            attrName = 'className';\n        }\n\n        if(!useBuffer || this.useSharedArrayFor.indexOf(attrName) === -1) {\n            if(!this.queue[attrName]) {\n                this.queue[attrName] = {};\n            }\n        } else {\n            const newLength = numNodes < 500 ? 1000 : Math.round(numNodes * 2);\n\n            if(!this.sharedDataQueue.values[attrName]) {\n                let prevData: AttrValues;\n\n                // If values have been previously set without a buffer, transfer them.\n                if(this.queue[attrName] && !(this.queue[attrName] instanceof SharedArrayBuffer)) {\n                    prevData = <AttrValues> this.queue[attrName];\n                }\n\n                const {buffer, values} = this.createBufferTransferValues(newLength, undefined, prevData);\n                this.sharedDataQueue.values[attrName] = values;\n                this.sharedDataQueue.buffers[attrName] = buffer;\n                this.queue[attrName] = buffer;\n            } else {\n                const newByteLength = Int32Array.BYTES_PER_ELEMENT * newLength;\n                if(this.sharedDataQueue.values[attrName].byteLength / newByteLength < 0.6) {\n                    // Need to allocate more space\n                    const {buffer, values} = this.createBufferTransferValues(newLength,\n                        this.sharedDataQueue.values[attrName]);\n                    this.sharedDataQueue.values[attrName] = values;\n                    this.sharedDataQueue.buffers[attrName] = buffer;\n                }\n            }\n        }\n    }\n\n    createBufferTransferValues(length: number, prevBufferVals?: Int32Array,\n                               prevData?: AttrValues) {\n        let buffer = new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * length);\n        const values = new Int32Array(buffer);\n\n        // If values have been previously set without a buffer, transfer them.\n        if(prevData) {\n            for(const index in prevData) {\n                if(prevData.hasOwnProperty(index)) {\n                    let value = prevData[index];\n                    if(typeof value === 'string') {\n                        value = parseFloat(value);\n                    }\n                    values[index] = value * VdomManager.BUFFER_PRECISION_FACTOR;\n                }\n            }\n        }\n\n        // If values have been previously set in a buffer, transfer them.\n        if(prevBufferVals) {\n            for(let i = 0; i < prevBufferVals.length; i++) {\n                if(prevBufferVals[i]) {\n                    values[i] = prevBufferVals[i];\n                }\n            }\n        }\n\n        return {buffer, values};\n    }\n\n    set(element: VdomNode|SsvgElement, attrName: string, value: string|number, useBuffer = true) {\n        if(attrName === 'class') {\n            attrName = 'className';\n        }\n        if(element.globalElementIndex === undefined) {\n            console.error('No index', element);\n            throw new Error('Element has no index');\n        }\n        const index = element.globalElementIndex;\n        const storage = useBuffer && this.useSharedArrayFor.indexOf(attrName) !== -1 ? 'shared' : 'raw';\n        try {\n            this.changed = true;\n            if(storage === 'shared') {\n                if(typeof value === 'string') {\n                    value = parseFloat(value);\n                }\n                value *= VdomManager.BUFFER_PRECISION_FACTOR;\n                value = Math.round(value); // This helps detect zeros.\n                if(value === 0) {\n                    value = 56938516; // magical constant\n                }\n\n                this.sharedDataQueue.values[attrName][index] = value;\n            } else {\n                this.queue[attrName][index] = value;\n                if(this.sharedDataQueue.values[attrName] && this.syncedSharedData.values[attrName][index]) {\n                    // un-set.\n                    this.sharedDataQueue.values[attrName][index] = 0;\n                }\n            }\n        }\n        catch(e) {\n            console.error(e);\n            console.log(this.queue, this.syncedSharedData.values, storage, attrName, element, index);\n        }\n    }\n\n    removePendingChanges(node: VdomNode) {\n        const index = node.globalElementIndex;\n        for(const attrName in this.queue) {\n            if(this.queue.hasOwnProperty(attrName)) {\n                delete this.queue[attrName][index];\n            }\n        }\n        for(const attrName in this.sharedDataQueue.values) {\n            if(this.sharedDataQueue.values.hasOwnProperty(attrName)) {\n                this.sharedDataQueue.values[attrName][index] = 0;\n            }\n        }\n    }\n\n    ensureNodesMapped() {\n        const addToMap = (node: VdomNode) => {\n            if(node.globalElementIndex === undefined) {\n                console.error('no element index', node);\n            }\n            this.indexToNodeMap[node.globalElementIndex] = node;\n            for(const child of node.children) {\n                addToMap(child);\n            }\n        };\n        addToMap(this.data);\n    }\n\n    enableFrontendDesignProperties() {\n        this.ignoreDesign = false;\n    }\n\n    addNodeToParent(nodeData: VdomNode, parentNodeIndex: number) {\n        if(nodeData.type !== 'svg') {\n            const parentNode = this.getNodeFromIndex(parentNodeIndex);\n            if(!parentNode) {\n                console.error('could not add node without parent', parentNodeIndex, nodeData,\n                    Object.keys(this.indexToNodeMap));\n                new Error('parent not found');\n                return;\n            }\n            parentNode.children.push(nodeData);\n        }\n    }\n\n    addNode(node: VdomNode) {\n        this.indexToNodeMap[node.globalElementIndex] = node;\n    }\n\n    removeNode(node: VdomNode, parent: VdomNode) {\n        delete this.indexToNodeMap[node.globalElementIndex];\n        const childIndex = parent.children.indexOf(node);\n\n        parent.children.splice(childIndex, 1);\n        this.cachedListSelections = {}; //TODO only remove relevant cache.\n\n        this.removePendingChanges(node);\n    }\n\n    applyStyleToNodeAndChildren(node: VdomNode, styleName: string, styleValue: string,\n                                onNodeUpdated: (node: VdomNode, attrName: string) => void) {\n        node.style[styleName] = styleValue;\n        onNodeUpdated(node, styleName);\n\n        if(node.children) {\n            for(let child of node.children) {\n                this.applyStyleToNodeAndChildren(child, styleName, styleValue, onNodeUpdated);\n            }\n        }\n    }\n\n    applyCssToNodeAndChildren(node: VdomNode, selector: string, styleName: string, value: string,\n                              onNodeUpdated: (node: VdomNode, attrName: string) => void) {\n        if(styleName === '*' && !value) {\n            delete node.css[selector];\n        } else {\n            if(!node.css[selector]) {\n                node.css[selector] = {};\n            }\n            node.css[selector][styleName] = value;\n        }\n        onNodeUpdated(node, styleName);\n\n        if(node.children) {\n            for(let child of node.children) {\n                this.applyCssToNodeAndChildren(child, selector, styleName, value, onNodeUpdated);\n            }\n        }\n    }\n\n    getNodeFromIndex(index: number): VdomNode {\n        return this.indexToNodeMap[index];\n    }\n\n    getNodeById(id: string): VdomNode {\n        const filtered = Object.values(this.indexToNodeMap).filter(node => node.id === id);\n        if(!filtered || filtered.length > 1) {\n            safeLog('multiple nodes with this id!', Object.values(this.indexToNodeMap)\n                .filter(node => node.id).map(node => node.id), id);\n            safeLog(filtered.length, filtered);\n        }\n        return !filtered || filtered.length !== 1 ? null : filtered[0];\n    }\n\n    private static ROUNDED_ATTRS = ['cx', 'cy'];\n\n    get(node: VdomNode, attrs: string|string[]) {\n        if(Array.isArray(attrs)) {\n            return attrs.map(attrName => this.getSingle(node, attrName));\n        } else {\n            return this.getSingle(node, attrs);\n        }\n    }\n\n    private getSingle(node: VdomNode, attrName: string) {\n        const data = this.isRenderer ? this.sharedRenderData.values : this.syncedSharedData.values;\n        if(data[attrName] && data[attrName][node.globalElementIndex]) {\n            const value = data[attrName][node.globalElementIndex];\n            if(value === 56938516) {\n                return 0;\n            }\n            return value / VdomManager.BUFFER_PRECISION_FACTOR;\n        } else {\n            return node[attrName];\n        }\n    }\n\n    hasChanges() {\n        return this.changed;\n    }\n\n    getQueue() {\n        return this.queue;\n    }\n\n    clearQueue() {\n        this.queue = {};\n        this.changed = false;\n    }\n\n    transferSyncedDataToRenderData() {\n        for(let attrName in this.syncedSharedData.values) {\n            this.queue[attrName] = this.syncedSharedData.buffers[attrName];\n            this.sharedRenderData.values[attrName] = this.syncedSharedData.values[attrName];\n\n            const length = this.syncedSharedData.buffers[attrName].byteLength / Int32Array.BYTES_PER_ELEMENT;\n            const {buffer, values} = this.createBufferTransferValues(length,\n                this.syncedSharedData.values[attrName]);\n\n            this.syncedSharedData.buffers[attrName] = buffer;\n            this.syncedSharedData.values[attrName] = values;\n        }\n    }\n\n    transferBufferQueueDataToSynced() {\n        for(let attrName in this.sharedDataQueue.values) {\n            this.queue[attrName] = this.sharedDataQueue.buffers[attrName];\n            this.syncedSharedData.values[attrName] = this.sharedDataQueue.values[attrName];\n\n            const length = this.sharedDataQueue.buffers[attrName].byteLength / Int32Array.BYTES_PER_ELEMENT;\n            const {buffer, values} = this.createBufferTransferValues(length,\n                this.sharedDataQueue.values[attrName]);\n\n            this.sharedDataQueue.buffers[attrName] = buffer;\n            this.sharedDataQueue.values[attrName] = values;\n        }\n    }\n\n    addToQueue(setAttrQueue: SetPropertyQueueData) {\n        for(let attrName in setAttrQueue) {\n            if(!setAttrQueue.hasOwnProperty(attrName)) {\n                continue;\n            }\n            if('SharedArrayBuffer' in self &&\n                setAttrQueue[attrName] instanceof SharedArrayBuffer) {\n                const buffer = <SharedArrayBuffer> setAttrQueue[attrName];\n                this.syncedSharedData.buffers[attrName] = buffer;\n                this.syncedSharedData.values[attrName] = new Int32Array(buffer);\n            } else {\n                const values: AttrValues = <AttrValues> setAttrQueue[attrName];\n\n                if(!this.queue[attrName]) {\n                    this.queue[attrName] = {};\n                }\n\n                for(let childIndex in values) {\n                    if(!values.hasOwnProperty(childIndex)) {\n                        continue;\n                    }\n                    const index = parseInt(childIndex);\n                    this.queue[attrName][index] = values[index];\n                }\n            }\n        }\n    }\n\n    updatePropertiesFromQueue(setAttrQueue: SetPropertyQueueData,\n                              onNodeUpdated: (node: VdomNode, attrName: string) => void = () => {}) {\n        for(let attrName in setAttrQueue) {\n            if(!setAttrQueue.hasOwnProperty(attrName)) {\n                continue;\n            }\n            const attrNameStart = attrName.substr(0, 'style;'.length);\n            if(this.ignoreDesign && (attrNameStart === 'style;' ||\n                VdomManager.IGNOREDESIGN_ATTRIBUTES.indexOf(attrName) !== -1)) {\n                continue;\n            }\n\n            let values: AttrValues|Int32Array;\n\n            if('SharedArrayBuffer' in self &&\n                setAttrQueue[attrName] instanceof SharedArrayBuffer) {\n                const buffer = <SharedArrayBuffer> setAttrQueue[attrName];\n                if(!this.isRenderer) {\n                    this.syncedSharedData.buffers[attrName] = buffer;\n                    this.syncedSharedData.values[attrName] = new Int32Array(buffer);\n                } else {\n                    this.sharedRenderData.buffers[attrName] = buffer;\n                    this.sharedRenderData.values[attrName] = new Int32Array(buffer);\n                }\n            } else {\n                values = <AttrValues> setAttrQueue[attrName];\n\n                for(let childIndex in values) {\n                    if(!values.hasOwnProperty(childIndex)) {\n                        continue;\n                    }\n                    const index = parseInt(childIndex);\n                    const childNode = this.getNodeFromIndex(index);\n                    if(!childNode) {\n                        console.error('node not found at index', index)\n                        continue;\n                    }\n                    let value: string|number = values[childIndex];\n                    if(attrNameStart === 'style;') {\n                        const styleName = attrName.substr('style;'.length);\n                        this.applyStyleToNodeAndChildren(childNode, styleName, <string> value, onNodeUpdated);\n                    } else if(attrName.substr(0, 4) === 'css;') {\n                        const [selector, styleName] = attrName.substr(4).split(';');\n                        this.applyCssToNodeAndChildren(childNode, selector, styleName, <string> value, onNodeUpdated);\n                    } else {\n                        if(VdomManager.ROUNDED_ATTRS.indexOf(attrName) !== -1) {\n                            if(typeof value === 'string') {\n                                value = parseFloat(value);\n                            }\n                            value = Math.round(value);\n                        }\n\n                        childNode[attrName] = value;\n                        onNodeUpdated(childNode, attrName);\n                    }\n                }\n            }\n        }\n    }\n    \n    private cachedListSelections: {[selector: string]: {[index: number]: VdomNode}} = {};\n    public getVisNodeFromSelector(selector: string): VdomNode|null {\n        const lastSplitPos = selector.lastIndexOf('>');\n        const selectorWithoutLast = selector.substr(0, lastSplitPos);\n        const lastPart = selector.substr(lastSplitPos + 1);\n        const parentSel = selectorWithoutLast ? this.cachedListSelections[selectorWithoutLast] : null;\n        let index = -1;\n        const nthChildPosition = lastPart.indexOf(':nth-child(');\n        if(nthChildPosition !== -1) {\n            index = parseInt(lastPart.substr(nthChildPosition + 11)); // length of ':nth-child('\n            if(parentSel && parentSel[index]) {\n                return parentSel[index];\n            }\n        }\n        \n        const selectedNodes: VdomNode[] = [];\n        this.findMatchingChildren(this.data, selector, 0, selectedNodes);\n        \n        if(selectedNodes && selectedNodes.length === 1) {\n            const el = selectedNodes[0];\n            if(index !== -1) {\n                if(!this.cachedListSelections[selectorWithoutLast]) {\n                    this.cachedListSelections[selectorWithoutLast] = {};\n                }\n                this.cachedListSelections[selectorWithoutLast][index] = el;\n            }\n            return el;\n        }\n        return null;\n    }\n    \n    public getVisNodesFromSelector(visNode: VdomNode, selector: string) {\n        const selectedNodes = [];\n        this.findMatchingChildren(visNode, selector, 0, selectedNodes);\n        return selectedNodes;\n    }\n\n    private findChildrenOfType(visNode: VdomNode, type: string, selectedNodes: VdomNode[]) {\n        const addDirectChildrenIfMatch = (node: VdomNode) => {\n            for(const child of node.children) {\n                if(child.type === type) {\n                    selectedNodes.push(child);\n                }\n                if(node.children.length !== 0) {\n                    addDirectChildrenIfMatch(child);\n                }\n            }\n        };\n        addDirectChildrenIfMatch(visNode);\n    }\n\n    public filterNodesBySelector(parentNode: VdomNode, nodes: VdomNode[], selector: string) {\n        return nodes.filter(node => VdomManager.isCssRulePartialMatch(selector, node, parentNode));\n    }\n    \n    private findMatchingChildren(visNode: VdomNode, selector: string, matchIndex: number, selectedNodes: VdomNode[],\n                                 selectedNodeSelectors: string[] = []) {\n        if(!selector && selector !== '') {\n            console.error(visNode, selector, matchIndex, selectedNodes, selectedNodeSelectors);\n            throw Error('undefined selector');\n        }\n\n        let selParts = selector.split('>').map(s => s.trim());\n        let selPart = selParts[matchIndex];\n        \n        if(matchIndex === 0 && selPart === 'svg') {\n            matchIndex++;\n            selPart = selParts[matchIndex];\n            if(matchIndex === selParts.length) {\n                selectedNodes.push(visNode);\n                selectedNodeSelectors.push(selector);\n                return;\n            }\n        }\n\n        if(selector.match(/^[a-z]+$/)) {\n            return this.findChildrenOfType(visNode, selector, selectedNodes);\n        }\n        \n        for(let i = 0; i < visNode.children.length; i++) {\n            let node = visNode.children[i];\n            let matching = false;\n            \n            if(VdomManager.isCssRulePartialMatch(selPart, node, visNode)) {\n                if(matchIndex === selParts.length - 1) {\n                    selectedNodes.push(node);\n                    selectedNodeSelectors.push(selector);\n                } else {\n                    matching = true;\n                }\n            }\n            \n            if(node.children && (matching || selParts.length < 2) && matchIndex + 1 < selParts.length) {\n                this.findMatchingChildren(node, selector, matchIndex + 1, selectedNodes, selectedNodeSelectors);\n            }\n        }\n    }\n\n    public static isCssRulePartialMatch(cssRuleSelectorPart: string, node: VdomNode, parentNode: VdomNode): boolean {\n        if(cssRuleSelectorPart.substr(0, 5) === ':not(') {\n            const newSelPart = cssRuleSelectorPart.substr(0, cssRuleSelectorPart.length - 1).substr(5);\n            return !VdomManager.isCssRulePartialMatch(newSelPart, node, parentNode);\n        }\n        if(cssRuleSelectorPart[0] === '.') { // Example: .className or .classnameA.classnameB\n            const searchClassNames = cssRuleSelectorPart.split('.');\n            searchClassNames.shift(); // remove empty first string.\n            if(node.className) {\n                let allTrue = true;\n                for(const searchClassName of searchClassNames) {\n                    if(node.className.split(' ').indexOf(searchClassName) === -1) {\n                        allTrue = false;\n                    }\n                }\n                return allTrue;\n            }\n        } else if(cssRuleSelectorPart[0] === '#') { // Example: #id\n            if(cssRuleSelectorPart.substr(1) === node.id) {\n                return true;\n            }\n        } else if(cssRuleSelectorPart.match(/^[a-z]+$/)) { // Example: rect\n            if(cssRuleSelectorPart === node.type) {\n                return true;\n            }\n        } else if(cssRuleSelectorPart.indexOf(':nth-child(') !== -1) {\n            let type = 'any';\n            let indexPart = cssRuleSelectorPart;\n\n            if(cssRuleSelectorPart[0] !== ':') {\n                type = cssRuleSelectorPart.substr(0, cssRuleSelectorPart.indexOf(':'));\n                indexPart = cssRuleSelectorPart.substr(cssRuleSelectorPart.indexOf(':'));\n            }\n\n            const targetIndex = parseInt(indexPart.substr(':nth-child('.length));\n            const index = parentNode.children.indexOf(node);\n\n            return (index === targetIndex - 1 && (type === 'any' || node.type === type));\n        }\n        else if(cssRuleSelectorPart.indexOf('.') !== -1) { // Example: rect.className\n            const cutoff = cssRuleSelectorPart.indexOf('.');\n            const typeName = cssRuleSelectorPart.substr(0, cutoff);\n            const className = cssRuleSelectorPart.substr(cutoff + 1);\n            if(typeName === node.type && node.className && node.className.split(' ').indexOf(className) !== -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    if(safeLogCount < 400) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    if(safeLogCount < 400) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import {VdomNodeType} from \"../util/vdom/vdom\";\n\nexport const CSS_STYLES = ['stroke', 'stroke-opacity', 'stroke-width', 'stroke-linejoin',\n    'fill', 'fill-opacity', 'font', 'opacity', 'font-family', 'font-size'];\n\n/*const RELEVANT_ATTRS2 = ['transform', 'd', 'id', 'r', 'fill', 'cx', 'cy', 'x', 'y', 'x1', 'x2', 'y1',\n    'y2', 'opacity', 'fill-opacity', 'width', 'height', 'stroke', 'stroke-opacity', 'stroke-width',\n    'font-size', 'font', 'font-family', 'text-anchor', 'href'];*/\n\n//'svg'|'g'|'rect'|'circle'|'path'|'title'|'tspan'|'text'|'image'|'clippath'|'line'\n\nexport const RELEVANT_ATTRS: {[type in VdomNodeType]: string[]} = {\n    'svg': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width',\n        'font-size', 'font', 'font-family', 'text-anchor'],\n    'g': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width',\n        'font-size', 'font', 'font-family', 'text-anchor', 'clip-path'],\n    'rect': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width', 'x','y',\n        'width', 'height', 'clip-path'],\n    'circle': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width', 'cx',\n        'cy', 'r', 'clip-path'],\n    'path': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width', 'd',\n        'clip-path'],\n    'title': [],\n    'tspan': ['dx', 'dy'],\n    'text': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width',\n        'font-size', 'font', 'font-family', 'text-anchor', 'href', 'x', 'y', 'dx', 'dy'],\n    'image': ['opacity', 'x', 'y', 'width', 'height'],\n    'clippath': ['id', 'fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity',\n        'stroke-width'],\n    'line': ['opacity', 'stroke', 'stroke-opacity', 'stroke-width', 'x1', 'x2', 'y1','y2',\n        'clip-path'],\n};\n\nconst ROUNDED_ATTRS_ARR = ['cx', 'cy', 'r', 'x', 'y', 'x1', 'x2', 'y1', 'y2', 'width', 'height',\n    'stroke-width'];\n\nexport const ROUNDED_ATTRS = {};\nfor(const attr of ROUNDED_ATTRS_ARR) {\n    ROUNDED_ATTRS[attr] = true;\n}\n","import {VdomNode} from \"../util/vdom/vdom\";\nimport {VdomManager} from \"../util/vdom/vdom-manager\";\nimport DrawingUtils from \"./drawingUtils\";\nimport CanvasWorker from \"./canvasworker\";\n\ntype DrawMode = 'start'|'normal'|'end'|'forcesingle';\n\nexport default class Canvasrenderer implements CanvasWorker {\n    \n    private ctx: CanvasRenderingContext2D;\n    private parentValues: {[prop: string]: string|number} = {};\n    \n    constructor(private vdom: VdomManager, private canvas: HTMLCanvasElement,\n                private forceSingle = false, private onDrawn = () => {}) {\n        const ctx = canvas.getContext('2d');\n        if(!ctx) throw new Error('could not create canvas context');\n        \n        this.ctx = ctx;\n        this.ctx.scale(this.vdom.data.scale, this.vdom.data.scale);\n        this.ctx.save();\n        \n        this.draw();\n        \n        setTimeout(() => {\n            console.log(this.forceSingle, this.vdom.data);\n            //this.draw();\n        }, 1000);\n    }\n    \n    private lastFullSecond = 0;\n    private countSinceLastFullSecond = 0;\n    \n    draw() {\n        const ctx = this.ctx;\n\n        ctx.restore();\n        ctx.save();\n        \n        //ctx.fillStyle = '#fff';\n        //ctx.fillRect(0, 0, this.vdom.data.width, this.vdom.data.height);\n        ctx.clearRect(0, 0, this.vdom.data.width, this.vdom.data.height);\n    \n        //this.lastDrawn = null;\n        this.drawLine(null, 'start');\n        this.drawCircle(null, 'start');\n        this.drawRect(null, 'start');\n        this.drawText(null, 'start');\n        this.drawImage(null, 'start');\n\n        this.drawNodeAndChildren(this.vdom.data, this.forceSingle);\n\n        this.drawLine(null, 'end');\n        this.drawCircle(null, 'end');\n        this.drawRect(null, 'end');\n        this.drawText(null, 'end');\n        this.drawImage(null, 'end');\n        \n        this.onDrawn();\n    \n        const fullSecond = Math.round(performance.now() / 1000);\n        if(fullSecond !== this.lastFullSecond) {\n            this.lastFullSecond = fullSecond;\n            //console.log(this.countSinceLastFullSecond);\n            this.countSinceLastFullSecond = 0;\n        }\n        this.countSinceLastFullSecond++;\n    }\n    \n    private drawNodeAndChildren(elData: VdomNode, forceSingle: boolean, drawClip?: Path2D) {\n        if(elData.type === 'clippath' && !drawClip) {\n            return;\n        }\n\n        const ctx = this.ctx;\n        const parentValuesBackup = {...this.parentValues};\n\n        const saveRestoreContext = !drawClip && (elData.children.length || elData.transform);\n        if(saveRestoreContext) {\n            ctx.save();\n        }\n\n        this.applyTransform(elData.transform);\n\n        if(elData.transform || drawClip) {\n            forceSingle = true;\n        }\n\n        if(elData['clip-path']) {\n            if(elData['clip-path'].substr(0, 5) === 'url(#') {\n                const clipPathId = elData['clip-path'].substr(5, elData['clip-path'].length - 6);\n                const clipNode = this.vdom.getNodeById(clipPathId);\n                forceSingle = true;\n\n                if(!clipNode) {\n                    //safeErrorLog('clip node not found', elData['clip-path'], clipPathId, this.vdom.data)\n                } else {\n                    const path = new Path2D();\n                    this.drawNodeAndChildren(clipNode, forceSingle, path);\n                    ctx.clip(path);\n                }\n            } else {\n                safeErrorLog('clip path format not supported:', elData['clip-path']);\n            }\n        }\n\n        if(!elData.style.display || elData.style.display !== 'none') {\n            if(!forceSingle) {\n                this.drawSingleNode(elData, 'normal', drawClip);\n            } else {\n                this.drawSingleNode(elData, 'forcesingle', drawClip);\n            }\n        }\n\n        if(elData.children) {\n            this.parentValues['fill'] = elData.fill || this.parentValues['fill'];\n            this.parentValues['style;fill'] = elData.style.fill || this.parentValues['style;fill'];\n            this.parentValues['stroke'] = elData.stroke || this.parentValues['stroke'];\n            this.parentValues['style;stroke'] = elData.style.stroke || this.parentValues['style;stroke'];\n            this.parentValues['opacity'] = elData.opacity || this.parentValues['opacity'];\n\n            for(let i = 0; i < elData.children.length; i++) {\n                this.drawNodeAndChildren(elData.children[i], forceSingle, drawClip);\n            }\n        }\n\n        if(saveRestoreContext) {\n            //safeLog('restoring ctx', elData);\n            ctx.restore();\n        }\n        this.parentValues = parentValuesBackup;\n    }\n    \n    private drawSingleNode(elData: VdomNode, mode: DrawMode = 'normal', path?: Path2D) {\n        const type: string = elData.type;\n        const drawFct = this['draw' + type.substr(0,1).toUpperCase() + type.substr(1)];\n        if(!drawFct) {\n            return console.error('no draw function yet for ', type);\n        }\n        drawFct.call(this, elData, mode, path);\n    }\n\n    private drawClippath(elData: VdomNode) {\n        //safeLog('clippaths can not be rendered yet.')\n    }\n\n    private drawSvg() {}\n    private drawTitle() {}\n    private drawG() {}\n    \n    private circlesByColor: {[color: string]: VdomNode[]} = {};\n    private drawCircle(elData: VdomNode, mode: DrawMode = 'normal', path?: Path2D) {\n        if(mode === 'normal') {\n            let fill = this.getFillStyle(elData, '#000');\n            const stroke = this.getStrokeStyle(elData);\n            const handle = fill + ';' + stroke;\n            if(!this.circlesByColor[handle]) {\n                this.circlesByColor[handle] = [];\n            }\n            this.circlesByColor[handle].push(elData);\n        }\n        if(mode === 'start') {\n            this.circlesByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            for(let fillAndStrokeColor in this.circlesByColor) {\n                if(this.circlesByColor.hasOwnProperty(fillAndStrokeColor)) {\n                    const split = fillAndStrokeColor.split(';');\n                    const fillColor = split[0];\n                    const strokeColor = split[1];\n\n                    this.ctx.fillStyle = fillColor;\n                    let sampleData = this.circlesByColor[fillAndStrokeColor][0];\n                    const lineWidth = this.getStrokeWidth(sampleData);\n                    this.ctx.lineWidth = lineWidth !== undefined ? lineWidth : 1;\n                    this.ctx.strokeStyle = strokeColor;\n\n                    this.ctx.beginPath();\n                    for(let elData of this.circlesByColor[fillAndStrokeColor]) {\n                        // Round values so that paths are connected correctly and there are no rendering glitches\n                        const cx = Math.round(this.vdom.get(elData, 'cx')) || 0;\n                        const cy = Math.round(this.vdom.get(elData, 'cy')) || 0;\n                        const r = Math.round(this.vdom.get(elData, 'r'));\n                        this.ctx.save();\n                        this.applyTransform(elData.transform);\n                        this.ctx.moveTo(cx + r, cy);\n                        this.ctx.arc(cx, cy, r, 0, 2 * Math.PI);\n                        this.ctx.restore();\n                        //this.ctx.restore();\n                    }\n\n                    if(fillColor !== 'none'){\n                        this.ctx.fill();\n                    }\n\n                    if(strokeColor && strokeColor !== 'none') {\n                        this.ctx.stroke();\n                    }\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            let fill = this.getFillStyle(elData, '#000');\n            const strokeStyle = this.getStrokeStyle(elData);\n\n            const cx = this.vdom.get(elData, 'cx') || 0;\n            const cy = this.vdom.get(elData, 'cy') || 0;\n\n            this.ctx.beginPath();\n            this.ctx.fillStyle = fill;\n            this.ctx.strokeStyle = strokeStyle;\n            this.ctx.lineWidth = this.getStrokeWidth(elData);\n            this.ctx.moveTo(cx + elData.r, cy);\n            const context = path ? path : this.ctx;\n            context.arc(cx, cy, elData.r, 0, 2 * Math.PI);\n            if(fill !== 'none' && !path){\n                this.ctx.fill();\n            }\n\n            if(strokeStyle && strokeStyle !== 'none' && !path) {\n                this.ctx.stroke();\n            }\n        }\n    }\n\n    nodeUpdated(node: VdomNode, attr: string) {\n        if(attr === '*' || attr.includes('fill') || attr.includes('opacity')) {\n            delete node['fill-cache'];\n        }\n        if(attr === '*' || attr.includes('stroke') || attr.includes('opacity')) {\n            delete node['stroke-cache'];\n            delete node['strokewidth-cache'];\n        }\n    }\n\n    private getFillStyle(node: VdomNode, defaultColor = 'none'): string {\n        if('fill-cache' in node) {\n            return node['fill-cache'];\n        }\n        let fill = this.getAttributeStyleCss(node, 'fill');\n        let opacity = this.getAttributeStyleCss(node, 'opacity') || 1;\n        const fillOpacity = this.getAttributeStyleCss(node, 'fill-opacity') || 1;\n        opacity *= fillOpacity;\n\n        let defaultCol = '';\n        if(this.parentValues['fill']) {\n            defaultCol = this.parentValues['fill'] as string;\n        }\n        if(this.parentValues['style;fill']) {\n            defaultCol = this.parentValues['style;fill'] as string;\n        }\n        if(!this.parentValues['fill'] && !this.parentValues['style;fill']) {\n            defaultCol = defaultColor;\n        }\n\n        fill = DrawingUtils.colorToRgba(fill, opacity, defaultCol);\n        node['fill-cache'] = fill;\n        return fill;\n    }\n\n    private getAttributeStyleCss(node: VdomNode, style: string) {\n        if(node.style[style]) {\n            return node.style[style];\n        } else {\n            if(this.parentValues[`style;${style}`]) {\n                return this.parentValues[`style;${style}`];\n            }\n            let value = node[style];\n\n            let highestSpec = -1;\n            for(const selector in node.css) {\n                if(node.css[selector][style]) {\n                    const specificity = DrawingUtils.getCssRuleSpecificityNumber(selector);\n                    if(specificity > highestSpec) {\n                        value = node.css[selector][style];\n                        highestSpec = specificity;\n                    }\n                }\n            }\n            return value;\n        }\n    }\n\n    private getStrokeStyle(node: VdomNode, defaultColor = 'none'): string {\n        if('stroke-cache' in node) {\n            return node['stroke-cache'];\n        }\n        const stroke = this.getAttributeStyleCss(node, 'stroke');\n        let opacity = this.getAttributeStyleCss(node, 'opacity') || 1;\n        const fillOpacity = this.getAttributeStyleCss(node, 'stroke-opacity') || 1;\n        opacity *= fillOpacity;\n\n        let defaultCol = '';\n        if(this.parentValues['stroke']) {\n            defaultCol = this.parentValues['stroke'] as string;\n        } else {\n            defaultCol = defaultColor;\n        }\n\n        if(stroke !== undefined) {\n            node['stroke-cache'] = DrawingUtils.colorToRgba(stroke, opacity);\n        } else {\n            node['stroke-cache'] = defaultCol;\n        }\n        return node['stroke-cache'];\n    }\n\n    private getStrokeWidth(node: VdomNode) {\n        if('strokewidth-cache' in node) {\n            return node['strokewidth-cache'];\n        }\n        const width = this.getAttributeStyleCss(node, 'stroke-width');\n        node['strokewidth-cache'] = width === undefined ? undefined : parseFloat(width);\n\n        return node['strokewidth-cache'];\n    }\n\n    private rectsByColor = {};\n\n    private drawRect(elData: VdomNode, mode: DrawMode = 'normal', path?: Path2D) {\n        if(mode === 'normal') {\n            let fill = this.getFillStyle(elData, '#000');\n            const stroke = this.getStrokeStyle(elData);\n            const handle = fill + ';' + stroke;\n            if(!this.rectsByColor[handle]) {\n                this.rectsByColor[handle] = [];\n            }\n            this.rectsByColor[handle].push(elData);\n        }\n        if(mode === 'start') {\n            this.rectsByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            for(let fillAndStrokeColor in this.rectsByColor) {\n                if(this.rectsByColor.hasOwnProperty(fillAndStrokeColor)) {\n                    const split = fillAndStrokeColor.split(';');\n                    const fillColor = split[0];\n                    const strokeColor = split[1];\n                    this.ctx.fillStyle = fillColor;\n\n                    let sampleData = this.rectsByColor[fillAndStrokeColor][0];\n                    const lineWidth = this.getStrokeWidth(sampleData);\n                    this.ctx.lineWidth = lineWidth !== undefined ? lineWidth : 1;\n                    this.ctx.strokeStyle = strokeColor;\n\n                    this.ctx.beginPath();\n                    for(let elData of this.rectsByColor[fillAndStrokeColor]) {\n                        // Round values so that paths are connected correctly and there are no rendering glitches\n                        const x = Math.round(this.vdom.get(elData, 'x')) || 0;\n                        const y = Math.round(this.vdom.get(elData, 'y')) || 0;\n                        this.ctx.save();\n                        this.applyTransform(elData.transform);\n                        this.ctx.moveTo(x, y);\n                        this.ctx.rect(x, y, elData.width, elData.height);\n                        this.ctx.restore();\n                        //this.ctx.restore();\n                    }\n                    if(fillColor !== 'none'){\n                        this.ctx.fill();\n                    }\n\n                    if(strokeColor && strokeColor !== 'none') {\n                        this.ctx.stroke();\n                    }\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            let fill = this.getFillStyle(elData, '#000');\n            const stroke = this.getStrokeStyle(elData);\n\n            const x = this.vdom.get(elData, 'x') || 0;\n            const y = this.vdom.get(elData, 'y') || 0;\n\n            if(fill && fill !== 'none' && !path) {\n                this.ctx.fillStyle = fill;\n                this.ctx.fillRect(x, y, elData.width, elData.height);\n            }\n            if(path) {\n                path.rect(x, y, elData.width, elData.height);\n            }\n\n            if(stroke !== 'none' && !path) {\n                this.ctx.strokeStyle = stroke;\n                this.ctx.beginPath();\n                this.ctx.rect(x, y, elData.width, elData.height);\n                this.ctx.stroke();\n            }\n        }\n    }\n\n    private drawTexts: VdomNode[] = [];\n\n    private drawText(node: VdomNode, mode: DrawMode = 'normal', isClip = false) {\n        const drawSingle = (elData: VdomNode) => {\n            if(elData.text === '') {\n                return;\n            }\n            let fontFamily = this.getAttributeStyleCss(elData, 'font-family') || 'Times New Roman';\n\n            let fontSize = '16px';\n            const customSize = this.getAttributeStyleCss(elData, 'font-size');\n            if(customSize) {\n                fontSize = DrawingUtils.convertSizeToPx(customSize) + 'px';\n            }\n            let font = this.getAttributeStyleCss(elData, 'font');\n            if(!font) {\n                font = fontSize + ' ' + fontFamily;\n            }\n            let align = this.getAttributeStyleCss(elData, 'text-anchor');\n            if(align) {\n                if(align === 'middle') {\n                    align = 'center';\n                }\n                this.ctx.textAlign = align;\n            }\n            this.ctx.font = font;\n            this.ctx.fillStyle = this.getFillStyle(elData, '#000');\n\n            let x = this.vdom.get(elData, 'x') || 0;\n            let y = this.vdom.get(elData, 'y') || 0;\n            let dx = DrawingUtils.convertSizeToPx(elData.dx, false) || 0;\n            let dy = DrawingUtils.convertSizeToPx(elData.dy, false) || 0;\n            this.ctx.fillText(elData.text, x + dx, y + dy);\n        };\n        if(mode === 'start') {\n            this.drawTexts = [];\n            return;\n        }\n        if(mode === 'normal') {\n            this.drawTexts.push(node);\n            return;\n        }\n        if(mode === 'forcesingle') {\n            return drawSingle(node);\n        }\n        if(mode === 'end') {\n            for(const currentNode of this.drawTexts) {\n                drawSingle(currentNode);\n            }\n            return;\n        }\n    }\n\n    private drawImages: VdomNode[] = [];\n\n    private drawImage(node: VdomNode, mode: DrawMode = 'normal') {\n        const drawSingle = (elData: VdomNode) => {\n            if(elData.href === '') {\n                return;\n            }\n            let fill = elData['fill'] ? elData['fill'] : elData.style['fill'];\n            if(!fill) fill = '#000';\n            this.ctx.fillStyle = fill;\n            let x = this.vdom.get(elData, 'x') || 0;\n            let y = this.vdom.get(elData, 'y') || 0;\n            let width = elData.width || 0;\n            let height = elData.height || 0;\n            if(elData.image) {\n                try {\n                    this.ctx.drawImage(elData.image, x, y, width, height);\n                } catch(e) {\n                    console.log(e);\n                }\n            }\n        };\n        if(mode === 'start') {\n            this.drawImages = [];\n            return;\n        }\n        if(mode === 'normal') {\n            this.drawImages.push(node);\n            return;\n        }\n        if(mode === 'forcesingle') {\n            return drawSingle(node);\n        }\n        if(mode === 'end') {\n            for(const currentNode of this.drawImages) {\n                drawSingle(currentNode);\n            }\n            return;\n        }\n    }\n\n    private drawPath(elData: VdomNode, mode: DrawMode = 'normal', path?: Path2D) {\n        if(mode !== 'normal' && mode !== 'forcesingle') return;\n\n        const fill = this.getFillStyle(elData, '#000');\n        const stroke = this.getStrokeStyle(elData);\n        const strokeWidth = this.getStrokeWidth(elData);\n\n        let p = new Path2D(elData.d);\n        this.ctx.fillStyle = fill;\n        if(stroke !== undefined && stroke !== 'none') {\n            if(strokeWidth !== undefined) {\n                this.ctx.lineWidth = strokeWidth;\n            }\n            this.ctx.strokeStyle = stroke;\n\n            const lineJoin = this.getAttributeStyleCss(elData, 'stroke-linejoin')\n\n            if(lineJoin) {\n                if(lineJoin === 'bevel' || lineJoin === 'round' || lineJoin === 'miter') {\n                    this.ctx.lineJoin = lineJoin;\n                } else {\n                    console.error('unknown line join value:', lineJoin)\n                }\n            }\n            if(!path) {\n                this.ctx.stroke(p);\n            }\n        }\n\n        if(fill && fill !== 'none' && !path) {\n            this.ctx.fill(p);\n        }\n        if(path) {\n            path.addPath(p);\n        }\n    }\n    \n    private drawTspan(elData: VdomNode, mode: DrawMode = 'normal') {\n        if(mode !== 'normal' && mode !== 'forcesingle') return;\n        \n        this.ctx.font = \"10px Arial\";\n        this.ctx.fillStyle = \"#000000\";\n        const textAlign = <CanvasTextAlign> (elData.style.textAnchor === \"middle\" ? \"center\" : elData.style.textAnchor);\n        this.ctx.textAlign = textAlign;\n        this.ctx.fillText(elData.text, this.vdom.get(elData, 'x'), this.vdom.get(elData, 'y'));\n    }\n\n    private drawTextpath(elData: VdomNode) {\n        console.warn('no draw function yet for textpath');\n    }\n\n    private linesByColor: {[color: string]: VdomNode[]} = {};\n    private drawLine(elData, mode: DrawMode = 'normal') {\n        if(this.vdom.data.scale > 1) {\n            //mode = 'forcesingle';\n            // In my tests, drawing a long connected path is very slow for high DPI devices.\n        }\n        if(mode === 'normal') {\n            const stroke = this.getStrokeStyle(elData);\n            const width = this.getStrokeWidth(elData);\n            if(stroke === 'none' || width === 0) {\n                return;\n            }\n            const selector = `${stroke};${width}`;\n            if(!this.linesByColor[selector]) {\n                this.linesByColor[selector] = [];\n            }\n            this.linesByColor[selector].push(elData);\n        }\n        if(mode === 'start') {\n            this.linesByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            //safeLog(Object.keys(this.linesByColor), this.linesByColor);\n            for(let selector in this.linesByColor) {\n                if(this.linesByColor.hasOwnProperty(selector)) {\n                    const split = selector.split(';');\n                    const strokeColor = split[0];\n                    const width = split[1];\n\n                    this.ctx.strokeStyle = strokeColor;\n                    this.ctx.lineWidth = parseFloat(width);\n\n                    this.ctx.beginPath();\n                    for(let elData of this.linesByColor[selector]) {\n                        if(elData.transform) {\n                            this.ctx.save();\n                            this.applyTransform(elData.transform);\n                        }\n\n                        const [x1, x2, y1, y2] = this.vdom.get(elData, ['x1', 'x2', 'y1', 'y2'])\n                            .map(val => Math.round(val) || 0);\n\n                        /*const dist = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n                        if(dist > 50) {\n                            safeLog(elData, dist, x1, x2, y1, y2);\n                        }*/\n\n                        this.ctx.moveTo(x1, y1);\n                        this.ctx.lineTo(x2, y2);\n\n                        if(elData.transform) {\n                            //this.ctx.restore();\n                            this.ctx.restore();\n                        }\n                    }\n\n                    this.ctx.stroke();\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            this.ctx.beginPath();\n\n            const [x1, x2, y1, y2] = this.vdom.get(elData, ['x1', 'x2', 'y1', 'y2'])\n                .map(val => Math.round(val) || 0);\n\n            this.ctx.moveTo(x1, y1);\n            this.ctx.lineTo(x2, y2);\n\n            this.ctx.strokeStyle = this.getStrokeStyle(elData);\n            this.ctx.lineWidth = this.getStrokeWidth(elData);\n            //safeLog(stroke, this.ctx.strokeStyle);\n            this.ctx.stroke();\n        }\n    }\n\n    private drawDefs(node: VdomNode) {\n        //TODO figure out.\n    }\n\n    private drawMarker(node: VdomNode) {\n        //TODO figure out.\n    }\n    \n    private applyTransform(transformString: string) {\n        const transform = transformString ? DrawingUtils.parseTransform(transformString) : null;\n        if(transform) {\n            if(!transform.rotateLast) {\n                this.ctx.rotate(transform.rotate * Math.PI / 180);\n            }\n\n            const x = transform.translateBeforeScale ? transform.translateX : transform.translateX * transform.scaleX;\n            const y = transform.translateBeforeScale ? transform.translateY : transform.translateY * transform.scaleY;\n            this.ctx.transform(transform.scaleX, 0, 0, transform.scaleY, x, y);\n\n            if(transform.rotateLast) {\n                this.ctx.rotate(transform.rotate * Math.PI / 180);\n            }\n\n            return true;\n        }\n        return false;\n    }\n}\n\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 300) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import '../worker-loader';\nimport CanvasWorkerImporter = require('worker-loader?inline=true!./canvasworker');\n\nexport default CanvasWorkerImporter;","module.exports = function() {\n  return require(\"!!/home/micha/Web/ssvg/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(e){var t={};function s(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&\\\"object\\\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:e}),2&t&&\\\"string\\\"!=typeof e)for(var i in e)s.d(r,i,function(t){return e[t]}.bind(null,i));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,\\\"a\\\",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p=\\\"\\\",s(s.s=0)}([function(e,t,s){\\\"use strict\\\";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0});const i=s(1),a=r(s(2));let n;const l=self;let o,h;l.onmessage=function(e){const t=e.data;if(t&&t.cmd)switch(t.cmd){case\\\"INIT\\\":o=new i.VdomManager(t.data.visData,!1,!0);const e=!!t.data.safeMode;h=t.data.port,n=new a.default(o,t.data.canvas,e,()=>{h.postMessage({msg:\\\"DRAWN\\\"}),l.postMessage({msg:\\\"DRAWN\\\"})}),h.onmessage=(e=>{const t=e.data;if(t&&t.cmd)switch(t.cmd){case\\\"UPDATE_NODES\\\":(e=>{for(let t of e.data.enterExit){if(\\\"EXIT\\\"===t.cmd){const e=o.getNodeFromIndex(t.childGlobalIndex),s=o.getNodeFromIndex(t.parentGlobalIndex);o.removeNode(e,s)}if(\\\"ENTER\\\"===t.cmd){const e=t.node;t.keepChildren||(e.children=[]),o.addNode(e),o.addNodeToParent(e,t.parentGlobalIndex),n.addNode&&n.addNode(e)}}n.updatePropertiesFromQueue?n.updatePropertiesFromQueue(e.data.update):o.updatePropertiesFromQueue(e.data.update,(e,t)=>{n.nodeUpdated(e,t)}),n.draw()})(t);break;default:console.error(\\\"did not find command \\\",t.cmd)}});break;case\\\"UPDATE_NODES\\\":console.error(\\\"update is now supposed to come from sync worker.\\\");break;default:console.error(\\\"did not find command \\\",t.cmd)}}},function(e,t,s){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0});class r{constructor(e,t,s){this.data=e,this.ignoreDesign=t,this.isRenderer=s,this.sharedRenderData={values:{},buffers:{}},this.syncedSharedData={values:{},buffers:{}},this.sharedDataQueue={values:{},buffers:{}},this.queue={},this.useSharedArrayFor=[\\\"cx\\\",\\\"cy\\\",\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\",\\\"x\\\",\\\"y\\\"],this.indexToNodeMap={},this.changed=!1,this.cachedListSelections={},this.ensureNodesMapped()}ensureInitialized(e,t=!0,s){if(\\\"class\\\"===e&&(e=\\\"className\\\"),t&&-1!==this.useSharedArrayFor.indexOf(e)){const t=s<500?1e3:Math.round(2*s);if(this.sharedDataQueue.values[e]){const s=Int32Array.BYTES_PER_ELEMENT*t;if(this.sharedDataQueue.values[e].byteLength/s<.6){const{buffer:s,values:r}=this.createBufferTransferValues(t,this.sharedDataQueue.values[e]);this.sharedDataQueue.values[e]=r,this.sharedDataQueue.buffers[e]=s}}else{let s;!this.queue[e]||this.queue[e]instanceof SharedArrayBuffer||(s=this.queue[e]);const{buffer:r,values:i}=this.createBufferTransferValues(t,void 0,s);this.sharedDataQueue.values[e]=i,this.sharedDataQueue.buffers[e]=r,this.queue[e]=r}}else this.queue[e]||(this.queue[e]={})}createBufferTransferValues(e,t,s){let i=new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*e);const a=new Int32Array(i);if(s)for(const e in s)if(s.hasOwnProperty(e)){let t=s[e];\\\"string\\\"==typeof t&&(t=parseFloat(t)),a[e]=t*r.BUFFER_PRECISION_FACTOR}if(t)for(let e=0;e<t.length;e++)t[e]&&(a[e]=t[e]);return{buffer:i,values:a}}set(e,t,s,i=!0){if(\\\"class\\\"===t&&(t=\\\"className\\\"),void 0===e.globalElementIndex)throw console.error(\\\"No index\\\",e),new Error(\\\"Element has no index\\\");const a=e.globalElementIndex,n=i&&-1!==this.useSharedArrayFor.indexOf(t)?\\\"shared\\\":\\\"raw\\\";try{this.changed=!0,\\\"shared\\\"===n?(\\\"string\\\"==typeof s&&(s=parseFloat(s)),s*=r.BUFFER_PRECISION_FACTOR,0===(s=Math.round(s))&&(s=56938516),this.sharedDataQueue.values[t][a]=s):(this.queue[t][a]=s,this.sharedDataQueue.values[t]&&this.syncedSharedData.values[t][a]&&(this.sharedDataQueue.values[t][a]=0))}catch(s){console.error(s),console.log(this.queue,this.syncedSharedData.values,n,t,e,a)}}removePendingChanges(e){const t=e.globalElementIndex;for(const e in this.queue)this.queue.hasOwnProperty(e)&&delete this.queue[e][t];for(const e in this.sharedDataQueue.values)this.sharedDataQueue.values.hasOwnProperty(e)&&(this.sharedDataQueue.values[e][t]=0)}ensureNodesMapped(){const e=t=>{void 0===t.globalElementIndex&&console.error(\\\"no element index\\\",t),this.indexToNodeMap[t.globalElementIndex]=t;for(const s of t.children)e(s)};e(this.data)}enableFrontendDesignProperties(){this.ignoreDesign=!1}addNodeToParent(e,t){if(\\\"svg\\\"!==e.type){const s=this.getNodeFromIndex(t);if(!s)return console.error(\\\"could not add node without parent\\\",t,e,Object.keys(this.indexToNodeMap)),void new Error(\\\"parent not found\\\");s.children.push(e)}}addNode(e){this.indexToNodeMap[e.globalElementIndex]=e}removeNode(e,t){delete this.indexToNodeMap[e.globalElementIndex];const s=t.children.indexOf(e);t.children.splice(s,1),this.cachedListSelections={},this.removePendingChanges(e)}applyStyleToNodeAndChildren(e,t,s,r){if(e.style[t]=s,r(e,t),e.children)for(let i of e.children)this.applyStyleToNodeAndChildren(i,t,s,r)}applyCssToNodeAndChildren(e,t,s,r,i){if(\\\"*\\\"!==s||r?(e.css[t]||(e.css[t]={}),e.css[t][s]=r):delete e.css[t],i(e,s),e.children)for(let a of e.children)this.applyCssToNodeAndChildren(a,t,s,r,i)}getNodeFromIndex(e){return this.indexToNodeMap[e]}getNodeById(e){const t=Object.values(this.indexToNodeMap).filter(t=>t.id===e);return(!t||t.length>1)&&(a(\\\"multiple nodes with this id!\\\",Object.values(this.indexToNodeMap).filter(e=>e.id).map(e=>e.id),e),a(t.length,t)),t&&1===t.length?t[0]:null}get(e,t){return Array.isArray(t)?t.map(t=>this.getSingle(e,t)):this.getSingle(e,t)}getSingle(e,t){const s=this.isRenderer?this.sharedRenderData.values:this.syncedSharedData.values;if(s[t]&&s[t][e.globalElementIndex]){const i=s[t][e.globalElementIndex];return 56938516===i?0:i/r.BUFFER_PRECISION_FACTOR}return e[t]}hasChanges(){return this.changed}getQueue(){return this.queue}clearQueue(){this.queue={},this.changed=!1}transferSyncedDataToRenderData(){for(let e in this.syncedSharedData.values){this.queue[e]=this.syncedSharedData.buffers[e],this.sharedRenderData.values[e]=this.syncedSharedData.values[e];const t=this.syncedSharedData.buffers[e].byteLength/Int32Array.BYTES_PER_ELEMENT,{buffer:s,values:r}=this.createBufferTransferValues(t,this.syncedSharedData.values[e]);this.syncedSharedData.buffers[e]=s,this.syncedSharedData.values[e]=r}}transferBufferQueueDataToSynced(){for(let e in this.sharedDataQueue.values){this.queue[e]=this.sharedDataQueue.buffers[e],this.syncedSharedData.values[e]=this.sharedDataQueue.values[e];const t=this.sharedDataQueue.buffers[e].byteLength/Int32Array.BYTES_PER_ELEMENT,{buffer:s,values:r}=this.createBufferTransferValues(t,this.sharedDataQueue.values[e]);this.sharedDataQueue.buffers[e]=s,this.sharedDataQueue.values[e]=r}}addToQueue(e){for(let t in e)if(e.hasOwnProperty(t))if(\\\"SharedArrayBuffer\\\"in self&&e[t]instanceof SharedArrayBuffer){const s=e[t];this.syncedSharedData.buffers[t]=s,this.syncedSharedData.values[t]=new Int32Array(s)}else{const s=e[t];this.queue[t]||(this.queue[t]={});for(let e in s){if(!s.hasOwnProperty(e))continue;const r=parseInt(e);this.queue[t][r]=s[r]}}}updatePropertiesFromQueue(e,t=(()=>{})){for(let s in e){if(!e.hasOwnProperty(s))continue;const i=s.substr(0,\\\"style;\\\".length);if(this.ignoreDesign&&(\\\"style;\\\"===i||-1!==r.IGNOREDESIGN_ATTRIBUTES.indexOf(s)))continue;let a;if(\\\"SharedArrayBuffer\\\"in self&&e[s]instanceof SharedArrayBuffer){const t=e[s];this.isRenderer?(this.sharedRenderData.buffers[s]=t,this.sharedRenderData.values[s]=new Int32Array(t)):(this.syncedSharedData.buffers[s]=t,this.syncedSharedData.values[s]=new Int32Array(t))}else{a=e[s];for(let e in a){if(!a.hasOwnProperty(e))continue;const n=parseInt(e),l=this.getNodeFromIndex(n);if(!l){console.error(\\\"node not found at index\\\",n);continue}let o=a[e];if(\\\"style;\\\"===i){const e=s.substr(\\\"style;\\\".length);this.applyStyleToNodeAndChildren(l,e,o,t)}else if(\\\"css;\\\"===s.substr(0,4)){const[e,r]=s.substr(4).split(\\\";\\\");this.applyCssToNodeAndChildren(l,e,r,o,t)}else-1!==r.ROUNDED_ATTRS.indexOf(s)&&(\\\"string\\\"==typeof o&&(o=parseFloat(o)),o=Math.round(o)),l[s]=o,t(l,s)}}}}getVisNodeFromSelector(e){const t=e.lastIndexOf(\\\">\\\"),s=e.substr(0,t),r=e.substr(t+1),i=s?this.cachedListSelections[s]:null;let a=-1;const n=r.indexOf(\\\":nth-child(\\\");if(-1!==n&&(a=parseInt(r.substr(n+11)),i&&i[a]))return i[a];const l=[];if(this.findMatchingChildren(this.data,e,0,l),l&&1===l.length){const e=l[0];return-1!==a&&(this.cachedListSelections[s]||(this.cachedListSelections[s]={}),this.cachedListSelections[s][a]=e),e}return null}getVisNodesFromSelector(e,t){const s=[];return this.findMatchingChildren(e,t,0,s),s}findChildrenOfType(e,t,s){const r=e=>{for(const i of e.children)i.type===t&&s.push(i),0!==e.children.length&&r(i)};r(e)}filterNodesBySelector(e,t,s){return t.filter(t=>r.isCssRulePartialMatch(s,t,e))}findMatchingChildren(e,t,s,i,a=[]){if(!t&&\\\"\\\"!==t)throw console.error(e,t,s,i,a),Error(\\\"undefined selector\\\");let n=t.split(\\\">\\\").map(e=>e.trim()),l=n[s];if(0===s&&\\\"svg\\\"===l&&(l=n[++s],s===n.length))return i.push(e),void a.push(t);if(t.match(/^[a-z]+$/))return this.findChildrenOfType(e,t,i);for(let o=0;o<e.children.length;o++){let h=e.children[o],c=!1;r.isCssRulePartialMatch(l,h,e)&&(s===n.length-1?(i.push(h),a.push(t)):c=!0),h.children&&(c||n.length<2)&&s+1<n.length&&this.findMatchingChildren(h,t,s+1,i,a)}}static isCssRulePartialMatch(e,t,s){if(\\\":not(\\\"===e.substr(0,5)){const i=e.substr(0,e.length-1).substr(5);return!r.isCssRulePartialMatch(i,t,s)}if(\\\".\\\"===e[0]){const s=e.split(\\\".\\\");if(s.shift(),t.className){let e=!0;for(const r of s)-1===t.className.split(\\\" \\\").indexOf(r)&&(e=!1);return e}}else if(\\\"#\\\"===e[0]){if(e.substr(1)===t.id)return!0}else if(e.match(/^[a-z]+$/)){if(e===t.type)return!0}else{if(-1!==e.indexOf(\\\":nth-child(\\\")){let r=\\\"any\\\",i=e;\\\":\\\"!==e[0]&&(r=e.substr(0,e.indexOf(\\\":\\\")),i=e.substr(e.indexOf(\\\":\\\")));const a=parseInt(i.substr(\\\":nth-child(\\\".length));return s.children.indexOf(t)===a-1&&(\\\"any\\\"===r||t.type===r)}if(-1!==e.indexOf(\\\".\\\")){const s=e.indexOf(\\\".\\\"),r=e.substr(0,s),i=e.substr(s+1);if(r===t.type&&t.className&&-1!==t.className.split(\\\" \\\").indexOf(i))return!0}}return!1}}r.IGNOREDESIGN_ATTRIBUTES=[\\\"fill\\\",\\\"stroke\\\",\\\"opacity\\\"],r.BUFFER_PRECISION_FACTOR=10,r.ROUNDED_ATTRS=[\\\"cx\\\",\\\"cy\\\"],t.VdomManager=r;let i=0;function a(...e){i<400&&(i++,console.log(...e))}},function(e,t,s){\\\"use strict\\\";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0});const i=r(s(3));t.default=class{constructor(e,t,s=!1,r=(()=>{})){this.vdom=e,this.canvas=t,this.forceSingle=s,this.onDrawn=r,this.parentValues={},this.lastFullSecond=0,this.countSinceLastFullSecond=0,this.circlesByColor={},this.rectsByColor={},this.drawTexts=[],this.drawImages=[],this.linesByColor={};const i=t.getContext(\\\"2d\\\");if(!i)throw new Error(\\\"could not create canvas context\\\");this.ctx=i,this.ctx.scale(this.vdom.data.scale,this.vdom.data.scale),this.ctx.save(),this.draw(),setTimeout(()=>{console.log(this.forceSingle,this.vdom.data)},1e3)}draw(){const e=this.ctx;e.restore(),e.save(),e.clearRect(0,0,this.vdom.data.width,this.vdom.data.height),this.drawLine(null,\\\"start\\\"),this.drawCircle(null,\\\"start\\\"),this.drawRect(null,\\\"start\\\"),this.drawText(null,\\\"start\\\"),this.drawImage(null,\\\"start\\\"),this.drawNodeAndChildren(this.vdom.data,this.forceSingle),this.drawLine(null,\\\"end\\\"),this.drawCircle(null,\\\"end\\\"),this.drawRect(null,\\\"end\\\"),this.drawText(null,\\\"end\\\"),this.drawImage(null,\\\"end\\\"),this.onDrawn();const t=Math.round(performance.now()/1e3);t!==this.lastFullSecond&&(this.lastFullSecond=t,this.countSinceLastFullSecond=0),this.countSinceLastFullSecond++}drawNodeAndChildren(e,t,s){if(\\\"clippath\\\"===e.type&&!s)return;const r=this.ctx,i=Object.assign({},this.parentValues),n=!s&&(e.children.length||e.transform);if(n&&r.save(),this.applyTransform(e.transform),(e.transform||s)&&(t=!0),e[\\\"clip-path\\\"])if(\\\"url(#\\\"===e[\\\"clip-path\\\"].substr(0,5)){const s=e[\\\"clip-path\\\"].substr(5,e[\\\"clip-path\\\"].length-6),i=this.vdom.getNodeById(s);if(t=!0,i){const e=new Path2D;this.drawNodeAndChildren(i,t,e),r.clip(e)}}else!function(...e){a<50&&(a++,console.error(...e))}(\\\"clip path format not supported:\\\",e[\\\"clip-path\\\"]);if(e.style.display&&\\\"none\\\"===e.style.display||(t?this.drawSingleNode(e,\\\"forcesingle\\\",s):this.drawSingleNode(e,\\\"normal\\\",s)),e.children){this.parentValues.fill=e.fill||this.parentValues.fill,this.parentValues[\\\"style;fill\\\"]=e.style.fill||this.parentValues[\\\"style;fill\\\"],this.parentValues.stroke=e.stroke||this.parentValues.stroke,this.parentValues[\\\"style;stroke\\\"]=e.style.stroke||this.parentValues[\\\"style;stroke\\\"],this.parentValues.opacity=e.opacity||this.parentValues.opacity;for(let r=0;r<e.children.length;r++)this.drawNodeAndChildren(e.children[r],t,s)}n&&r.restore(),this.parentValues=i}drawSingleNode(e,t=\\\"normal\\\",s){const r=e.type,i=this[\\\"draw\\\"+r.substr(0,1).toUpperCase()+r.substr(1)];if(!i)return console.error(\\\"no draw function yet for \\\",r);i.call(this,e,t,s)}drawClippath(e){}drawSvg(){}drawTitle(){}drawG(){}drawCircle(e,t=\\\"normal\\\",s){if(\\\"normal\\\"===t){const t=this.getFillStyle(e,\\\"#000\\\")+\\\";\\\"+this.getStrokeStyle(e);this.circlesByColor[t]||(this.circlesByColor[t]=[]),this.circlesByColor[t].push(e)}if(\\\"start\\\"!==t){if(\\\"end\\\"!==t){if(\\\"forcesingle\\\"===t){let t=this.getFillStyle(e,\\\"#000\\\");const r=this.getStrokeStyle(e),i=this.vdom.get(e,\\\"cx\\\")||0,a=this.vdom.get(e,\\\"cy\\\")||0;this.ctx.beginPath(),this.ctx.fillStyle=t,this.ctx.strokeStyle=r,this.ctx.lineWidth=this.getStrokeWidth(e),this.ctx.moveTo(i+e.r,a),(s||this.ctx).arc(i,a,e.r,0,2*Math.PI),\\\"none\\\"===t||s||this.ctx.fill(),r&&\\\"none\\\"!==r&&!s&&this.ctx.stroke()}}else for(let e in this.circlesByColor)if(this.circlesByColor.hasOwnProperty(e)){const t=e.split(\\\";\\\"),s=t[0],r=t[1];this.ctx.fillStyle=s;let i=this.circlesByColor[e][0];const a=this.getStrokeWidth(i);this.ctx.lineWidth=void 0!==a?a:1,this.ctx.strokeStyle=r,this.ctx.beginPath();for(let t of this.circlesByColor[e]){const e=Math.round(this.vdom.get(t,\\\"cx\\\"))||0,s=Math.round(this.vdom.get(t,\\\"cy\\\"))||0,r=Math.round(this.vdom.get(t,\\\"r\\\"));this.ctx.save(),this.applyTransform(t.transform),this.ctx.moveTo(e+r,s),this.ctx.arc(e,s,r,0,2*Math.PI),this.ctx.restore()}\\\"none\\\"!==s&&this.ctx.fill(),r&&\\\"none\\\"!==r&&this.ctx.stroke()}}else this.circlesByColor={}}nodeUpdated(e,t){(\\\"*\\\"===t||t.includes(\\\"fill\\\")||t.includes(\\\"opacity\\\"))&&delete e[\\\"fill-cache\\\"],(\\\"*\\\"===t||t.includes(\\\"stroke\\\")||t.includes(\\\"opacity\\\"))&&(delete e[\\\"stroke-cache\\\"],delete e[\\\"strokewidth-cache\\\"])}getFillStyle(e,t=\\\"none\\\"){if(\\\"fill-cache\\\"in e)return e[\\\"fill-cache\\\"];let s=this.getAttributeStyleCss(e,\\\"fill\\\"),r=this.getAttributeStyleCss(e,\\\"opacity\\\")||1;r*=this.getAttributeStyleCss(e,\\\"fill-opacity\\\")||1;let a=\\\"\\\";return this.parentValues.fill&&(a=this.parentValues.fill),this.parentValues[\\\"style;fill\\\"]&&(a=this.parentValues[\\\"style;fill\\\"]),this.parentValues.fill||this.parentValues[\\\"style;fill\\\"]||(a=t),s=i.default.colorToRgba(s,r,a),e[\\\"fill-cache\\\"]=s,s}getAttributeStyleCss(e,t){if(e.style[t])return e.style[t];{if(this.parentValues[`style;${t}`])return this.parentValues[`style;${t}`];let s=e[t],r=-1;for(const a in e.css)if(e.css[a][t]){const n=i.default.getCssRuleSpecificityNumber(a);n>r&&(s=e.css[a][t],r=n)}return s}}getStrokeStyle(e,t=\\\"none\\\"){if(\\\"stroke-cache\\\"in e)return e[\\\"stroke-cache\\\"];const s=this.getAttributeStyleCss(e,\\\"stroke\\\");let r=this.getAttributeStyleCss(e,\\\"opacity\\\")||1;r*=this.getAttributeStyleCss(e,\\\"stroke-opacity\\\")||1;let a=\\\"\\\";return a=this.parentValues.stroke?this.parentValues.stroke:t,e[\\\"stroke-cache\\\"]=void 0!==s?i.default.colorToRgba(s,r):a,e[\\\"stroke-cache\\\"]}getStrokeWidth(e){if(\\\"strokewidth-cache\\\"in e)return e[\\\"strokewidth-cache\\\"];const t=this.getAttributeStyleCss(e,\\\"stroke-width\\\");return e[\\\"strokewidth-cache\\\"]=void 0===t?void 0:parseFloat(t),e[\\\"strokewidth-cache\\\"]}drawRect(e,t=\\\"normal\\\",s){if(\\\"normal\\\"===t){const t=this.getFillStyle(e,\\\"#000\\\")+\\\";\\\"+this.getStrokeStyle(e);this.rectsByColor[t]||(this.rectsByColor[t]=[]),this.rectsByColor[t].push(e)}if(\\\"start\\\"!==t){if(\\\"end\\\"!==t){if(\\\"forcesingle\\\"===t){let t=this.getFillStyle(e,\\\"#000\\\");const r=this.getStrokeStyle(e),i=this.vdom.get(e,\\\"x\\\")||0,a=this.vdom.get(e,\\\"y\\\")||0;t&&\\\"none\\\"!==t&&!s&&(this.ctx.fillStyle=t,this.ctx.fillRect(i,a,e.width,e.height)),s&&s.rect(i,a,e.width,e.height),\\\"none\\\"===r||s||(this.ctx.strokeStyle=r,this.ctx.beginPath(),this.ctx.rect(i,a,e.width,e.height),this.ctx.stroke())}}else for(let e in this.rectsByColor)if(this.rectsByColor.hasOwnProperty(e)){const t=e.split(\\\";\\\"),s=t[0],r=t[1];this.ctx.fillStyle=s;let i=this.rectsByColor[e][0];const a=this.getStrokeWidth(i);this.ctx.lineWidth=void 0!==a?a:1,this.ctx.strokeStyle=r,this.ctx.beginPath();for(let t of this.rectsByColor[e]){const e=Math.round(this.vdom.get(t,\\\"x\\\"))||0,s=Math.round(this.vdom.get(t,\\\"y\\\"))||0;this.ctx.save(),this.applyTransform(t.transform),this.ctx.moveTo(e,s),this.ctx.rect(e,s,t.width,t.height),this.ctx.restore()}\\\"none\\\"!==s&&this.ctx.fill(),r&&\\\"none\\\"!==r&&this.ctx.stroke()}}else this.rectsByColor={}}drawText(e,t=\\\"normal\\\",s=!1){const r=e=>{if(\\\"\\\"===e.text)return;let t=this.getAttributeStyleCss(e,\\\"font-family\\\")||\\\"Times New Roman\\\",s=\\\"16px\\\";const r=this.getAttributeStyleCss(e,\\\"font-size\\\");r&&(s=i.default.convertSizeToPx(r)+\\\"px\\\");let a=this.getAttributeStyleCss(e,\\\"font\\\");a||(a=s+\\\" \\\"+t);let n=this.getAttributeStyleCss(e,\\\"text-anchor\\\");n&&(\\\"middle\\\"===n&&(n=\\\"center\\\"),this.ctx.textAlign=n),this.ctx.font=a,this.ctx.fillStyle=this.getFillStyle(e,\\\"#000\\\");let l=this.vdom.get(e,\\\"x\\\")||0,o=this.vdom.get(e,\\\"y\\\")||0,h=i.default.convertSizeToPx(e.dx,!1)||0,c=i.default.convertSizeToPx(e.dy,!1)||0;this.ctx.fillText(e.text,l+h,o+c)};if(\\\"start\\\"!==t)if(\\\"normal\\\"!==t){if(\\\"forcesingle\\\"===t)return r(e);if(\\\"end\\\"!==t);else for(const e of this.drawTexts)r(e)}else this.drawTexts.push(e);else this.drawTexts=[]}drawImage(e,t=\\\"normal\\\"){const s=e=>{if(\\\"\\\"===e.href)return;let t=e.fill?e.fill:e.style.fill;t||(t=\\\"#000\\\"),this.ctx.fillStyle=t;let s=this.vdom.get(e,\\\"x\\\")||0,r=this.vdom.get(e,\\\"y\\\")||0,i=e.width||0,a=e.height||0;if(e.image)try{this.ctx.drawImage(e.image,s,r,i,a)}catch(e){console.log(e)}};if(\\\"start\\\"!==t)if(\\\"normal\\\"!==t){if(\\\"forcesingle\\\"===t)return s(e);if(\\\"end\\\"!==t);else for(const e of this.drawImages)s(e)}else this.drawImages.push(e);else this.drawImages=[]}drawPath(e,t=\\\"normal\\\",s){if(\\\"normal\\\"!==t&&\\\"forcesingle\\\"!==t)return;const r=this.getFillStyle(e,\\\"#000\\\"),i=this.getStrokeStyle(e),a=this.getStrokeWidth(e);let n=new Path2D(e.d);if(this.ctx.fillStyle=r,void 0!==i&&\\\"none\\\"!==i){void 0!==a&&(this.ctx.lineWidth=a),this.ctx.strokeStyle=i;const t=this.getAttributeStyleCss(e,\\\"stroke-linejoin\\\");t&&(\\\"bevel\\\"===t||\\\"round\\\"===t||\\\"miter\\\"===t?this.ctx.lineJoin=t:console.error(\\\"unknown line join value:\\\",t)),s||this.ctx.stroke(n)}r&&\\\"none\\\"!==r&&!s&&this.ctx.fill(n),s&&s.addPath(n)}drawTspan(e,t=\\\"normal\\\"){if(\\\"normal\\\"!==t&&\\\"forcesingle\\\"!==t)return;this.ctx.font=\\\"10px Arial\\\",this.ctx.fillStyle=\\\"#000000\\\";const s=\\\"middle\\\"===e.style.textAnchor?\\\"center\\\":e.style.textAnchor;this.ctx.textAlign=s,this.ctx.fillText(e.text,this.vdom.get(e,\\\"x\\\"),this.vdom.get(e,\\\"y\\\"))}drawTextpath(e){console.warn(\\\"no draw function yet for textpath\\\")}drawLine(e,t=\\\"normal\\\"){if(this.vdom.data.scale,\\\"normal\\\"===t){const t=this.getStrokeStyle(e),s=this.getStrokeWidth(e);if(\\\"none\\\"===t||0===s)return;const r=`${t};${s}`;this.linesByColor[r]||(this.linesByColor[r]=[]),this.linesByColor[r].push(e)}if(\\\"start\\\"!==t){if(\\\"end\\\"!==t){if(\\\"forcesingle\\\"===t){this.ctx.beginPath();const[t,s,r,i]=this.vdom.get(e,[\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\"]).map(e=>Math.round(e)||0);this.ctx.moveTo(t,r),this.ctx.lineTo(s,i),this.ctx.strokeStyle=this.getStrokeStyle(e),this.ctx.lineWidth=this.getStrokeWidth(e),this.ctx.stroke()}}else for(let e in this.linesByColor)if(this.linesByColor.hasOwnProperty(e)){const t=e.split(\\\";\\\"),s=t[0],r=t[1];this.ctx.strokeStyle=s,this.ctx.lineWidth=parseFloat(r),this.ctx.beginPath();for(let t of this.linesByColor[e]){t.transform&&(this.ctx.save(),this.applyTransform(t.transform));const[e,s,r,i]=this.vdom.get(t,[\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\"]).map(e=>Math.round(e)||0);this.ctx.moveTo(e,r),this.ctx.lineTo(s,i),t.transform&&this.ctx.restore()}this.ctx.stroke()}}else this.linesByColor={}}drawDefs(e){}drawMarker(e){}applyTransform(e){const t=e?i.default.parseTransform(e):null;if(t){t.rotateLast||this.ctx.rotate(t.rotate*Math.PI/180);const e=t.translateBeforeScale?t.translateX:t.translateX*t.scaleX,s=t.translateBeforeScale?t.translateY:t.translateY*t.scaleY;return this.ctx.transform(t.scaleX,0,0,t.scaleY,e,s),t.rotateLast&&this.ctx.rotate(t.rotate*Math.PI/180),!0}return!1}};let a=0},function(e,t,s){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0});class r{static parseTransform(e){const t={translateX:0,translateY:0,scaleX:1,scaleY:1,rotate:0,translateBeforeScale:!1,rotateLast:!1};if(e){if(\\\"string\\\"!=typeof e)return t.scaleX=e.k,t.scaleY=e.k,t.translateX=e.x,t.translateY=e.y,t.translateBeforeScale=!0,t;let s=e;s=s.replace(/ /g,\\\"\\\");const r=/\\\\s*translate\\\\(([-0-9.]+),([-0-9.]+)\\\\)/.exec(s);r&&(t.translateX=parseFloat(r[1]),t.translateY=parseFloat(r[2]));const i=/\\\\s*scale\\\\(([-0-9.]+)(,[-0-9.]+)?\\\\)/.exec(s);i&&(t.scaleX=parseFloat(i[1]),t.scaleY=i[2]?parseFloat(i[2].substr(1)):parseFloat(i[1]));const a=/\\\\s*rotate\\\\(([-0-9.]+)\\\\)/.exec(s);a&&(t.rotate=parseFloat(a[1])),/\\\\s*translate\\\\(([-0-9.]+),([-0-9.]+)\\\\)scale\\\\(([-0-9.,]+)\\\\)/.exec(s)&&(t.translateBeforeScale=!0),/\\\\s*rotate\\\\(([-0-9.,]+)\\\\)$/.exec(s)&&(t.rotateLast=!0);const n=/\\\\s*matrix\\\\(([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+)\\\\)/.exec(s);n&&(t.scaleX=parseFloat(n[1]),t.scaleY=parseFloat(n[4]),t.translateX=parseFloat(n[5]),t.translateY=parseFloat(n[6]))}return t}static addTransforms(e,t){return{translateX:e.translateX+t.translateX,translateY:e.translateY+t.translateY,scaleX:e.scaleX*t.scaleX,scaleY:e.scaleY*t.scaleY,rotate:e.rotate+t.rotate,translateBeforeScale:!1,rotateLast:!1}}static convertSizeToPx(e,t=!0){const s=t?14:void 0;return void 0===e?s:\\\"number\\\"==typeof e?e:\\\"em\\\"===e.substr(-2)?Math.round(12*parseFloat(e)):\\\"px\\\"===e.substr(-2)?parseInt(e):e.match(/^[0-9]+$/)?parseInt(e):(console.warn(\\\"size in unsupported format: \\\",e),s)}static colorToRgba(e,t=1,s=\\\"none\\\"){if(\\\"none\\\"===e)return e;e||(e=s);const i=`${e}-${t}`;if(r.rgbaCache[i])return r.rgbaCache[i];if(e=r.CssNamedColorToHex(e),1===t&&\\\"string\\\"==typeof e)return r.rgbaCache[i]=e,e;let a;if(\\\"string\\\"==typeof e&&\\\"#\\\"===e[0]){let s;if(!/^#([A-Fa-f0-9]{3}){1,2}$/.test(e))throw new Error(\\\"Bad Hex\\\");3==(s=e.substring(1)).length&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]),a=\\\"rgba(\\\"+[(s=\\\"0x\\\"+s)>>16&255,s>>8&255,255&s].join(\\\",\\\")+\\\",\\\"+t+\\\")\\\"}else if(\\\"object\\\"==typeof e){if(\\\"r\\\"in e)a=\\\"rgba(\\\"+e.r+\\\",\\\"+e.g+\\\",\\\"+e.b+\\\",\\\"+t+\\\")\\\";else if(\\\"h\\\"in e){const s=r.hslToRgb(e.h/360,e.s,e.l);a=\\\"rgba(\\\"+s.r+\\\",\\\"+s.g+\\\",\\\"+s.b+\\\",\\\"+t+\\\")\\\"}}else\\\"rgb(\\\"===e.substr(0,4)&&(a=e.substr(0,e.length-1).replace(\\\"rgb\\\",\\\"rgba\\\")+\\\", \\\"+t+\\\")\\\");return r.rgbaCache[i]=a,a}static hslToRgb(e,t,s){var r,i,a;if(0==t)r=i=a=s;else{var n=function(e,t,s){return s<0&&(s+=1),s>1&&(s-=1),s<1/6?e+6*(t-e)*s:s<.5?t:s<2/3?e+(t-e)*(2/3-s)*6:e},l=s<.5?s*(1+t):s+t-s*t,o=2*s-l;r=n(o,l,e+1/3),i=n(o,l,e),a=n(o,l,e-1/3)}return{r:Math.round(255*r),g:Math.round(255*i),b:Math.round(255*a)}}static CssNamedColorToHex(e){return\\\"string\\\"==typeof e&&i[e.toUpperCase()]?i[e.toUpperCase()]:e}static getCssRuleSpecificityNumber(e){let t=0;e=e.replace(/ >/g,\\\">\\\").replace(/> /g,\\\">\\\");const s=[].concat.apply([],e.split(\\\" \\\").map(e=>e.split(\\\">\\\")));for(const e of s){t+=100;const s=e[0];if(\\\"#\\\"===s)t+=1e3;else if(\\\".\\\"===s){const s=e.split(\\\".\\\").length-1;t+=Math.min(900,100*s)}}return t}}r.rgbaCache={},t.default=r;const i={ALICEBLUE:\\\"#F0F8FF\\\",ANTIQUEWHITE:\\\"#FAEBD7\\\",AQUA:\\\"#00FFFF\\\",AQUAMARINE:\\\"#7FFFD4\\\",AZURE:\\\"#F0FFFF\\\",BEIGE:\\\"#F5F5DC\\\",BISQUE:\\\"#FFE4C4\\\",BLACK:\\\"#000000\\\",BLANCHEDALMOND:\\\"#FFEBCD\\\",BLUE:\\\"#0000FF\\\",BLUEVIOLET:\\\"#8A2BE2\\\",BROWN:\\\"#A52A2A\\\",BURLYWOOD:\\\"#DEB887\\\",CADETBLUE:\\\"#5F9EA0\\\",CHARTREUSE:\\\"#7FFF00\\\",CHOCOLATE:\\\"#D2691E\\\",CORAL:\\\"#FF7F50\\\",CORNFLOWERBLUE:\\\"#6495ED\\\",CORNSILK:\\\"#FFF8DC\\\",CRIMSON:\\\"#DC143C\\\",CYAN:\\\"#00FFFF\\\",DARKBLUE:\\\"#00008B\\\",DARKCYAN:\\\"#008B8B\\\",DARKGOLDENROD:\\\"#B8860B\\\",DARKGRAY:\\\"#A9A9A9\\\",DARKGREY:\\\"#A9A9A9\\\",DARKGREEN:\\\"#006400\\\",DARKKHAKI:\\\"#BDB76B\\\",DARKMAGENTA:\\\"#8B008B\\\",DARKOLIVEGREEN:\\\"#556B2F\\\",DARKORANGE:\\\"#FF8C00\\\",DARKORCHID:\\\"#9932CC\\\",DARKRED:\\\"#8B0000\\\",DARKSALMON:\\\"#E9967A\\\",DARKSEAGREEN:\\\"#8FBC8F\\\",DARKSLATEBLUE:\\\"#483D8B\\\",DARKSLATEGRAY:\\\"#2F4F4F\\\",DARKSLATEGREY:\\\"#2F4F4F\\\",DARKTURQUOISE:\\\"#00CED1\\\",DARKVIOLET:\\\"#9400D3\\\",DEEPPINK:\\\"#FF1493\\\",DEEPSKYBLUE:\\\"#00BFFF\\\",DIMGRAY:\\\"#696969\\\",DIMGREY:\\\"#696969\\\",DODGERBLUE:\\\"#1E90FF\\\",FIREBRICK:\\\"#B22222\\\",FLORALWHITE:\\\"#FFFAF0\\\",FORESTGREEN:\\\"#228B22\\\",FUCHSIA:\\\"#FF00FF\\\",GAINSBORO:\\\"#DCDCDC\\\",GHOSTWHITE:\\\"#F8F8FF\\\",GOLD:\\\"#FFD700\\\",GOLDENROD:\\\"#DAA520\\\",GRAY:\\\"#808080\\\",GREY:\\\"#808080\\\",GREEN:\\\"#008000\\\",GREENYELLOW:\\\"#ADFF2F\\\",HONEYDEW:\\\"#F0FFF0\\\",HOTPINK:\\\"#FF69B4\\\",INDIANRED:\\\"#CD5C5C\\\",INDIGO:\\\"#4B0082\\\",IVORY:\\\"#FFFFF0\\\",KHAKI:\\\"#F0E68C\\\",LAVENDER:\\\"#E6E6FA\\\",LAVENDERBLUSH:\\\"#FFF0F5\\\",LAWNGREEN:\\\"#7CFC00\\\",LEMONCHIFFON:\\\"#FFFACD\\\",LIGHTBLUE:\\\"#ADD8E6\\\",LIGHTCORAL:\\\"#F08080\\\",LIGHTCYAN:\\\"#E0FFFF\\\",LIGHTGOLDENRODYELLOW:\\\"#FAFAD2\\\",LIGHTGRAY:\\\"#D3D3D3\\\",LIGHTGREY:\\\"#D3D3D3\\\",LIGHTGREEN:\\\"#90EE90\\\",LIGHTPINK:\\\"#FFB6C1\\\",LIGHTSALMON:\\\"#FFA07A\\\",LIGHTSEAGREEN:\\\"#20B2AA\\\",LIGHTSKYBLUE:\\\"#87CEFA\\\",LIGHTSLATEGRAY:\\\"#778899\\\",LIGHTSLATEGREY:\\\"#778899\\\",LIGHTSTEELBLUE:\\\"#B0C4DE\\\",LIGHTYELLOW:\\\"#FFFFE0\\\",LIME:\\\"#00FF00\\\",LIMEGREEN:\\\"#32CD32\\\",LINEN:\\\"#FAF0E6\\\",MAGENTA:\\\"#FF00FF\\\",MAROON:\\\"#800000\\\",MEDIUMAQUAMARINE:\\\"#66CDAA\\\",MEDIUMBLUE:\\\"#0000CD\\\",MEDIUMORCHID:\\\"#BA55D3\\\",MEDIUMPURPLE:\\\"#9370DB\\\",MEDIUMSEAGREEN:\\\"#3CB371\\\",MEDIUMSLATEBLUE:\\\"#7B68EE\\\",MEDIUMSPRINGGREEN:\\\"#00FA9A\\\",MEDIUMTURQUOISE:\\\"#48D1CC\\\",MEDIUMVIOLETRED:\\\"#C71585\\\",MIDNIGHTBLUE:\\\"#191970\\\",MINTCREAM:\\\"#F5FFFA\\\",MISTYROSE:\\\"#FFE4E1\\\",MOCCASIN:\\\"#FFE4B5\\\",NAVAJOWHITE:\\\"#FFDEAD\\\",NAVY:\\\"#000080\\\",OLDLACE:\\\"#FDF5E6\\\",OLIVE:\\\"#808000\\\",OLIVEDRAB:\\\"#6B8E23\\\",ORANGE:\\\"#FFA500\\\",ORANGERED:\\\"#FF4500\\\",ORCHID:\\\"#DA70D6\\\",PALEGOLDENROD:\\\"#EEE8AA\\\",PALEGREEN:\\\"#98FB98\\\",PALETURQUOISE:\\\"#AFEEEE\\\",PALEVIOLETRED:\\\"#DB7093\\\",PAPAYAWHIP:\\\"#FFEFD5\\\",PEACHPUFF:\\\"#FFDAB9\\\",PERU:\\\"#CD853F\\\",PINK:\\\"#FFC0CB\\\",PLUM:\\\"#DDA0DD\\\",POWDERBLUE:\\\"#B0E0E6\\\",PURPLE:\\\"#800080\\\",REBECCAPURPLE:\\\"#663399\\\",RED:\\\"#FF0000\\\",ROSYBROWN:\\\"#BC8F8F\\\",ROYALBLUE:\\\"#4169E1\\\",SADDLEBROWN:\\\"#8B4513\\\",SALMON:\\\"#FA8072\\\",SANDYBROWN:\\\"#F4A460\\\",SEAGREEN:\\\"#2E8B57\\\",SEASHELL:\\\"#FFF5EE\\\",SIENNA:\\\"#A0522D\\\",SILVER:\\\"#C0C0C0\\\",SKYBLUE:\\\"#87CEEB\\\",SLATEBLUE:\\\"#6A5ACD\\\",SLATEGRAY:\\\"#708090\\\",SLATEGREY:\\\"#708090\\\",SNOW:\\\"#FFFAFA\\\",SPRINGGREEN:\\\"#00FF7F\\\",STEELBLUE:\\\"#4682B4\\\",TAN:\\\"#D2B48C\\\",TEAL:\\\"#008080\\\",THISTLE:\\\"#D8BFD8\\\",TOMATO:\\\"#FF6347\\\",TURQUOISE:\\\"#40E0D0\\\",VIOLET:\\\"#EE82EE\\\",WHEAT:\\\"#F5DEB3\\\",WHITE:\\\"#FFFFFF\\\",WHITESMOKE:\\\"#F5F5F5\\\",YELLOW:\\\"#FFFF00\\\",YELLOWGREEN:\\\"#9ACD32\\\"}}]);\\n//# sourceMappingURL=98c3a27b5434d62a0493.worker.js.map\", __webpack_public_path__ + \"98c3a27b5434d62a0493.worker.js\");\n};","import '../worker-loader';\nimport SyncWorkerImporter = require('worker-loader?inline=true!./syncworker');\n\nexport default SyncWorkerImporter;","module.exports = function() {\n  return require(\"!!/home/micha/Web/ssvg/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(e){var t={};function s(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&\\\"object\\\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:e}),2&t&&\\\"string\\\"!=typeof e)for(var n in e)s.d(r,n,function(t){return e[t]}.bind(null,n));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,\\\"a\\\",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p=\\\"\\\",s(s.s=0)}([function(e,t,s){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0});const r=s(1);class n{constructor(e,t){this.port=t,this.enterExitQueue=[],this.hasNewData=!0,this.waitingToRender=!0,this.vdom=new r.VdomManager(e,!1,!1),this.port.onmessage=(e=>{this.onRendererReady()})}onUpdateReceived(e){this.hasNewData=!0,this.enterExitQueue=this.enterExitQueue.concat(e.data.enterExit);const t=e.data.update;this.vdom.addToQueue(t),this.waitingToRender&&this.onRendererReady()}onRendererReady(){if(!this.hasNewData)return void(this.waitingToRender=!0);this.waitingToRender=!1,this.vdom.transferSyncedDataToRenderData();const e=this.vdom.getQueue();this.vdom.clearQueue();const t={cmd:\\\"UPDATE_NODES\\\",data:{enterExit:this.enterExitQueue,update:e}};this.port.postMessage(t),this.enterExitQueue=[],this.hasNewData=!1}}let a;self.onmessage=function(e){const t=e.data;if(t&&t.cmd)switch(t.cmd){case\\\"INIT\\\":a=new n(t.data.visData,t.data.port);break;case\\\"UPDATE_NODES\\\":a.onUpdateReceived(t);break;default:console.error(\\\"did not find command \\\",t.cmd)}}},function(e,t,s){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0});class r{constructor(e,t,s){this.data=e,this.ignoreDesign=t,this.isRenderer=s,this.sharedRenderData={values:{},buffers:{}},this.syncedSharedData={values:{},buffers:{}},this.sharedDataQueue={values:{},buffers:{}},this.queue={},this.useSharedArrayFor=[\\\"cx\\\",\\\"cy\\\",\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\",\\\"x\\\",\\\"y\\\"],this.indexToNodeMap={},this.changed=!1,this.cachedListSelections={},this.ensureNodesMapped()}ensureInitialized(e,t=!0,s){if(\\\"class\\\"===e&&(e=\\\"className\\\"),t&&-1!==this.useSharedArrayFor.indexOf(e)){const t=s<500?1e3:Math.round(2*s);if(this.sharedDataQueue.values[e]){const s=Int32Array.BYTES_PER_ELEMENT*t;if(this.sharedDataQueue.values[e].byteLength/s<.6){const{buffer:s,values:r}=this.createBufferTransferValues(t,this.sharedDataQueue.values[e]);this.sharedDataQueue.values[e]=r,this.sharedDataQueue.buffers[e]=s}}else{let s;!this.queue[e]||this.queue[e]instanceof SharedArrayBuffer||(s=this.queue[e]);const{buffer:r,values:n}=this.createBufferTransferValues(t,void 0,s);this.sharedDataQueue.values[e]=n,this.sharedDataQueue.buffers[e]=r,this.queue[e]=r}}else this.queue[e]||(this.queue[e]={})}createBufferTransferValues(e,t,s){let n=new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*e);const a=new Int32Array(n);if(s)for(const e in s)if(s.hasOwnProperty(e)){let t=s[e];\\\"string\\\"==typeof t&&(t=parseFloat(t)),a[e]=t*r.BUFFER_PRECISION_FACTOR}if(t)for(let e=0;e<t.length;e++)t[e]&&(a[e]=t[e]);return{buffer:n,values:a}}set(e,t,s,n=!0){if(\\\"class\\\"===t&&(t=\\\"className\\\"),void 0===e.globalElementIndex)throw console.error(\\\"No index\\\",e),new Error(\\\"Element has no index\\\");const a=e.globalElementIndex,i=n&&-1!==this.useSharedArrayFor.indexOf(t)?\\\"shared\\\":\\\"raw\\\";try{this.changed=!0,\\\"shared\\\"===i?(\\\"string\\\"==typeof s&&(s=parseFloat(s)),s*=r.BUFFER_PRECISION_FACTOR,0===(s=Math.round(s))&&(s=56938516),this.sharedDataQueue.values[t][a]=s):(this.queue[t][a]=s,this.sharedDataQueue.values[t]&&this.syncedSharedData.values[t][a]&&(this.sharedDataQueue.values[t][a]=0))}catch(s){console.error(s),console.log(this.queue,this.syncedSharedData.values,i,t,e,a)}}removePendingChanges(e){const t=e.globalElementIndex;for(const e in this.queue)this.queue.hasOwnProperty(e)&&delete this.queue[e][t];for(const e in this.sharedDataQueue.values)this.sharedDataQueue.values.hasOwnProperty(e)&&(this.sharedDataQueue.values[e][t]=0)}ensureNodesMapped(){const e=t=>{void 0===t.globalElementIndex&&console.error(\\\"no element index\\\",t),this.indexToNodeMap[t.globalElementIndex]=t;for(const s of t.children)e(s)};e(this.data)}enableFrontendDesignProperties(){this.ignoreDesign=!1}addNodeToParent(e,t){if(\\\"svg\\\"!==e.type){const s=this.getNodeFromIndex(t);if(!s)return console.error(\\\"could not add node without parent\\\",t,e,Object.keys(this.indexToNodeMap)),void new Error(\\\"parent not found\\\");s.children.push(e)}}addNode(e){this.indexToNodeMap[e.globalElementIndex]=e}removeNode(e,t){delete this.indexToNodeMap[e.globalElementIndex];const s=t.children.indexOf(e);t.children.splice(s,1),this.cachedListSelections={},this.removePendingChanges(e)}applyStyleToNodeAndChildren(e,t,s,r){if(e.style[t]=s,r(e,t),e.children)for(let n of e.children)this.applyStyleToNodeAndChildren(n,t,s,r)}applyCssToNodeAndChildren(e,t,s,r,n){if(\\\"*\\\"!==s||r?(e.css[t]||(e.css[t]={}),e.css[t][s]=r):delete e.css[t],n(e,s),e.children)for(let a of e.children)this.applyCssToNodeAndChildren(a,t,s,r,n)}getNodeFromIndex(e){return this.indexToNodeMap[e]}getNodeById(e){const t=Object.values(this.indexToNodeMap).filter(t=>t.id===e);return(!t||t.length>1)&&(a(\\\"multiple nodes with this id!\\\",Object.values(this.indexToNodeMap).filter(e=>e.id).map(e=>e.id),e),a(t.length,t)),t&&1===t.length?t[0]:null}get(e,t){return Array.isArray(t)?t.map(t=>this.getSingle(e,t)):this.getSingle(e,t)}getSingle(e,t){const s=this.isRenderer?this.sharedRenderData.values:this.syncedSharedData.values;if(s[t]&&s[t][e.globalElementIndex]){const n=s[t][e.globalElementIndex];return 56938516===n?0:n/r.BUFFER_PRECISION_FACTOR}return e[t]}hasChanges(){return this.changed}getQueue(){return this.queue}clearQueue(){this.queue={},this.changed=!1}transferSyncedDataToRenderData(){for(let e in this.syncedSharedData.values){this.queue[e]=this.syncedSharedData.buffers[e],this.sharedRenderData.values[e]=this.syncedSharedData.values[e];const t=this.syncedSharedData.buffers[e].byteLength/Int32Array.BYTES_PER_ELEMENT,{buffer:s,values:r}=this.createBufferTransferValues(t,this.syncedSharedData.values[e]);this.syncedSharedData.buffers[e]=s,this.syncedSharedData.values[e]=r}}transferBufferQueueDataToSynced(){for(let e in this.sharedDataQueue.values){this.queue[e]=this.sharedDataQueue.buffers[e],this.syncedSharedData.values[e]=this.sharedDataQueue.values[e];const t=this.sharedDataQueue.buffers[e].byteLength/Int32Array.BYTES_PER_ELEMENT,{buffer:s,values:r}=this.createBufferTransferValues(t,this.sharedDataQueue.values[e]);this.sharedDataQueue.buffers[e]=s,this.sharedDataQueue.values[e]=r}}addToQueue(e){for(let t in e)if(e.hasOwnProperty(t))if(\\\"SharedArrayBuffer\\\"in self&&e[t]instanceof SharedArrayBuffer){const s=e[t];this.syncedSharedData.buffers[t]=s,this.syncedSharedData.values[t]=new Int32Array(s)}else{const s=e[t];this.queue[t]||(this.queue[t]={});for(let e in s){if(!s.hasOwnProperty(e))continue;const r=parseInt(e);this.queue[t][r]=s[r]}}}updatePropertiesFromQueue(e,t=(()=>{})){for(let s in e){if(!e.hasOwnProperty(s))continue;const n=s.substr(0,\\\"style;\\\".length);if(this.ignoreDesign&&(\\\"style;\\\"===n||-1!==r.IGNOREDESIGN_ATTRIBUTES.indexOf(s)))continue;let a;if(\\\"SharedArrayBuffer\\\"in self&&e[s]instanceof SharedArrayBuffer){const t=e[s];this.isRenderer?(this.sharedRenderData.buffers[s]=t,this.sharedRenderData.values[s]=new Int32Array(t)):(this.syncedSharedData.buffers[s]=t,this.syncedSharedData.values[s]=new Int32Array(t))}else{a=e[s];for(let e in a){if(!a.hasOwnProperty(e))continue;const i=parseInt(e),u=this.getNodeFromIndex(i);if(!u){console.error(\\\"node not found at index\\\",i);continue}let d=a[e];if(\\\"style;\\\"===n){const e=s.substr(\\\"style;\\\".length);this.applyStyleToNodeAndChildren(u,e,d,t)}else if(\\\"css;\\\"===s.substr(0,4)){const[e,r]=s.substr(4).split(\\\";\\\");this.applyCssToNodeAndChildren(u,e,r,d,t)}else-1!==r.ROUNDED_ATTRS.indexOf(s)&&(\\\"string\\\"==typeof d&&(d=parseFloat(d)),d=Math.round(d)),u[s]=d,t(u,s)}}}}getVisNodeFromSelector(e){const t=e.lastIndexOf(\\\">\\\"),s=e.substr(0,t),r=e.substr(t+1),n=s?this.cachedListSelections[s]:null;let a=-1;const i=r.indexOf(\\\":nth-child(\\\");if(-1!==i&&(a=parseInt(r.substr(i+11)),n&&n[a]))return n[a];const u=[];if(this.findMatchingChildren(this.data,e,0,u),u&&1===u.length){const e=u[0];return-1!==a&&(this.cachedListSelections[s]||(this.cachedListSelections[s]={}),this.cachedListSelections[s][a]=e),e}return null}getVisNodesFromSelector(e,t){const s=[];return this.findMatchingChildren(e,t,0,s),s}findChildrenOfType(e,t,s){const r=e=>{for(const n of e.children)n.type===t&&s.push(n),0!==e.children.length&&r(n)};r(e)}filterNodesBySelector(e,t,s){return t.filter(t=>r.isCssRulePartialMatch(s,t,e))}findMatchingChildren(e,t,s,n,a=[]){if(!t&&\\\"\\\"!==t)throw console.error(e,t,s,n,a),Error(\\\"undefined selector\\\");let i=t.split(\\\">\\\").map(e=>e.trim()),u=i[s];if(0===s&&\\\"svg\\\"===u&&(u=i[++s],s===i.length))return n.push(e),void a.push(t);if(t.match(/^[a-z]+$/))return this.findChildrenOfType(e,t,n);for(let d=0;d<e.children.length;d++){let o=e.children[d],h=!1;r.isCssRulePartialMatch(u,o,e)&&(s===i.length-1?(n.push(o),a.push(t)):h=!0),o.children&&(h||i.length<2)&&s+1<i.length&&this.findMatchingChildren(o,t,s+1,n,a)}}static isCssRulePartialMatch(e,t,s){if(\\\":not(\\\"===e.substr(0,5)){const n=e.substr(0,e.length-1).substr(5);return!r.isCssRulePartialMatch(n,t,s)}if(\\\".\\\"===e[0]){const s=e.split(\\\".\\\");if(s.shift(),t.className){let e=!0;for(const r of s)-1===t.className.split(\\\" \\\").indexOf(r)&&(e=!1);return e}}else if(\\\"#\\\"===e[0]){if(e.substr(1)===t.id)return!0}else if(e.match(/^[a-z]+$/)){if(e===t.type)return!0}else{if(-1!==e.indexOf(\\\":nth-child(\\\")){let r=\\\"any\\\",n=e;\\\":\\\"!==e[0]&&(r=e.substr(0,e.indexOf(\\\":\\\")),n=e.substr(e.indexOf(\\\":\\\")));const a=parseInt(n.substr(\\\":nth-child(\\\".length));return s.children.indexOf(t)===a-1&&(\\\"any\\\"===r||t.type===r)}if(-1!==e.indexOf(\\\".\\\")){const s=e.indexOf(\\\".\\\"),r=e.substr(0,s),n=e.substr(s+1);if(r===t.type&&t.className&&-1!==t.className.split(\\\" \\\").indexOf(n))return!0}}return!1}}r.IGNOREDESIGN_ATTRIBUTES=[\\\"fill\\\",\\\"stroke\\\",\\\"opacity\\\"],r.BUFFER_PRECISION_FACTOR=10,r.ROUNDED_ATTRS=[\\\"cx\\\",\\\"cy\\\"],t.VdomManager=r;let n=0;function a(...e){n<400&&(n++,console.log(...e))}}]);\\n//# sourceMappingURL=9fd57dab6b2cdd6e6cb9.worker.js.map\", __webpack_public_path__ + \"9fd57dab6b2cdd6e6cb9.worker.js\");\n};"],"sourceRoot":""}