{"version":3,"sources":["webpack://SSVG/webpack/universalModuleDefinition","webpack://SSVG/webpack/bootstrap","webpack://SSVG/./canvasworker/drawingUtils.ts","webpack://SSVG/./node_modules/worker-loader/dist/workers/InlineWorker.js","webpack://SSVG/./frontend/ssvg-auto-exporter.ts","webpack://SSVG/./frontend/ssvg.ts","webpack://SSVG/./frontend/domhandler.ts","webpack://SSVG/./util/vdom/vdom-manager.ts","webpack://SSVG/./frontend/attrs.ts","webpack://SSVG/./canvasworker/canvasrenderer.ts","webpack://SSVG/./canvasworker/index.ts","webpack://SSVG/./canvasworker/canvasworker.ts","webpack://SSVG/./syncworker/index.ts","webpack://SSVG/./syncworker/syncworker.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DrawingUtils","[object Object]","transform","transformObject","translateX","translateY","scaleX","scaleY","rotate","translateBeforeScale","rotateLast","transformString","replace","translate","exec","parseFloat","scale","substr","matrix","transformA","transformB","size","fallback","defaultValue","undefined","Math","round","parseInt","match","console","warn","color","opacity","defaultColor","cacheKey","rgbaCache","CssNamedColorToHex","rgba","test","Error","substring","length","join","g","b","rgb","hslToRgb","h","hue2rgb","q","COLOR_HEXES","toUpperCase","selector","specificity","parts","concat","apply","split","map","part","start","countClasses","min","default","ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREY","DARKGREEN","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREY","GREEN","GREENYELLOW","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","KHAKI","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREY","LIGHTGREEN","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","NAVY","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","REBECCAPURPLE","RED","ROSYBROWN","ROYALBLUE","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","STEELBLUE","TAN","TEAL","THISTLE","TOMATO","TURQUOISE","VIOLET","WHEAT","WHITE","WHITESMOKE","YELLOW","YELLOWGREEN","URL","webkitURL","content","url","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","e","Blob","Worker","createObjectURL","encodeURIComponent","ssvg_1","location","search","domhandler_1","__importDefault","canvasrenderer_1","drawingUtils_1","canvasworker_1","syncworker_1","SSVG","options","this","unassignedNodes","interactionSelections","svgAssignedAndSizeSet","lastCanvasDrawTimes","enterExitQueue","safeMode","useWorker","getFps","maxPixelRatio","canvas","document","createElement","worker","syncWorker","onmessage","data","msg","logDrawn","raf","updateFps","requestAnimationFrame","updateCanvas","captureD3On","svg","setupElementsIfSvgExists","addEventListener","propagateMouseEvent","propagateTouchEvent","lastHovered","hoveredElement","dispatchEvent","MouseEvent","duplicateTouchEvent","propagateWheelEvent","replaceNativeRemoveChild","replaceNativeAttribute","replaceNativePathFunctions","replaceNativeCreateElement","replaceNativeAppendChild","replaceD3Attr","replaceNativeSelect","replaceNativeGetComputedStyle","replaceD3Select","replaceD3Remove","setTimeout","log","vdom","svgEl","getElementsByTagName","urlConnector","href","indexOf","svgSwitchUrl","svgSwitchComment","createComment","parent","parentElement","nextSibling","next","insertBefore","appendChild","domHandler","getVDom","setCanvasSize","hasChanges","nodeUpdated","node","attr","renderer","applyStyles","transferBufferQueueData","queue","getQueue","clearQueue","updatePropertiesFromQueue","sendUpdateToWorker","draw","width","height","devicePixelRatio","style","offscreen","transferControlToOffscreen","postMessage","cmd","visData","ensureNodesMapped","element","isWithinSvg","parentEl","parentNode","d3","originalOn","selection","on","me","el","_parents","children","push","arguments","getReplacement","original","elements","_groups","filter","logContents","safeLogCount","safeLog","childElements","getVisNode","childNodes","getVisNodesFromSelector","getElementFromNode","returnValue","forEach","childNode","childEl","selectAll","select","origFilter","selectorString","firstElement","getNodeFromElement","nodes","selectors","sel","trim","filteredNodes","matchingNodes","filterNodesBySelector","filteredElements","origGetComputedStyle","getComputedStyle","getPropertyValue","propertyName","origQuerySelector","Element","querySelector","globalElementIndex","originalFct","prefix","els","returnVal","getAttributeFromSelector","keys","child","error","queueSetAttributeOnElement","queueSetAttributeOnSelection","origSelectionAttr","origSelectionStyle","originalClassed","classed","className","enableFrontendDesignProperties","prevClassNames","evaluatedValue","__data__","newClassNames","originalTransition","transition","originalText","text","newRemove","getNewRemoveChild","d3Remove","remove","origCreate","createElementNS","newArgs","Array","from","getNewAppendChild","origRemoveChild","skipUpdateSelectors","writable","childGlobalIndex","parentGlobalIndex","removeNode","removeChild","origAppend","appended","el2","keepChildren","getNodeDataFromEl","setProperty","styleProp","removeProperty","linkNodeToElement","addNodeToParent","restyleNode","addNode","index","splice","origAppendChild","newAppend","newChild","refChild","origGetTotalLength","SVGPathElement","getTotalLength","getAttribute","origSetAttribute","origSetAttr","setAttribute","origSetAttrNS","setAttributeNS","origGetAttr","evt","type","propagateEvent","createEvent","initEvent","prop","touches","touch","identifier","pageX","pageY","clientX","clientY","WheelEvent","new_event","triggeredElement","x","y","getMousePosition","interactionSel","j","vdomNode","nodeAtPosition","svgChildEl","event","pos","safeErrorLog","visNode","cx","cy","parseTransform","sqrt","pow","elX","elY","centerX","centerY","distanceX","abs","distanceY","getTotalTransformation","matchAny","Date","now","shift","timeForTenDrawsMs","fps","enterExit","update","vdom_manager_1","attrs_1","ignoreDesign","nodesToRestyle","maxGlobalElementIndex","removedNodeIndices","css","VdomManager","display","addChildNodesToVisData","attrName","ensureInitialized","set","styleName","getNodeFromIndex","tagName","toLowerCase","id","textContent","RELEVANT_ATTRS","hasAttribute","ROUNDED_ATTRS","copyStylesFromElement","CSS_STYLES","kebabCase","styleSheets","sheet","rules","cssRules","rule","selectorText","applyRuleToMatchingNodes","selectorPartsLooseStrict","relevantIds","nodeToBeStyled","getNodeParent","relevantIdMap","setStyle","longSpecName","checkNode","currentNode","looseIndex","strictIndex","selPart","childIndex","isCssRulePartialMatch","removedClass","removeRuleStylesFromNode","restyleIndex","childEls","parentSelector","elementType","getNewElementIndex","getParentNode","parents","pop","totalTransform","addTransforms","sharedData","sharedDataQueue","sharedDataQueueBuffers","useSharedArrayFor","indexToNodeMap","changed","cachedListSelections","useBuffer","numNodes","newLength","newByteLength","Int32Array","BYTES_PER_ELEMENT","byteLength","buffer","values","createBufferTransferValues","prevData","SharedArrayBuffer","prevBufferVals","BUFFER_PRECISION_FACTOR","storage","addToMap","nodeData","parentNodeIndex","removePendingChanges","styleValue","onNodeUpdated","applyStyleToNodeAndChildren","applyCssToNodeAndChildren","filtered","attrs","isArray","getSingle","setAttrQueue","attrNameStart","IGNOREDESIGN_ATTRIBUTES","self","lastSplitPos","lastIndexOf","selectorWithoutLast","lastPart","parentSel","nthChildPosition","selectedNodes","findMatchingChildren","addDirectChildrenIfMatch","matchIndex","selectedNodeSelectors","selParts","findChildrenOfType","matching","cssRuleSelectorPart","newSelPart","searchClassNames","allTrue","searchClassName","indexPart","targetIndex","cutoff","typeName","rect","circle","path","title","tspan","image","clippath","line","ROUNDED_ATTRS_ARR","forceSingle","onDrawn","parentValues","lastFullSecond","countSinceLastFullSecond","circlesByColor","rectsByColor","drawTexts","drawImages","linesByColor","ctx","getContext","save","restore","clearRect","drawLine","drawCircle","drawRect","drawText","drawImage","drawNodeAndChildren","fullSecond","performance","elData","drawClip","parentValuesBackup","assign","saveRestoreContext","applyTransform","clipPathId","clipNode","getNodeById","Path2D","clip","drawSingleNode","fill","stroke","drawFct","handle","getFillStyle","getStrokeStyle","strokeStyle","beginPath","fillStyle","lineWidth","getStrokeWidth","moveTo","arc","PI","fillAndStrokeColor","fillColor","strokeColor","sampleData","includes","getAttributeStyleCss","defaultCol","colorToRgba","highestSpec","getCssRuleSpecificityNumber","fillRect","isClip","drawSingle","fontFamily","fontSize","customSize","convertSizeToPx","font","align","textAlign","dx","dy","fillText","strokeWidth","lineJoin","addPath","textAnchor","x1","x2","y1","y2","val","lineTo","CanvasWorkerImporter","SyncWorkerImporter"],"mappings":"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","file":"ssvg-auto.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SSVG\"] = factory();\n\telse\n\t\troot[\"SSVG\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export type Transformation = {\n    translateX: number,\n    translateY: number,\n    scaleX: number,\n    scaleY: number,\n    rotate: number,\n    translateBeforeScale: boolean,\n    rotateLast: boolean,\n}\n\nexport default class DrawingUtils {\n    static parseTransform(transform: string|{}): Transformation {\n        const transformObject: Transformation = {\n            translateX: 0,\n            translateY: 0,\n            scaleX: 1,\n            scaleY: 1,\n            rotate: 0,\n            translateBeforeScale: false,\n            rotateLast: false\n        };\n        \n        if (transform) {\n            if(typeof transform !== \"string\") {\n                transformObject.scaleX = transform['k'];\n                transformObject.scaleY = transform['k'];\n                transformObject.translateX = transform['x'];\n                transformObject.translateY = transform['y'];\n                transformObject.translateBeforeScale = true;\n                return transformObject;\n            }\n            let transformString = <string> transform;\n            transformString = transformString.replace(/ /g, '');\n            \n            //let translate  = /translate\\((\\d+),(\\d+)\\)/.exec(transform);\n            const translate = /\\s*translate\\(([-0-9.]+),([-0-9.]+)\\)/.exec(transformString);\n            if (translate) {\n                transformObject.translateX = parseFloat(translate[1]);\n                transformObject.translateY = parseFloat(translate[2]);\n            }\n            else {\n                //console.error('no translate found', transform);\n            }\n            \n            const scale = /\\s*scale\\(([-0-9.]+)(,[-0-9.]+)?\\)/.exec(transformString);\n            if (scale) {\n                transformObject.scaleX = parseFloat(scale[1]);\n                transformObject.scaleY = scale[2] ? parseFloat(scale[2].substr(1)) : parseFloat(scale[1]);\n            }\n            else {\n                //console.error('no scale found', transform);\n            }\n            \n            const rotate = /\\s*rotate\\(([-0-9.]+)\\)/.exec(transformString);\n            if (rotate) {\n                transformObject.rotate = parseFloat(rotate[1]);\n            }\n            else {\n                //console.error('no rotate found', transform);\n            }\n            \n            const translateScale = /\\s*translate\\(([-0-9.]+),([-0-9.]+)\\)scale\\(([-0-9.,]+)\\)/.exec(transformString);\n            if (translateScale) {\n                transformObject.translateBeforeScale = true;\n            }\n\n            const rotateLast = /\\s*rotate\\(([-0-9.,]+)\\)$/.exec(transformString);\n            if (rotateLast) {\n                transformObject.rotateLast = true;\n            }\n            \n            const matrix = /\\s*matrix\\(([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+)\\)/.exec(transformString);\n            if(matrix) {\n                transformObject.scaleX = parseFloat(matrix[1]);\n                // 2 is horizontal skewing\n                // 3 is vertical skewing\n                transformObject.scaleY = parseFloat(matrix[4]);\n                transformObject.translateX = parseFloat(matrix[5]);\n                transformObject.translateY = parseFloat(matrix[6]);\n            }\n        }\n        \n        return transformObject;\n    }\n\n    static addTransforms(transformA: Transformation, transformB: Transformation): Transformation {\n        return {\n            translateX: transformA.translateX + transformB.translateX,\n            translateY: transformA.translateY + transformB.translateY,\n            scaleX: transformA.scaleX * transformB.scaleX,\n            scaleY: transformA.scaleY * transformB.scaleY,\n            rotate: transformA.rotate + transformB.rotate,\n            translateBeforeScale: false,\n            rotateLast: false\n        };\n        //TODO: consider translateBeforeScale and rotateLast\n    }\n\n    static convertSizeToPx(size: string|number, fallback = true): number|undefined {\n        const defaultValue = fallback ? 14 : undefined;\n        if(size === undefined) {\n            return defaultValue;\n        }\n        if(typeof size === \"number\") {\n            return size;\n        }\n        if(size.substr(-2) === 'em') {\n            return Math.round(parseFloat(size) * 12);\n        }\n        if(size.substr(-2) === 'px') {\n            return parseInt(size);\n        }\n        if(size.match(/^[0-9]+$/)) {\n            return parseInt(size);\n        }\n        console.warn('size in unsupported format: ', size);\n        return defaultValue;\n    }\n\n    static rgbaCache = {};\n    static colorToRgba(color: string|{r: number, g: number, b: number}|{h: number, s: number, l: number},\n                       opacity: string|number = 1,\n                       defaultColor ='none'): string {\n        if(color === 'none') {\n            return color;\n        }\n        if(!color) {\n            color = defaultColor;\n        }\n        const cacheKey = `${color}-${opacity}`;\n        if(DrawingUtils.rgbaCache[cacheKey]) {\n            return DrawingUtils.rgbaCache[cacheKey];\n        }\n\n        color = DrawingUtils.CssNamedColorToHex(color);\n        if(opacity === 1 && typeof color === 'string') {\n            DrawingUtils.rgbaCache[cacheKey] = color;\n            return color;\n        }\n        let rgba: string;\n        if(typeof color === 'string' && color[0] === '#') {\n            let c; // From https://stackoverflow.com/questions/21646738/convert-hex-to-rgba\n            if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(color)){\n                c = color.substring(1);\n                if(c.length == 3){\n                    c = c[0] + c[0] + c[1] + c[1] + c[2] + c[2];\n                }\n                c = '0x' + c;\n                rgba = 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n            } else {\n                throw new Error('Bad Hex');\n            }\n        } else if(typeof color === 'object') {\n            if('r' in color) {\n                rgba = 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')';\n            } else if('h' in color) {\n                const rgb = DrawingUtils.hslToRgb(color.h / 360, color.s, color.l);\n                rgba = 'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + opacity + ')';\n            }\n        } else if(color.substr(0, 4) === 'rgb(') {\n            rgba = color.substr(0, color.length - 1).replace('rgb','rgba') +\n                ', ' + opacity + ')';\n        }\n        DrawingUtils.rgbaCache[cacheKey] = rgba;\n        return rgba;\n    }\n\n    // From https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\n    static hslToRgb(h, s, l) {\n        var r, g, b;\n\n        if(s == 0){\n            r = g = b = l; // achromatic\n        } else {\n            var hue2rgb = function hue2rgb(p, q, t){\n                if(t < 0) t += 1;\n                if(t > 1) t -= 1;\n                if(t < 1/6) return p + (q - p) * 6 * t;\n                if(t < 1/2) return q;\n                if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n                return p;\n            };\n\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1/3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1/3);\n        }\n\n        return {r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255)};\n    }\n\n    static CssNamedColorToHex(color: any) {\n        if(typeof color === 'string' && COLOR_HEXES[color.toUpperCase()]) {\n            return COLOR_HEXES[color.toUpperCase()];\n        }\n        return color;\n    }\n\n    /**\n     * Basic implementation to get a sense of specificity. Numbers are completely made up.\n     * Should eventually be more sophisticated, e.g. using https://github.com/keeganstreet/specificity.\n     * @param selector CSS rule as string.\n     */\n    static getCssRuleSpecificityNumber(selector: string) {\n        let specificity = 0;\n\n        selector = selector\n            .replace(/ >/g, '>')\n            .replace(/> /g, '>');\n\n        const parts = [].concat.apply([], selector.split(' ')\n            .map(part => part.split('>')));\n\n        // Rough logic: the more stuff, the more specific. IDs and classes are more specific than other things.\n        for(const part of parts) {\n            specificity += 100;\n            const start = part[0];\n\n            if(start === '#') {\n                specificity += 1000;\n            } else if(start === '.') {\n                // More classes are more specific, but never more specific than an ID.\n                const countClasses = part.split('.').length - 1;\n                specificity += Math.min(900, countClasses * 100);\n            }\n        }\n\n        return specificity;\n    }\n}\n\nconst COLOR_HEXES = {\n    ALICEBLUE: '#F0F8FF',\n    ANTIQUEWHITE: '#FAEBD7',\n    AQUA: '#00FFFF',\n    AQUAMARINE: '#7FFFD4',\n    AZURE: '#F0FFFF',\n    BEIGE: '#F5F5DC',\n    BISQUE: '#FFE4C4',\n    BLACK: '#000000',\n    BLANCHEDALMOND: '#FFEBCD',\n    BLUE: '#0000FF',\n    BLUEVIOLET: '#8A2BE2',\n    BROWN: '#A52A2A',\n    BURLYWOOD: '#DEB887',\n    CADETBLUE: '#5F9EA0',\n    CHARTREUSE: '#7FFF00',\n    CHOCOLATE: '#D2691E',\n    CORAL: '#FF7F50',\n    CORNFLOWERBLUE: '#6495ED',\n    CORNSILK: '#FFF8DC',\n    CRIMSON: '#DC143C',\n    CYAN: '#00FFFF',\n    DARKBLUE: '#00008B',\n    DARKCYAN: '#008B8B',\n    DARKGOLDENROD: '#B8860B',\n    DARKGRAY: '#A9A9A9',\n    DARKGREY: '#A9A9A9',\n    DARKGREEN: '#006400',\n    DARKKHAKI: '#BDB76B',\n    DARKMAGENTA: '#8B008B',\n    DARKOLIVEGREEN: '#556B2F',\n    DARKORANGE: '#FF8C00',\n    DARKORCHID: '#9932CC',\n    DARKRED: '#8B0000',\n    DARKSALMON: '#E9967A',\n    DARKSEAGREEN: '#8FBC8F',\n    DARKSLATEBLUE: '#483D8B',\n    DARKSLATEGRAY: '#2F4F4F',\n    DARKSLATEGREY: '#2F4F4F',\n    DARKTURQUOISE: '#00CED1',\n    DARKVIOLET: '#9400D3',\n    DEEPPINK: '#FF1493',\n    DEEPSKYBLUE: '#00BFFF',\n    DIMGRAY: '#696969',\n    DIMGREY: '#696969',\n    DODGERBLUE: '#1E90FF',\n    FIREBRICK: '#B22222',\n    FLORALWHITE: '#FFFAF0',\n    FORESTGREEN: '#228B22',\n    FUCHSIA: '#FF00FF',\n    GAINSBORO: '#DCDCDC',\n    GHOSTWHITE: '#F8F8FF',\n    GOLD: '#FFD700',\n    GOLDENROD: '#DAA520',\n    GRAY: '#808080',\n    GREY: '#808080',\n    GREEN: '#008000',\n    GREENYELLOW: '#ADFF2F',\n    HONEYDEW: '#F0FFF0',\n    HOTPINK: '#FF69B4',\n    INDIANRED: '#CD5C5C',\n    INDIGO: '#4B0082',\n    IVORY: '#FFFFF0',\n    KHAKI: '#F0E68C',\n    LAVENDER: '#E6E6FA',\n    LAVENDERBLUSH: '#FFF0F5',\n    LAWNGREEN: '#7CFC00',\n    LEMONCHIFFON: '#FFFACD',\n    LIGHTBLUE: '#ADD8E6',\n    LIGHTCORAL: '#F08080',\n    LIGHTCYAN: '#E0FFFF',\n    LIGHTGOLDENRODYELLOW: '#FAFAD2',\n    LIGHTGRAY: '#D3D3D3',\n    LIGHTGREY: '#D3D3D3',\n    LIGHTGREEN: '#90EE90',\n    LIGHTPINK: '#FFB6C1',\n    LIGHTSALMON: '#FFA07A',\n    LIGHTSEAGREEN: '#20B2AA',\n    LIGHTSKYBLUE: '#87CEFA',\n    LIGHTSLATEGRAY: '#778899',\n    LIGHTSLATEGREY: '#778899',\n    LIGHTSTEELBLUE: '#B0C4DE',\n    LIGHTYELLOW: '#FFFFE0',\n    LIME: '#00FF00',\n    LIMEGREEN: '#32CD32',\n    LINEN: '#FAF0E6',\n    MAGENTA: '#FF00FF',\n    MAROON: '#800000',\n    MEDIUMAQUAMARINE: '#66CDAA',\n    MEDIUMBLUE: '#0000CD',\n    MEDIUMORCHID: '#BA55D3',\n    MEDIUMPURPLE: '#9370DB',\n    MEDIUMSEAGREEN: '#3CB371',\n    MEDIUMSLATEBLUE: '#7B68EE',\n    MEDIUMSPRINGGREEN: '#00FA9A',\n    MEDIUMTURQUOISE: '#48D1CC',\n    MEDIUMVIOLETRED: '#C71585',\n    MIDNIGHTBLUE: '#191970',\n    MINTCREAM: '#F5FFFA',\n    MISTYROSE: '#FFE4E1',\n    MOCCASIN: '#FFE4B5',\n    NAVAJOWHITE: '#FFDEAD',\n    NAVY: '#000080',\n    OLDLACE: '#FDF5E6',\n    OLIVE: '#808000',\n    OLIVEDRAB: '#6B8E23',\n    ORANGE: '#FFA500',\n    ORANGERED: '#FF4500',\n    ORCHID: '#DA70D6',\n    PALEGOLDENROD: '#EEE8AA',\n    PALEGREEN: '#98FB98',\n    PALETURQUOISE: '#AFEEEE',\n    PALEVIOLETRED: '#DB7093',\n    PAPAYAWHIP: '#FFEFD5',\n    PEACHPUFF: '#FFDAB9',\n    PERU: '#CD853F',\n    PINK: '#FFC0CB',\n    PLUM: '#DDA0DD',\n    POWDERBLUE: '#B0E0E6',\n    PURPLE: '#800080',\n    REBECCAPURPLE: '#663399',\n    RED: '#FF0000',\n    ROSYBROWN: '#BC8F8F',\n    ROYALBLUE: '#4169E1',\n    SADDLEBROWN: '#8B4513',\n    SALMON: '#FA8072',\n    SANDYBROWN: '#F4A460',\n    SEAGREEN: '#2E8B57',\n    SEASHELL: '#FFF5EE',\n    SIENNA: '#A0522D',\n    SILVER: '#C0C0C0',\n    SKYBLUE: '#87CEEB',\n    SLATEBLUE: '#6A5ACD',\n    SLATEGRAY: '#708090',\n    SLATEGREY: '#708090',\n    SNOW: '#FFFAFA',\n    SPRINGGREEN: '#00FF7F',\n    STEELBLUE: '#4682B4',\n    TAN: '#D2B48C',\n    TEAL: '#008080',\n    THISTLE: '#D8BFD8',\n    TOMATO: '#FF6347',\n    TURQUOISE: '#40E0D0',\n    VIOLET: '#EE82EE',\n    WHEAT: '#F5DEB3',\n    WHITE: '#FFFFFF',\n    WHITESMOKE: '#F5F5F5',\n    YELLOW: '#FFFF00',\n    YELLOWGREEN: '#9ACD32'\n};\n\n","'use strict';\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};","import SSVG from \"./ssvg\";\n\nif(!location.search.match(/(\\?|&)svg($|&)/)) {\n    window['ssvg'] = new SSVG();\n}\n\nexport = SSVG;\n","import {VdomManager} from \"../util/vdom/vdom-manager\";\nimport {VdomNode} from \"../util/vdom/vdom\";\nimport {CanvasWorkerMessage, CanvasUpdateWorkerMessage, CanvasUpdateData} from \"../util/canvas-worker-message\"\nimport Domhandler, {SsvgElement} from \"./domhandler\";\nimport CanvasWorker from \"../canvasworker/canvasworker\";\nimport Canvasrenderer from \"../canvasworker/canvasrenderer\";\nimport DrawingUtils from \"../canvasworker/drawingUtils\";\nimport CanvasWorkerImporter from '../canvasworker';\nimport SyncWorkerImporter from '../syncworker';\n\nexport default class SSVG {\n    private unassignedNodes: Node[] = [];\n    private worker: Worker;\n    private syncWorker: Worker;\n    private domHandler: Domhandler;\n    private vdom: VdomManager;\n    private interactionSelections: SsvgElement[] = [];\n    \n    private renderer: CanvasWorker;\n\n    private svg: (SVGElement & SsvgElement)|undefined;\n    private readonly canvas: HTMLCanvasElement;\n    private svgAssignedAndSizeSet = false;\n    \n    private lastCanvasDrawTimes: number[] = [];\n    \n    private enterExitQueue: CanvasUpdateData[] = [];\n\n    private readonly safeMode: boolean = false;\n    private readonly maxPixelRatio: number|undefined;\n    private readonly useWorker: boolean = true;\n    private readonly getFps: (fps: number) => void = () => {};\n\n    private hoveredElement: Element|undefined;\n\n    constructor(options?: {\n        safeMode?: boolean,\n        maxPixelRatio?: number,\n        useWorker?: boolean,\n        getFps?: (fps: number) => void,\n        svg?: SVGElement & SsvgElement,\n    }) {\n        if(options) {\n            if(options.safeMode !== undefined) {\n                this.safeMode = options.safeMode;\n            }\n            this.maxPixelRatio = options.maxPixelRatio;\n            if(options.useWorker !== undefined) {\n                this.useWorker = options.useWorker;\n            }\n            if(options.getFps !== undefined) {\n                this.getFps = options.getFps;\n            }\n        }\n\n        this.canvas = document.createElement('canvas');\n        if(!('OffscreenCanvas' in window)) {\n            this.useWorker = false;\n        }\n\n        if(this.useWorker) {\n            this.worker = new CanvasWorkerImporter();\n            this.syncWorker = new SyncWorkerImporter();\n    \n            this.worker.onmessage = e => {\n                if(e.data && e.data.msg && e.data.msg === 'DRAWN') {\n                    this.logDrawn();\n                    //this.updateCanvas();\n                }\n            };\n            const raf = () => {\n                this.updateFps();\n                requestAnimationFrame(raf);\n                this.updateCanvas();\n            };\n            raf();\n        } else {\n            const raf = () => {\n                this.updateFps();\n                this.logDrawn();\n                this.updateCanvas();\n                requestAnimationFrame(raf);\n            };\n            raf();\n        }\n\n        this.captureD3On();\n        const svg = options && options.svg ? options.svg : undefined;\n        this.setupElementsIfSvgExists(svg);\n        \n        this.canvas.addEventListener('mousedown', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('touchstart', e => this.propagateTouchEvent(e));\n        this.canvas.addEventListener('mousemove', e => {\n            const lastHovered = this.hoveredElement;\n            this.hoveredElement = this.propagateMouseEvent(e);\n            if(lastHovered !== this.hoveredElement) {\n                if(lastHovered) {\n                    lastHovered.dispatchEvent(new MouseEvent('mouseout', e));\n                }\n            }\n            this.propagateMouseEvent(e, 'mouseover');\n        });\n        this.canvas.addEventListener('touchmove', e => {\n            const lastHovered = this.hoveredElement;\n            this.hoveredElement = this.propagateTouchEvent(e);\n            if(lastHovered !== this.hoveredElement) {\n                if(lastHovered) {\n                    lastHovered.dispatchEvent(this.duplicateTouchEvent(e, 'mouseout'));\n                }\n            }\n            this.propagateTouchEvent(e, 'mouseover');\n        });\n        this.canvas.addEventListener('mouseup', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('touchend', e => this.propagateTouchEvent(e));\n        this.canvas.addEventListener('click', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('wheel', e => this.propagateWheelEvent(e));\n\n        this.replaceNativeRemoveChild();\n        this.replaceNativeAttribute();\n        this.replaceNativePathFunctions();\n        this.replaceNativeCreateElement();\n        this.replaceNativeAppendChild();\n        this.replaceD3Attr();\n        this.replaceNativeSelect();\n        this.replaceNativeGetComputedStyle();\n        this.replaceD3Select();\n        this.replaceD3Remove();\n\n        setTimeout(() => {\n            console.log(this.vdom.data);\n        }, 1000);\n    }\n    \n    private setupElementsIfSvgExists(svgEl?: SVGElement & SsvgElement) {\n        if(this.svg) {\n            return true;\n        }\n\n        const svg = !svgEl ? document.getElementsByTagName('svg')[0] : svgEl;\n        \n        if(!svg) {\n            return false;\n        }\n\n        const urlConnector = document.location.href.indexOf('?') === -1 ? '?' : '&';\n        const svgSwitchUrl = document.location.href + urlConnector + 'svg';\n        const svgSwitchComment = document.createComment(' This project uses SSVG.io to render a SVG as Canvas.\\r\\n' +\n            'To inspect the SVG, please open the following URL:\\r\\n' +\n            svgSwitchUrl + '\\r\\n');\n        \n        this.svg = svg as SVGElement & SsvgElement;\n        const parent = this.svg.parentElement;\n\n        if(this.svg.nextSibling) {\n            const next = this.svg.nextSibling;\n            parent.insertBefore(svgSwitchComment, next);\n            parent.insertBefore(this.canvas, next);\n        } else {\n            parent.appendChild(svgSwitchComment);\n            parent.appendChild(this.canvas);\n        }\n\n        this.domHandler = new Domhandler(this.svg, this.useWorker, this.useWorker);\n        this.vdom = this.domHandler.getVDom();\n\n        this.setCanvasSize();\n        \n        return true;\n    }\n\n    private updateCanvas() {\n        if(!this.svgAssignedAndSizeSet) {\n            return;\n        }\n\n        if(!this.vdom.hasChanges() && !this.domHandler.hasChanges()) {\n            requestAnimationFrame(() => this.updateCanvas());\n            return;\n        }\n\n        const nodeUpdated = this.useWorker ? undefined : (node, attr) =>\n            this.renderer.nodeUpdated(node, attr);\n        this.domHandler.applyStyles();\n\n        this.vdom.transferBufferQueueData();\n        const queue = this.vdom.getQueue();\n        this.vdom.clearQueue();\n        this.vdom.updatePropertiesFromQueue(queue, nodeUpdated);\n\n        if(this.useWorker) {\n            this.sendUpdateToWorker(queue);\n        } else {\n            if(this.renderer.updatePropertiesFromQueue) {\n                this.renderer.updatePropertiesFromQueue(queue);\n            }\n            this.renderer.draw();\n        }\n    }\n    \n    private setCanvasSize() {\n        if(!this.svg || !this.vdom.data.width || !this.vdom.data.height) {\n            return;\n        }\n        this.vdom.data.scale = window.devicePixelRatio;\n        if(this.maxPixelRatio !== undefined && this.vdom.data.scale > this.maxPixelRatio) {\n            this.vdom.data.scale = this.maxPixelRatio;\n        }\n    \n        this.canvas.style.width = this.vdom.data.width + 'px';\n        this.canvas.style.height = this.vdom.data.height + 'px';\n        this.canvas.width = this.vdom.data.width * this.vdom.data.scale;\n        this.canvas.height = this.vdom.data.height * this.vdom.data.scale;\n        \n        if(this.useWorker) {\n            const offscreen = (this.canvas as any).transferControlToOffscreen();\n            this.worker.postMessage({cmd: 'INIT', data: {\n                    canvas: offscreen,\n                    visData: this.vdom.data,\n                    safeMode: this.safeMode\n                }\n            }, [offscreen]);\n            this.vdom.ensureNodesMapped();\n        } else {\n            this.renderer = new Canvasrenderer(this.vdom, this.canvas, this.safeMode, () => {});\n        }\n        \n        this.svgAssignedAndSizeSet = true;\n    }\n\n    private isWithinSvg(element: Element) {\n        let isWithinSvg = false;\n        let parentEl = element;\n\n        while(parentEl && parentEl.parentNode) {\n            if(parentEl === this.svg) {\n                isWithinSvg = true;\n            }\n            parentEl = <Element> parentEl.parentNode;\n        }\n        return isWithinSvg;\n    }\n    \n    private captureD3On() {\n        if((window as any)['d3']) {\n            const d3 = (window as any)['d3'];\n            const originalOn = d3.selection.prototype.on;\n            const me = this;\n\n            d3.selection.prototype.on = function()\n            {\n                let el = this._parents && this._parents.length ? this._parents[0] : this[0].parentNode;\n                if(el === document.children[0]) {\n                    el = me.svg;\n                }\n                let isWithinSvg = me.isWithinSvg(el);\n\n                if(el && isWithinSvg && me.interactionSelections.indexOf(el) === -1)\n                {\n                    me.interactionSelections.push(el); // This one works for native get/setAttribute\n                    //interactionSelections.push(this); // This one works for d3 .attr.\n                }\n        \n                return originalOn.apply(this, arguments);\n            };\n        }\n    }\n    \n    private replaceD3Select() {\n        if((window as any)['d3']) {\n            const me = this;\n            const d3 = (window as any)['d3'];\n\n            const getReplacement = (original) => {\n                return function(selector: string|(()=>{})) {\n                    if(typeof selector === 'string') {\n                        if(selector === 'body') {\n                            return original.apply(this, arguments);\n                        }\n                        let elements: SsvgElement[];\n                        if(this === d3) {\n                            elements = [me.svg];\n                        } else {\n                            elements = this._groups ? this._groups[0] : this[0];\n                        }\n\n                        if(!elements.filter(e => e).length) {\n                            safeLog('element not found within svg, using normal execution', this, selector);\n                            return original.apply(this, arguments);\n                        }\n\n                        let childElements: SsvgElement[] = [];\n\n                        for(let i = 0; i < elements.length; i++) {\n                            const element = elements[i];\n                            const node = me.domHandler.getVisNode(element);\n\n                            if(!node) {\n                                console.warn('node not found', element);\n                                return original.apply(this, arguments);\n                            }\n\n                            const childNodes = me.vdom.getVisNodesFromSelector(node, selector);\n                            childElements = childElements.concat(childNodes.map(node => {\n                                return me.domHandler.getElementFromNode(node);\n                            }));\n                        }\n\n                        const returnValue = original.apply(this, arguments);\n                        const elementsOutsideSvg: NodeList = returnValue._groups ? returnValue._groups[0]\n                            : returnValue[0];\n                        elementsOutsideSvg.forEach(childNode => {\n                            const childEl = <SsvgElement> <any> childNode;\n                            if(childElements.indexOf(childEl) === -1) {\n                                childElements.push();\n                            }\n                        });\n\n                        if(returnValue._groups) {\n                            returnValue._groups[0] = childElements;\n                        } else {\n                            // Older d3 versions\n                            const parentNode = returnValue[0].parentNode;\n                            returnValue[0] = childElements;\n                            returnValue[0].parentNode = parentNode;\n                        }\n\n                        return returnValue;\n                    }\n\n                    return original.apply(this, arguments);\n                }\n            };\n\n            d3.selection.prototype.selectAll = getReplacement(d3.selection.prototype.selectAll);\n            d3.selectAll = getReplacement(d3.selectAll);\n            d3.selection.prototype.select = getReplacement(d3.selection.prototype.select);\n            d3.select = getReplacement(d3.select);\n\n            const origFilter = d3.selection.prototype.filter;\n            d3.selection.prototype.filter = function(selectorString: string) {\n                const elements = this._groups ? this._groups[0] : this[0];\n                if(typeof selectorString !== 'string') {\n                    return origFilter.apply(this, arguments);\n                }\n                let firstElement = elements[0];\n                let i = 1;\n                while(!firstElement && i < elements.length) {\n                    i++;\n                    firstElement = elements[i];\n                }\n\n                const parentNode = firstElement ? me.domHandler.getNodeFromElement(firstElement.parentNode) : null;\n                const nodes = elements.map(element => me.domHandler.getNodeFromElement(element));\n\n                const selectors = selectorString.split(',').map(sel => sel.trim());\n                const filteredNodes = [];\n\n                for(const selector of selectors) {\n                    const matchingNodes = me.vdom.filterNodesBySelector(parentNode, nodes, selector);\n\n                    for(const node of matchingNodes) {\n                        if(filteredNodes.indexOf(node) === -1) {\n                            filteredNodes.push(node);\n                        }\n                    }\n                }\n\n                const filteredElements = filteredNodes.map(node => me.domHandler.getElementFromNode(node));\n\n                const returnValue = origFilter.apply(this, arguments);\n\n                if(returnValue._groups) {\n                    returnValue._groups[0] = filteredElements;\n                } else {\n                    // Older d3 versions\n                    const parentNode = returnValue[0].parentNode;\n                    returnValue[0] = filteredElements;\n                    returnValue[0].parentNode = parentNode;\n                }\n                return returnValue;\n            }\n        }\n    }\n\n    private replaceNativeGetComputedStyle() {\n        const origGetComputedStyle = window.getComputedStyle;\n        const me = this;\n\n        window.getComputedStyle = function(element: SsvgElement) {\n            if(element && !me.isWithinSvg(element) && (<Window> <any> element) !== window) {\n                return origGetComputedStyle.call(this, element);\n            }\n\n            const node = me.domHandler.getNodeFromElement(element);\n            if(!node) {\n                console.warn('node not found for ', this, element);\n                return origGetComputedStyle.call(this, element);\n            }\n            return {\n                getPropertyValue(propertyName: string): string {\n                    //console.log(propertyName, node, node.style[propertyName]);\n                    return node.style[propertyName];\n                }\n            } as CSSStyleDeclaration;\n        };\n    }\n\n    private replaceNativeSelect() {\n        const origQuerySelector = Element.prototype.querySelector;\n        const me = this;\n\n        Element.prototype.querySelector = function(this: SsvgElement, selector: string) {\n            if(!me.isWithinSvg(this)) {\n                return origQuerySelector.apply(this, arguments);\n            }\n\n            const node = me.domHandler.getVisNode(this);\n            const childNodes = me.vdom.getVisNodesFromSelector(node, selector);\n            if(childNodes.length === 0) {\n                console.warn('could not find selection', this, node, node.globalElementIndex, selector);\n                return null;\n            }\n            return me.domHandler.getElementFromNode(childNodes[0]);\n        };\n    }\n\n    private replaceD3Attr() {\n\n        const me = this;\n\n        function getReplacement(originalFct, prefix = '') {\n            return function(name, value) {\n                \n                if(value === undefined) {\n\n                    if(me.unassignedNodes.indexOf(this) !== -1) {\n                        return originalFct.apply(this, arguments);\n                    } else {\n                        // Dealing with d3 v3.\n                        const els = this._groups ? this._groups[0] : this[0];\n                        if(els[0] && !me.isWithinSvg(els[0])) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        if(els.length > 1) {\n                            const returnVal = [];\n                            for(const el of els) {\n                                returnVal.push(me.domHandler.getAttributeFromSelector(el, name))\n                            }\n                            return returnVal;\n                        } else {\n                            return me.domHandler.getAttributeFromSelector(els[0], name);\n                        }\n                    }\n                } else {\n                    if(name === 'class' || !me.svg) {\n                        return originalFct.apply(this, arguments);\n                    }\n                    // For d3 v4, this would just be this.groups[0]. The rest is for\n                    // earlier versions, where selectAll() returned other values.\n                    let elements = this._groups ? this._groups[0] : this[0];\n\n                    if(typeof elements === 'object' && Object.keys(elements).length === 1 && elements.parentNode) {\n                        const parentElement = elements.parentNode;\n                        let parentNode: VdomNode;\n                        if(parentElement !== document.children[0]) {\n                            parentNode = me.domHandler.getVisNode(parentElement);\n                        } else {\n                            parentNode = me.vdom.data;\n                        }\n\n                        elements = [];\n                        for(const child of parentNode.children) {\n                            elements.push(me.domHandler.getElementFromNode(child));\n                        }\n                    }\n                    if(!elements) {\n                        return originalFct.apply(this, arguments);\n                    }\n                    const filteredElements = [];\n                    try {\n                        for (const element of elements) {\n                            if (element) {\n                                filteredElements.push(element);\n                            }\n                        }\n                    } catch(e) {\n                        console.error(elements, this);\n                        console.error(e);\n                    }\n                    if(filteredElements.length === 1) {\n                        const element = filteredElements[0];\n                        if(!element) {\n                            console.warn('element not found', this, name, value);\n                            return this;\n                        }\n                        if(!me.isWithinSvg(element)) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        me.domHandler.queueSetAttributeOnElement(element, prefix + name, value);\n                    } else {\n                        if(!me.isWithinSvg(elements[0])) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        me.domHandler.queueSetAttributeOnSelection(filteredElements, prefix + name, value);\n                    }\n                    \n                    if(filteredElements[0] === me.svg && (name === 'width' || name === 'height')) {\n                        me.vdom.data[name] = parseInt(value);\n                        me.setCanvasSize();\n                    }\n                \n                    return this;\n                }\n            };\n        }\n    \n        if((window as any)['d3']) {\n            const d3 = (window as any)['d3'];\n\n            const origSelectionAttr = d3.selection.prototype.attr;\n            d3.selection.prototype.attr = getReplacement(origSelectionAttr);\n\n            const origSelectionStyle = d3.selection.prototype.style;\n            d3.selection.prototype.style = getReplacement(origSelectionStyle, 'style;');\n\n            const originalClassed = d3.selection.prototype.classed;\n            d3.selection.prototype.classed = function(className: string,\n                                                      value?: boolean|((data: any, index: number) => boolean)) {\n                if(value !== undefined) {\n                    me.domHandler.enableFrontendDesignProperties();\n                    let elements = this._groups ? this._groups[0] : this[0];\n                    let i = -1;\n                    for(let element of elements) {\n                        i++;\n                        if(element) {\n                            const node = me.domHandler.getNodeFromElement(element);\n                            if(!node) {\n                                console.warn('node not found', element);\n                                continue;\n                            }\n                            const prevClassNames = node.className || '';\n                            const evaluatedValue = typeof value === \"function\" ? value(element.__data__, i) : value;\n                            if(evaluatedValue === true) {\n                                if(prevClassNames.indexOf(className) === -1) {\n                                    let newClassNames = (prevClassNames + ' ' + className).trim();\n\n                                    me.domHandler.queueSetAttributeOnElement(element, 'class', newClassNames);\n                                }\n                            } else if(evaluatedValue === false) {\n                                const containedPreviously = prevClassNames.indexOf(className) !== -1;\n                                if(containedPreviously) {\n                                    const newClassNames = prevClassNames.replace(className, '').replace('  ', ' ');\n                                    me.domHandler.queueSetAttributeOnElement(element, 'class', newClassNames);\n\n                                    if(!node['removedClasses']) {\n                                        node['removedClasses'] = [];\n                                    }\n                                    node['removedClasses'].push(className); // For removing associated styles.\n                                }\n                            }\n                        }\n\n                    }\n                }\n                return originalClassed.apply(this, arguments);\n            };\n\n            const originalTransition = d3.selection.prototype.transition;\n            d3.selection.prototype.transition = function() {\n                me.domHandler.enableFrontendDesignProperties();\n                return originalTransition.apply(this, arguments);\n            };\n\n            const originalText = d3.selection.prototype.text;\n            d3.selection.prototype.text = function(value?: (number|string|((el: HTMLElement) => (number|string)))) {\n                if(value !== undefined) {\n                    let elements = this._groups ? this._groups[0] : this[0];\n                    let i = 0;\n                    for(let element of elements) {\n                        if(element && me.isWithinSvg(element)) {\n                            me.domHandler.queueSetAttributeOnElement(element, 'text', value);\n                        }\n\n                        i++;\n                    }\n                }\n                return originalText.apply(this, arguments);\n            };\n        }\n    }\n\n    private replaceD3Remove() {\n        if(window['d3']) {\n            const d3 = window['d3'];\n            const me = this;\n\n            const newRemove = this.getNewRemoveChild(() => {}, true);\n            const d3Remove = function() {\n                let elements = this._groups ? this._groups[0] : this[0];\n\n                if(elements.length) {\n                    let parentElement: SsvgElement = null;\n                    for(let i = elements.length - 1; i > -1; i--) {\n                        const element = elements[i];\n                        if(element) {\n                            parentElement = element.parentNode;\n                            if(!parentElement) {\n                                console.error('element has no parent node', element);\n                            }\n                            newRemove.call(parentElement, element);\n                        }\n                    }\n                }\n                return this;\n            };\n            d3.selection.prototype.remove = d3Remove;\n            //d3.transition.prototype.remove = d3Remove;\n        }\n    }\n    \n    private replaceNativeCreateElement() {\n        const origCreate = document.createElementNS;\n        const me = this;\n        \n        document.createElementNS = function() {\n            let newArgs = Array.from(arguments);\n            const el = origCreate.apply(this, newArgs);\n            \n            /*el.appendChild = () => {\n                console.log('hi!!', el, arguments);\n                //return el;\n            };*/\n    \n            el.appendChild = me.getNewAppendChild(el.appendChild);\n            \n            me.unassignedNodes.push(el);\n    \n            //console.log(me.unassignedNodes);\n            \n            return el;\n        }\n    }\n\n    private getNewRemoveChild(origRemoveChild: ((<T extends Node>(oldChild: T) => T)|(() => void)),\n        skipUpdateSelectors = false) {\n        const me = this;\n\n        return function<T extends Node>(this: SsvgElement, el: T & SsvgElement) {\n            if(!this) {\n                console.error('context not defined');\n                return el;\n            }\n            if(!me.isWithinSvg(el)) {\n                return origRemoveChild.apply(this, arguments);\n            }\n            const parentNode = me.domHandler.getNodeFromElement(this);\n            const node = me.domHandler.getNodeFromElement(el);\n\n            if(!node) {\n                console.error('node not found', node, el, this, parentNode);\n                return origRemoveChild.apply(this, arguments);\n            }\n\n            // Remove all child elements.\n            /*for(const childNode of node.children) {\n                const childEl = me.domHandler.getElementFromNode(childNode);\n                el.removeChild(childEl);\n            }*/\n\n            // Remove from current parent first.\n            Object.defineProperty(el, 'parentNode', {\n                writable: true,\n                value: undefined\n            });\n\n            //console.log('remove')\n            me.enterExitQueue.push({\n                cmd: 'EXIT',\n                childGlobalIndex: el.globalElementIndex,\n                parentGlobalIndex: parentNode.globalElementIndex\n            });\n\n            me.domHandler.removeNode(el, node, parentNode);\n\n            // Fix child indices of all children.\n            if(!skipUpdateSelectors) {\n                if(!parentNode) {\n                    console.error('parent not found', parentNode, this, el);\n                }\n            }\n\n            delete el['selector'];\n\n            return el;\n        };\n    }\n\n    private replaceNativeRemoveChild() {\n        Element.prototype.removeChild = this.getNewRemoveChild(Element.prototype.removeChild);\n    }\n    \n    private getNewAppendChild(origAppend) {\n        const me = this;\n        \n        return function<T extends Node>(this: SsvgElement, el: T & SsvgElement) {\n            if(!me.svgAssignedAndSizeSet) {\n                if(!me.svg && el['tagName'] === 'svg') {\n                    const appended = origAppend.apply(this, arguments);\n                    me.setupElementsIfSvgExists(<SVGElement & SsvgElement> <any> el);\n                    return appended;\n                    \n                } else {\n                    return origAppend.apply(this, arguments);\n                }\n            }\n            \n            if(!me.isWithinSvg(this)) {\n                return origAppend.apply(this, arguments);\n            }\n\n            Object.defineProperty(el, 'ownerSVGElement', {\n                writable: true,\n                value: me.svg\n            });\n            el['appendChild'] = <T extends Node>(el2: T) => {\n                return me.getNewAppendChild(origAppend).call(el, el2);\n            };\n\n            const parentNode = me.domHandler.getNodeFromElement(this);\n            if(!parentNode) {\n                return console.error('parent node not found', this);\n            }\n            let node: VdomNode;\n            let keepChildren = false;\n\n            if(el.globalElementIndex) {\n                node = me.domHandler.getVisNode(el);\n\n                me.getNewRemoveChild(() => {}).call(this, el);\n                keepChildren = true; // If the element is being moved around, keep children.\n            } else {\n                node = me.domHandler.getNodeDataFromEl(el);\n            }\n\n            Object.defineProperty(el, 'style', {\n                writable: true,\n                value: {\n                    setProperty: function(styleProp: string, value: string) {\n                        me.domHandler.queueSetAttributeOnElement(el, 'style;' + styleProp, value);\n                    },\n                    getPropertyValue: function(styleProp) {\n                        me.domHandler.enableFrontendDesignProperties();\n                        return node.style[styleProp];\n                    },\n                    removeProperty: function() {\n                        console.log('remove property not yet implemented.');\n                        //TODO implement removeProperty CSS function.\n                    }\n                }\n            });\n\n            Object.defineProperty(el, 'parentNode', {\n                writable: true,\n                value: this\n            });\n    \n            me.domHandler.linkNodeToElement(node, el);\n            me.vdom.addNodeToParent(node, parentNode.globalElementIndex);\n            me.domHandler.restyleNode(node);\n\n            if(me.useWorker) {\n                me.enterExitQueue.push({\n                    cmd: 'ENTER',\n                    node: node,\n                    parentGlobalIndex: parentNode.globalElementIndex,\n                    keepChildren: keepChildren\n                });\n            } else {\n                if(me.renderer.addNode) {\n                    me.renderer.addNode(node);\n                }\n            }\n    \n            if(me.unassignedNodes.indexOf(el) !== -1) {\n                const index = me.unassignedNodes.indexOf(el);\n                me.unassignedNodes.splice(index, 1);\n            }\n    \n            return el;\n        };\n    }\n    \n    private replaceNativeAppendChild() {\n        const origAppendChild = Element.prototype.appendChild;\n        const newAppend = this.getNewAppendChild(origAppendChild);\n    \n        Element.prototype.appendChild = newAppend;\n        Element.prototype.insertBefore = function<T extends Node>(newChild: T, refChild: Node|null) {\n    \n            newAppend.call(this, newChild);\n            \n            return newChild;\n        };\n    }\n\n    private replaceNativePathFunctions() {\n        const me = this;\n        //const origGetPointAtLength = SVGPathElement.prototype.getPointAtLength;\n        const origGetTotalLength = SVGPathElement.prototype.getTotalLength;\n\n        /*SVGPathElement.prototype.getPointAtLength = function() {\n            if(me.isWithinSvg(this)) {\n                const d = this.getAttribute('d');\n                me.origSetAttribute.call(this, 'd', d);\n            }\n            return origGetPointAtLength.apply(this, arguments);\n        };*/\n        SVGPathElement.prototype.getTotalLength = function() {\n            if(me.isWithinSvg(this)) {\n                const d = this.getAttribute('d');\n                me.origSetAttribute.call(this, 'd', d);\n            }\n\n            return origGetTotalLength.apply(this, arguments);\n        };\n    }\n\n    private origSetAttribute;\n\n    private replaceNativeAttribute() {\n        const origSetAttr = Element.prototype.setAttribute;\n        this.origSetAttribute = origSetAttr;\n        const origSetAttrNS = Element.prototype.setAttributeNS;\n        const origGetAttr = Element.prototype.getAttribute;\n        const me = this;\n    \n        Element.prototype.setAttribute = function(this: SsvgElement, name: string, value: any) {\n            if(name === 'easypz' || me.unassignedNodes.indexOf(this) !== -1) {\n                // Update the original SVG\n                origSetAttr.apply(this, arguments);\n                return;\n            }\n            if(name === 'class') {\n                origSetAttr.apply(this, arguments);\n            }\n            if(!me.isWithinSvg(this)) {\n                return origSetAttr.apply(this, arguments);\n            }\n            me.domHandler.queueSetAttributeOnElement(this, name, value);\n        };\n        //TODO: Figure out how to access the element when setting a style property.\n        /*CSSStyleDeclaration.prototype.setProperty = function(name: string, value: any) {\n            safeLog(this, arguments);\n            me.elementHandler.queueSetAttributeOnElement(this, 'style;' + name, value);\n        };*/\n        Element.prototype.setAttributeNS = function(this: SsvgElement, name: string, value: any) {\n            if(name === 'easypz' || me.unassignedNodes.indexOf(this) !== -1) {\n                // Update the original SVG\n                origSetAttrNS.apply(this, arguments);\n                return;\n            }\n            if(name === 'class') {\n                origSetAttrNS.apply(this, arguments);\n            }\n            if(!me.isWithinSvg(this)) {\n                return origSetAttrNS.apply(this, arguments);\n            }\n            me.domHandler.queueSetAttributeOnElement(this, name, value);\n        };\n    \n        Element.prototype.getAttribute = function(this: SsvgElement, name) {\n            if(me.unassignedNodes.indexOf(this) !== -1) {\n                return origGetAttr.apply(this, arguments);\n            } else {\n                try {\n                    return me.domHandler.getAttributeFromSelector(this, name);\n                } catch(e) {\n                    console.error(e);\n                    return origGetAttr.apply(this, arguments);\n                }\n            }\n        };\n    }\n    \n    private propagateMouseEvent(evt: MouseEvent, type?: string) {\n        return this.propagateEvent(new MouseEvent(type? type : evt.type, evt));\n    }\n\n    private duplicateTouchEvent(evt: TouchEvent, type?: string) {\n        const e = document.createEvent('TouchEvent');\n        if(!type) {\n            type = evt.type;\n        }\n        e.initEvent(type, true, false);\n        for(const prop in evt) {\n            if(prop !== 'isTrusted' && evt.hasOwnProperty(prop)) {\n                Object.defineProperty(e, prop, {\n                    writable: true,\n                    value: evt[prop],\n                });\n            }\n        }\n        Object.defineProperty(e, 'type', {\n            writable: true,\n            value: type,\n        });\n        const touches = [];\n        for(let i = 0; i < evt.touches.length; i++) {\n            const touch = evt.touches[i];\n            touches.push({identifier: touch.identifier, pageX: touch.pageX, pageY: touch.pageY,\n                clientX: touch.clientX, clientY: touch.clientY});\n        }\n        Object.defineProperty(e, 'touches', {\n            writable: true,\n            value: touches,\n        });\n        return e;\n    }\n\n    private propagateTouchEvent(evt: TouchEvent, type?: string) {\n        return this.propagateEvent(this.duplicateTouchEvent(evt, type));\n    }\n    \n    private propagateWheelEvent(evt: WheelEvent) {\n        return this.propagateEvent(new WheelEvent(evt.type, evt));\n    }\n    \n    private propagateEvent(new_event: MouseEvent|TouchEvent|WheelEvent): undefined|Element {\n        this.svg.dispatchEvent(new_event); // for EasyPZ\n\n        let triggeredElement: undefined|Element;\n        const {x, y} = SSVG.getMousePosition(new_event);\n\n        for(let interactionSel of this.interactionSelections)\n        {\n            let parentNode = this.domHandler.getVisNode(interactionSel)\n            \n            //let matchingVisParent = selectedNodes[i];\n            let j = 1;\n            \n            if(!parentNode) {\n                //console.error(interactionSel, parentSelector, parentNode);\n            } else {\n                for(let vdomNode of parentNode.children)\n                {\n                    let childNode = this.nodeAtPosition(vdomNode, x - 10, y - 10);\n\n                    if(childNode)\n                    {\n                        const svgEl = this.domHandler.getElementFromNode(vdomNode);\n                        const svgChildEl = this.domHandler.getElementFromNode(childNode);\n\n                        if(svgChildEl) {\n                            Object.defineProperty(new_event, 'target', {\n                                writable: true,\n                                value: svgChildEl\n                            });\n                        }\n\n                        if(svgChildEl) {\n                            triggeredElement = svgChildEl;\n                            svgChildEl.dispatchEvent(new_event);\n                        }\n\n                        if(svgEl !== svgChildEl) {\n                            if(!triggeredElement) {\n                                triggeredElement = svgEl;\n                            }\n                            svgEl.dispatchEvent(new_event);\n                        }\n                    }\n                    j++;\n                }\n            }\n        }\n        return triggeredElement;\n    }\n\n    //TODO move this function somewhere else.\n    private static getMousePosition(event: MouseEvent|TouchEvent) : {x: number, y: number}|null\n    {\n        let pos = {x: 0, y: 0};\n\n        const mouseEvents = ['wheel', 'click', 'mousemove', 'mousedown', 'mouseup', 'dblclick', 'contextmenu',\n            'mouseenter', 'mouseleave', 'mouseout', 'mouseover'];\n        if(mouseEvents.indexOf(event.type) !== -1 && event['clientX']) {\n            pos = {x: event['clientX'], y: event['clientY']};\n        } else if(event.type.substr(0,5) === 'touch') {\n            const touches = event['touches'] ? event['touches'] : [];\n            if(touches.length < 1) return null;\n            pos = {x: touches[0].clientX, y: touches[0].clientY};\n        } else {\n            safeErrorLog('no event pos for event type ', event);\n        }\n\n        return pos;\n    }\n    \n    private nodeAtPosition(visNode: VdomNode, x: number, y: number): false|VdomNode {\n        if (visNode.type === 'circle') {\n            let cx = this.vdom.get(visNode, 'cx') || 0;\n            let cy = this.vdom.get(visNode, 'cy') || 0;\n            if (visNode.transform) {\n                const transform = DrawingUtils.parseTransform(visNode.transform);\n                if (transform.translateX) {\n                    cx += transform.translateX;\n                }\n                if (transform.translateY) {\n                    cy += transform.translateY;\n                }\n            }\n            const distance = Math.sqrt(Math.pow(cx - x, 2) + Math.pow(cy - y, 2));\n            return distance < visNode.r ? visNode : false;\n        } else if(visNode.type === 'rect' || visNode.type === 'image') {\n\n            let elX = this.vdom.get(visNode, 'x') || 0;\n            let elY = this.vdom.get(visNode, 'y') || 0;\n            const width = visNode.width;\n            const height = visNode.height;\n\n            if (visNode.transform) {\n                const transform = DrawingUtils.parseTransform(visNode.transform);\n                if (transform.translateX) {\n                    elX += transform.translateX;\n                }\n                if (transform.translateY) {\n                    elY += transform.translateY;\n                }\n            }\n\n            const centerX = elX + width / 2;\n            const centerY = elY + height / 2;\n\n            const distanceX = Math.abs(centerX - x);\n            const distanceY = Math.abs(centerY - y);\n\n            return distanceX < width / 2 && distanceY < height / 2 ? visNode : false;\n\n        } else if(visNode.type === 'g') {\n\n            const transform = this.domHandler.getTotalTransformation(visNode);\n            if(transform.translateX) {\n                x -= transform.translateX;\n            }\n            if(transform.translateY) {\n                y -= transform.translateY;\n            }\n\n            let matchAny: false|VdomNode = false;\n            for(let i = 0; i < visNode.children.length; i++) {\n                if(this.nodeAtPosition(visNode.children[i], x, y)) {\n                    matchAny = visNode.children[i];\n                }\n            }\n            return matchAny;\n        }\n        return false;\n    }\n    \n    private logDrawn() {\n        this.lastCanvasDrawTimes.push(Date.now());\n        \n        if(this.lastCanvasDrawTimes.length > 20) {\n            this.lastCanvasDrawTimes.shift(); // Remove first item\n        }\n    }\n    \n    private updateFps() {\n        if(this.lastCanvasDrawTimes.length) {\n            const timeForTenDrawsMs = Date.now() - this.lastCanvasDrawTimes[0];\n            const fps = Math.round(this.lastCanvasDrawTimes.length / timeForTenDrawsMs * 1000);\n            this.getFps(fps);\n        }\n    }\n\n    private sendUpdateToWorker(queue) {\n        const msg: CanvasUpdateWorkerMessage = {\n            cmd: 'UPDATE_NODES',\n            data: {\n                enterExit: this.enterExitQueue,\n                update: queue,\n            }\n        };\n\n        //this.syncWorker.postMessage(msg);\n        this.worker.postMessage(msg);\n        this.enterExitQueue = [];\n    }\n}\n\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 200) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 200) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import {VDOM, VdomNode, VdomNodeType} from \"../util/vdom/vdom\";\nimport {VdomManager} from \"../util/vdom/vdom-manager\";\nimport DrawingUtils, {Transformation} from \"../canvasworker/drawingUtils\";\nimport drawingUtils from \"../canvasworker/drawingUtils\";\nimport {CSS_STYLES, RELEVANT_ATTRS, ROUNDED_ATTRS} from \"./attrs\";\n\nexport default class Domhandler {\n    private readonly vdom: VdomManager;\n    nodes: {[globalElementIndex: number]: VdomNode} = {};\n    elements: {[globalElementIndex: number]: SsvgElement} = {};\n    private nodesToRestyle: VdomNode[] = [];\n    private maxGlobalElementIndex = 0;\n    private removedNodeIndices: number[] = [];\n\n    constructor(private svg: SVGElement & SsvgElement, useWorker: boolean, private ignoreDesign: boolean) {\n        const visData: VDOM = {\n            type: 'svg',\n            width: parseInt(this.svg.getAttribute('width')),\n            height: parseInt(this.svg.getAttribute('height')),\n            scale: 1,\n            children: [],\n            globalElementIndex: 0,\n            style: {},\n            css: {},\n        };\n\n        this.vdom = new VdomManager(visData, ignoreDesign);\n        this.linkNodeToElement(visData, this.svg);\n        this.svg.style.display = 'none';\n        this.svg['selector'] = 'svg';\n\n        this.addChildNodesToVisData(this.svg.childNodes, this.vdom.data);\n    }\n\n    hasChanges() {\n        return this.nodesToRestyle.length > 0;\n    }\n\n    enableFrontendDesignProperties() {\n        this.ignoreDesign = false;\n        this.vdom.enableFrontendDesignProperties();\n    }\n    \n    getVDom() {\n        return this.vdom;\n    }\n    \n    queueSetAttributeOnElement(element: SsvgElement, attrName: string,\n                               value: (number|string|((el: HTMLElement) => (number|string)))) {\n        //TODO: merge with updatePropertiesFromQueue from VdomManager?\n        this.vdom.ensureInitialized(attrName, false);\n\n        const node = this.getNodeFromElement(element);\n\n        const parentIndices = this.getNodeFromElement(element.parentNode as SsvgElement)\n            .children.map(n => n.globalElementIndex);\n        const index = parentIndices.indexOf(node.globalElementIndex);\n        const evaluatedValue = typeof value === \"function\" ?\n            value.call(element, element.__data__, index) : value;\n\n        if(!node) {\n            console.error('node not found for ', element);\n            return;\n        }\n        this.vdom.set(node, attrName, evaluatedValue, false);\n\n        if(attrName === \"href\") {\n            safeLog('href not yet supported.');\n            /*\n            try {\n                fetch(location.origin + evaluatedValue, {mode: 'cors'})\n                    .then(resp => resp.blob())\n                    .then(blob => createImageBitmap(blob))\n                    .then(bitmap => {\n                        this.vdom.ensureInitialized('image', false);\n                        this.vdom.set(node, 'image', <string> bitmap, false);\n                    });\n            }\n            catch(e) {console.log(e);}\n            */\n        }\n\n        if(attrName === 'class' || attrName.indexOf('style') !== -1) {\n            // Apply classes immediately so styles can be applied correctly.\n            if(attrName === 'class') {\n                node.className = evaluatedValue;\n                this.nodesToRestyle.push(node);\n            } else {\n                const styleName = attrName.substr(6);\n                if(!node.style) {\n                    console.error('no styles on node ', node);\n                }\n                node.style[styleName] = evaluatedValue;\n            }\n        }\n    }\n\n    queueSetAttributeOnSelection(elements: SsvgElement[], attrName: string, value) {\n        if(!elements.length) return;\n        if(!elements[0]) {\n            //console.error('selection elements not found', elements);\n            return;\n        }\n\n        this.vdom.ensureInitialized(attrName, true, this.maxGlobalElementIndex);\n        const parentIndices = this.getNodeFromElement(elements[0].parentNode as SsvgElement)\n            .children.map(n => n.globalElementIndex);\n\n        for(let i = 0; i < elements.length; i++) {\n            const svgEl = elements[i];\n            const evaluatedValue = typeof value === \"function\"\n                ? value(svgEl.__data__, i) : value;\n\n            this.vdom.set(svgEl, attrName, evaluatedValue);\n\n            //TODO: re-implement.\n            /*if(attrName === \"href\") {\n                try {\n                    fetch(location.origin + evaluatedValue, {mode: 'cors'})\n                    .then(resp => resp.blob())\n                    .then(blob => createImageBitmap(blob))\n                    .then(bitmap => {\n                        //this.checkAttrName(parentSelector, \"image\", useSharedArray, parentNode);\n                        this.setAttrQueue.ensureInitialized(\"image\", false);\n                        this.setAttrQueue[parentSelector][\"image\"][indexOfParent] = bitmap;\n                    });\n                }\n                catch(e) {console.log(e);}\n            }*/\n        }\n\n        if(attrName === 'className' || attrName.indexOf('style') !== -1) {\n            // Apply classes immediately so styles can be applied correctly.\n            for(let i = 0; i < elements.length; i++) {\n                const node = this.getNodeFromElement(elements[i]);\n                const evaluatedValue = typeof value === \"function\" ? value(elements[i].__data__, i) : value;\n\n                if(attrName === 'className') {\n                    node.className = evaluatedValue;\n                    this.nodesToRestyle.push(node);\n                } else {\n                    const styleName = attrName.substr(6);\n                    node.style[styleName] = evaluatedValue;\n                }\n            }\n        }\n    }\n\n    getAttributeFromSelector(element: SsvgElement, name: string) {\n        const node = this.getNodeFromElement(element);\n        \n        if(!node) {\n            console.error('trying to get attribute for unfit selection', node, element, name);\n            throw Error('element not found');\n        }\n        \n        return node[name];\n    }\n    \n    getVisNode(element: SsvgElement): VdomNode|null {\n        if(element === this.svg) {\n            return this.vdom.data;\n        }\n        return this.vdom.getNodeFromIndex(element.globalElementIndex);\n    }\n    \n    getNodeDataFromEl(el: HTMLElement): VdomNode {\n        const type = el.tagName.toLowerCase() as VdomNodeType;\n        const node = {\n            type,\n            className: el.getAttribute('class'),\n            transform: el.getAttribute('transform'),\n            id: el.getAttribute('id'),\n            style: {},\n            css: {},\n            children: [],\n            globalElementIndex: -1,\n            text: !el.childNodes || (el.childNodes.length === 1 && !(el.childNodes[0] as HTMLElement).tagName)\n                ? el.textContent : undefined,\n        };\n\n        for(const attr of RELEVANT_ATTRS[type]) {\n            if(el.hasAttribute(attr)) {\n                const value = el.getAttribute(attr);\n                node[attr] = ROUNDED_ATTRS[attr] ? parseFloat(value) : value;\n            }\n        }\n\n        this.copyStylesFromElement(el, node);\n\n        /*const clean = obj => {\n            const propNames = Object.getOwnPropertyNames(obj);\n            for (let i = 0; i < propNames.length; i++) {\n                const propName = propNames[i];\n                if (obj[propName] === null || obj[propName] === undefined) {\n                    delete obj[propName];\n                }\n            }\n        };\n        \n        clean(node);*/\n        \n        return node;\n    }\n\n    copyStylesFromElement(el: HTMLElement, node: VdomNode) {\n        for(const styleProp of CSS_STYLES) {\n            if(el.style.hasOwnProperty(styleProp)) {\n                const val = el.style[styleProp];\n                if(val && typeof el.style[styleProp] !== 'function') {\n                    const kebabCase = styleProp.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n                    node.style[kebabCase] = el.style[styleProp];\n                }\n            }\n        }\n    }\n\n    applyStyles() {\n        if(!this.nodesToRestyle || !this.nodesToRestyle.length) {\n            return;\n        }\n\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            const sheet = document.styleSheets[i] as any;\n            const rules = (sheet.rules ? sheet.rules : sheet.cssRules) as CSSRuleList;\n        \n            for (let j = 0; j < rules.length; j++) {\n                const rule = rules[j] as any;\n                const selector = rule.selectorText as string;\n                if(!selector) {\n                    continue; // Skip @imports etc.\n                }\n                this.applyRuleToMatchingNodes(selector, rule);\n            }\n        }\n\n        this.nodesToRestyle = [];\n    }\n\n    private applyRuleToMatchingNodes(selectorString: string, rule: {style: {[settingName: string]: string}}): boolean {\n        selectorString = selectorString.trim();\n\n        const selector = selectorString\n            .replace(' >', '>')\n            .replace('> ', '>')\n            .replace('svg>', '');\n        \n        const selectorPartsLooseStrict = selector.split(' ')\n            .map(part => part.split('>'));\n\n        // Find all relevant element IDs.\n        const relevantIds = this.nodesToRestyle.map(n => n.globalElementIndex);\n        for(const nodeToBeStyled of this.nodesToRestyle) {\n            if(nodeToBeStyled) { // I don't know why, but there are null values in there.\n                let parent = this.getNodeParent(nodeToBeStyled);\n                while(parent && relevantIds.indexOf(parent.globalElementIndex) === -1) {\n                    relevantIds.push(parent.globalElementIndex);\n                    parent = this.getNodeParent(parent);\n                }\n            }\n        }\n        const relevantIdMap: {[globalElementIndex: number]: true} = {};\n        for(const index of relevantIds) {\n            relevantIdMap[index] = true;\n        }\n\n        const setStyle = (styleName: string, rule: {style: {[settingName: string]: string}}, child: VdomNode) => {\n            if(rule.style[styleName]) {\n                const longSpecName = `css;${selectorString};${styleName}`;\n                this.vdom.ensureInitialized(longSpecName);\n\n                this.vdom.set(child, longSpecName, rule.style[styleName]);\n            }\n        };\n\n        const checkNode = (currentNode: VdomNode, looseIndex = 0, strictIndex = 0): boolean => {\n            const selPart = selectorPartsLooseStrict[looseIndex][strictIndex];\n\n            for(let childIndex = 0; childIndex < currentNode.children.length; childIndex++) {\n                const child = currentNode.children[childIndex];\n                if(!relevantIdMap[child.globalElementIndex]) {\n                    continue;\n                }\n                let partialMatch = VdomManager.isCssRulePartialMatch(selPart, child, currentNode);\n\n                if(partialMatch) {\n                    if(selectorPartsLooseStrict[looseIndex].length > strictIndex + 1) {\n                        checkNode(child, looseIndex, strictIndex + 1);\n                    } else if(selectorPartsLooseStrict.length > looseIndex + 1) {\n                        checkNode(child, looseIndex + 1, strictIndex);\n                    } else {\n                        if(!child.css[selectorString]) {\n                            for(const styleName of CSS_STYLES) {\n                                setStyle(styleName, rule, child);\n                            }\n                        }\n                    }\n                } else {\n                    if(child['removedClasses']) {\n                        // temporarily add the class, see if it matches this rule, and if so, un-apply its stuff.\n                        for(const removedClass of child['removedClasses']) {\n                            child.className += ' ' + removedClass;\n\n                            let newPartialMatch = VdomManager.isCssRulePartialMatch(selPart, child, currentNode);\n                            if(newPartialMatch) {\n                                this.removeRuleStylesFromNode(selectorString, child);\n                            }\n\n                            child.className = child.className.substr(0, child.className.length -\n                                removedClass.length - 1);\n                        }\n                        setTimeout(() => {\n                            delete child['removedClasses'];\n                        }); // After this frame, reset which classes have been removed.\n                    }\n                    checkNode(child, looseIndex, strictIndex);\n                }\n            }\n            return false;\n        };\n\n        return checkNode(this.vdom.data);\n    }\n\n    removeRuleStylesFromNode(selector: string, child: VdomNode) {\n        if(child.css[selector]) {\n            this.vdom.ensureInitialized(`css;${selector};*`);\n            this.vdom.set(child, `css;${selector};*`, '');\n        }\n    }\n\n    removeNode(element: SsvgElement, node: VdomNode, parentNode: VdomNode) {\n        //console.log('removing', node, 'from', parentNode, [...parentNode.children], childIndex, childIndex2);\n        this.vdom.removeNode(node, parentNode);\n\n        this.nodes[node.globalElementIndex] = null;\n        this.elements[element.globalElementIndex] = null;\n\n        const restyleIndex = this.nodesToRestyle.indexOf(node);\n        if(restyleIndex !== -1) {\n            this.nodesToRestyle.splice(restyleIndex, 1);\n        }\n        this.removedNodeIndices.push(element.globalElementIndex);\n    }\n\n    restyleNode(node: VdomNode) {\n        if(!this.nodes[node.globalElementIndex] || this.nodes[node.globalElementIndex] !== node) {\n            console.error(node);\n            throw new Error('restyling incorrect node');\n        }\n        this.nodesToRestyle.push(node);\n    }\n    \n    private addChildNodesToVisData(childEls: SsvgElement[]|NodeList, parentNode: VdomNode) {\n\n        for(let i  = 0; i < childEls.length; i++) {\n            let el = childEls[i] as SsvgElement;\n\n            try {\n                const node = this.getNodeDataFromEl(el);\n\n                parentNode.children.push(node);\n                this.linkNodeToElement(node, el);\n                this.nodesToRestyle.push(node);\n                \n                if(el.childNodes)\n                {\n                    this.addChildNodesToVisData(el.childNodes, node);\n                }\n                if(node.type === 'tspan')\n                {\n                    //console.log(node, el, el.childNodes, el.textContent);\n                    //console.log(el.childNodes[0])\n                    //console.log(node, style.textAnchor);\n                }\n                if(node.type === 'text')\n                {\n                    //console.log(node, el, el.childNodes, el.textContent);\n                }\n            }\n            catch(e)\n            {\n                //console.log(e);\n                //console.log(el);\n            }\n        }\n    }\n\n    combineElementSelectors(parentSelector: string, elementType: string, childIndex: number) {\n        return parentSelector + ' > ' + elementType + ':nth-child(' + childIndex + ')';\n    }\n\n    getNodeParent(node: VdomNode): VdomNode|null {\n        if(node === this.vdom.data) {\n            return null;\n        }\n        const el = this.getElementFromNode(node);\n        if(!el) {\n            console.error('can not find element for node ', node);\n            return null;\n        }\n        const parentEl = el.parentNode as SsvgElement;\n        return this.getNodeFromElement(parentEl);\n    }\n\n    private getNewElementIndex() {\n        if(this.removedNodeIndices.length) {\n            return this.removedNodeIndices.shift();\n        }\n        this.maxGlobalElementIndex++;\n        return this.maxGlobalElementIndex - 1;\n    }\n\n    linkNodeToElement(node: VdomNode, element: SsvgElement) {\n        const index = this.getNewElementIndex();\n        node.globalElementIndex = index;\n        element.globalElementIndex = index;\n\n        this.nodes[index] = node;\n        this.elements[index] = element;\n\n        this.vdom.addNode(node);\n    }\n\n    getElementFromNode(node: VdomNode): SsvgElement {\n        if(node === this.vdom.data) {\n            return this.svg;\n        }\n        return this.elements[node.globalElementIndex];\n    }\n\n    getNodeFromElement(element: SsvgElement): VdomNode {\n        if(element === this.svg) {\n            return this.vdom.data;\n        }\n        return this.vdom.getNodeFromIndex(element.globalElementIndex);\n    }\n\n    getParentNode(node: VdomNode): VdomNode|null {\n        const element = this.getElementFromNode(node);\n        const parentElement = element.parentNode as SsvgElement;\n        return this.getNodeFromElement(parentElement);\n    }\n\n    getTotalTransformation(node: VdomNode): Transformation {\n        let parent = this.getParentNode(node);\n        const parents = [node];\n\n        while(parent) {\n            parents.push(parent);\n            parent = this.getParentNode(parent);\n        }\n\n        parent = parents.pop();\n        let totalTransform: Transformation = {\n            translateX: 0,\n            translateY: 0,\n            scaleX: 0,\n            scaleY: 0,\n            rotate: 0,\n            translateBeforeScale: false,\n            rotateLast: false,\n        };\n\n        while(parent) {\n            const transform = DrawingUtils.parseTransform(parent.transform);\n            totalTransform = DrawingUtils.addTransforms(totalTransform, transform);\n            parent = parents.pop();\n        }\n\n        return totalTransform;\n    }\n}\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n\nexport type SsvgElement = HTMLElement & {\n    __data__: any,\n    globalElementIndex: number,\n};\n","import SetPropertyQueueData, {AttrValues} from \"./set-property-queue-data\";\nimport {VDOM, VdomNode} from \"./vdom\";\nimport {SsvgElement} from \"../../frontend/domhandler\";\n\nexport class VdomManager {\n    private sharedData: {[attrName: string]: Int32Array} = {};\n    private sharedDataQueue: {[attrName: string]: Int32Array} = {};\n    private sharedDataQueueBuffers: {[attrName: string]: SharedArrayBuffer} = {};\n    private queue: SetPropertyQueueData = {};\n    private useSharedArrayFor = ['cx', 'cy', 'x1', 'x2', 'y1', 'y2', 'x', 'y'];\n    private static IGNOREDESIGN_ATTRIBUTES = ['fill', 'stroke', 'opacity'];\n    private indexToNodeMap: {[index: number]: VdomNode} = {};\n    private static BUFFER_PRECISION_FACTOR = 10;\n    private changed = false;\n\n    constructor(public data: VDOM, private ignoreDesign: boolean) {\n        this.ensureNodesMapped();\n    }\n\n    ensureInitialized(attrName: string, useBuffer = true, numNodes?: number) {\n        if(attrName === 'class') {\n            attrName = 'className';\n        }\n\n        if(!useBuffer || this.useSharedArrayFor.indexOf(attrName) === -1) {\n            if(!this.queue[attrName]) {\n                this.queue[attrName] = {};\n            }\n        } else {\n            const newLength = numNodes < 500 ? 1000 : Math.round(numNodes * 2);\n\n            if(!this.sharedData[attrName]) {\n                let prevData: AttrValues;\n\n                // If values have been previously set without a buffer, transfer them.\n                if(this.queue[attrName] && !(this.queue[attrName] instanceof SharedArrayBuffer)) {\n                    prevData = <AttrValues> this.queue[attrName];\n                }\n\n                const {buffer, values} = this.createBufferTransferValues(newLength, undefined, prevData);\n                this.sharedDataQueue[attrName] = values;\n                this.sharedDataQueueBuffers[attrName] = buffer;\n            } else {\n                const newByteLength = Int32Array.BYTES_PER_ELEMENT * newLength;\n                if(this.sharedData[attrName].byteLength / newByteLength < 0.6) {\n                    // Need to allocate more space\n                    const {buffer, values} = this.createBufferTransferValues(newLength,\n                        this.sharedDataQueue[attrName]);\n                    this.sharedDataQueue[attrName] = values;\n                    this.sharedDataQueueBuffers[attrName] = buffer;\n                }\n            }\n        }\n    }\n\n    createBufferTransferValues(length: number, prevBufferVals?: Int32Array,\n                               prevData?: AttrValues) {\n        let buffer = new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * length);\n        const values = new Int32Array(buffer);\n\n        // If values have been previously set without a buffer, transfer them.\n        if(prevData) {\n            for(const index in prevData) {\n                if(prevData.hasOwnProperty(index)) {\n                    let value = prevData[index];\n                    if(typeof value === 'string') {\n                        value = parseFloat(value);\n                    }\n                    values[index] = value * VdomManager.BUFFER_PRECISION_FACTOR;\n                }\n            }\n        }\n\n        // If values have been previously set in a buffer, transfer them.\n        if(prevBufferVals) {\n            for(let i = 0; i < prevBufferVals.length; i++) {\n                if(prevBufferVals[i]) {\n                    values[i] = prevBufferVals[i];\n                }\n            }\n        }\n\n        return {buffer, values};\n    }\n\n    set(element: VdomNode|SsvgElement, attrName: string, value: string|number, useBuffer = true) {\n        if(attrName === 'class') {\n            attrName = 'className';\n        }\n        if(element.globalElementIndex === undefined) {\n            console.error('No index', element);\n            throw new Error('Element has no index');\n        }\n        const index = element.globalElementIndex;\n        const storage = useBuffer && this.useSharedArrayFor.indexOf(attrName) !== -1 ? 'shared' : 'raw';\n        try {\n            this.changed = true;\n            if(storage === 'shared') {\n                if(typeof value === 'string') {\n                    value = parseFloat(value);\n                }\n                value *= VdomManager.BUFFER_PRECISION_FACTOR;\n                value = Math.round(value); // This helps detect zeros.\n                if(value === 0) {\n                    value = 56938516; // magical constant\n                }\n\n                this.sharedDataQueue[attrName][index] = value;\n            } else {\n                this.queue[attrName][index] = value;\n                if(this.sharedDataQueue[attrName] && this.sharedData[attrName][index]) {\n                    // un-set.\n                    this.sharedDataQueue[attrName][index] = 0;\n                }\n            }\n        }\n        catch(e) {\n            console.error(e);\n            console.log(this.queue, this.sharedData, storage, attrName, element, index);\n        }\n    }\n\n    removePendingChanges(node: VdomNode) {\n        const index = node.globalElementIndex;\n        for(const attrName in this.queue) {\n            if(this.queue.hasOwnProperty(attrName)) {\n                delete this.queue[attrName][index];\n            }\n        }\n        for(const attrName in this.sharedData) {\n            if(this.sharedDataQueue.hasOwnProperty(attrName)) {\n                this.sharedDataQueue[attrName][index] = 0;\n            }\n        }\n    }\n\n    ensureNodesMapped() {\n        const addToMap = (node: VdomNode) => {\n            if(node.globalElementIndex === undefined) {\n                console.error('no element index', node);\n            }\n            this.indexToNodeMap[node.globalElementIndex] = node;\n            for(const child of node.children) {\n                addToMap(child);\n            }\n        };\n        addToMap(this.data);\n    }\n\n    enableFrontendDesignProperties() {\n        this.ignoreDesign = false;\n    }\n\n    addNodeToParent(nodeData: VdomNode, parentNodeIndex: number) {\n        if(nodeData.type !== 'svg') {\n            const parentNode = this.getNodeFromIndex(parentNodeIndex);\n            if(!parentNode) {\n                console.error('could not add node without parent', parentNodeIndex, nodeData,\n                    Object.keys(this.indexToNodeMap));\n                new Error('parent not found');\n                return;\n            }\n            parentNode.children.push(nodeData);\n        }\n    }\n\n    addNode(node: VdomNode) {\n        this.indexToNodeMap[node.globalElementIndex] = node;\n    }\n\n    removeNode(node: VdomNode, parent: VdomNode) {\n        delete this.indexToNodeMap[node.globalElementIndex];\n        const childIndex = parent.children.indexOf(node);\n\n        parent.children.splice(childIndex, 1);\n        this.cachedListSelections = {}; //TODO only remove relevant cache.\n\n        this.removePendingChanges(node);\n    }\n\n    applyStyleToNodeAndChildren(node: VdomNode, styleName: string, styleValue: string,\n                                onNodeUpdated: (node: VdomNode, attrName: string) => void) {\n        node.style[styleName] = styleValue;\n        onNodeUpdated(node, styleName);\n\n        if(node.children) {\n            for(let child of node.children) {\n                this.applyStyleToNodeAndChildren(child, styleName, styleValue, onNodeUpdated);\n            }\n        }\n    }\n\n    applyCssToNodeAndChildren(node: VdomNode, selector: string, styleName: string, value: string,\n                              onNodeUpdated: (node: VdomNode, attrName: string) => void) {\n        if(styleName === '*' && !value) {\n            delete node.css[selector];\n        } else {\n            if(!node.css[selector]) {\n                node.css[selector] = {};\n            }\n            node.css[selector][styleName] = value;\n        }\n        onNodeUpdated(node, styleName);\n\n        if(node.children) {\n            for(let child of node.children) {\n                this.applyCssToNodeAndChildren(child, selector, styleName, value, onNodeUpdated);\n            }\n        }\n    }\n\n    getNodeFromIndex(index: number): VdomNode {\n        return this.indexToNodeMap[index];\n    }\n\n    getNodeById(id: string): VdomNode {\n        const filtered = Object.values(this.indexToNodeMap).filter(node => node.id === id);\n        if(!filtered || filtered.length > 1) {\n            safeLog('multiple nodes with this id!', Object.values(this.indexToNodeMap)\n                .filter(node => node.id).map(node => node.id), id);\n            safeLog(filtered.length, filtered);\n        }\n        return !filtered || filtered.length !== 1 ? null : filtered[0];\n    }\n\n    private static ROUNDED_ATTRS = ['cx', 'cy'];\n\n    get(node: VdomNode, attrs: string|string[]) {\n        if(Array.isArray(attrs)) {\n            return attrs.map(attrName => this.getSingle(node, attrName));\n        } else {\n            return this.getSingle(node, attrs);\n        }\n    }\n\n    private getSingle(node: VdomNode, attrName: string) {\n        if(this.sharedData[attrName] && this.sharedData[attrName][node.globalElementIndex]) {\n            const value = this.sharedData[attrName][node.globalElementIndex];\n            if(value === 56938516) {\n                return 0;\n            }\n            return value / VdomManager.BUFFER_PRECISION_FACTOR;\n        } else {\n            return node[attrName];\n        }\n    }\n\n    hasChanges() {\n        return this.changed;\n    }\n\n    getQueue() {\n        return this.queue;\n    }\n\n    clearQueue() {\n        this.queue = {};\n        this.changed = false;\n    }\n\n    transferBufferQueueData() {\n        for(let attrName in this.sharedDataQueue) {\n            this.queue[attrName] = this.sharedDataQueueBuffers[attrName];\n            this.sharedData[attrName] = this.sharedDataQueue[attrName];\n\n            const length = this.sharedData[attrName].byteLength / Int32Array.BYTES_PER_ELEMENT;\n            const {buffer, values} = this.createBufferTransferValues(length,\n                this.sharedDataQueue[attrName]);\n\n            this.sharedDataQueueBuffers[attrName] = buffer;\n            this.sharedDataQueue[attrName] = values;\n        }\n    }\n\n    updatePropertiesFromQueue(setAttrQueue: SetPropertyQueueData,\n                              onNodeUpdated: (node: VdomNode, attrName: string) => void = () => {}) {\n        for(let attrName in setAttrQueue) {\n            if(!setAttrQueue.hasOwnProperty(attrName)) {\n                continue;\n            }\n            const attrNameStart = attrName.substr(0, 'style;'.length);\n            if(this.ignoreDesign && (attrNameStart === 'style;' ||\n                VdomManager.IGNOREDESIGN_ATTRIBUTES.indexOf(attrName) !== -1)) {\n                continue;\n            }\n\n            let values: AttrValues|Int32Array;\n\n            if('SharedArrayBuffer' in self &&\n                setAttrQueue[attrName] instanceof SharedArrayBuffer) {\n                this.sharedData[attrName] = new Int32Array(<ArrayBuffer> setAttrQueue[attrName]);\n            } else {\n                values = <AttrValues> setAttrQueue[attrName];\n\n                for(let childIndex in values) {\n                    if(!values.hasOwnProperty(childIndex)) {\n                        continue;\n                    }\n                    const index = parseInt(childIndex);\n                    const childNode = this.getNodeFromIndex(index);\n                    if(!childNode) {\n                        console.error('node not found at index', index)\n                        continue;\n                    }\n                    let value: string|number = values[childIndex];\n                    if(attrNameStart === 'style;') {\n                        const styleName = attrName.substr('style;'.length);\n                        this.applyStyleToNodeAndChildren(childNode, styleName, <string> value, onNodeUpdated);\n                    } else if(attrName.substr(0, 4) === 'css;') {\n                        const [selector, styleName] = attrName.substr(4).split(';');\n                        this.applyCssToNodeAndChildren(childNode, selector, styleName, <string> value, onNodeUpdated);\n                    } else {\n                        if(VdomManager.ROUNDED_ATTRS.indexOf(attrName) !== -1) {\n                            if(typeof value === 'string') {\n                                value = parseFloat(value);\n                            }\n                            value = Math.round(value);\n                        }\n\n                        childNode[attrName] = value;\n                        onNodeUpdated(childNode, attrName);\n                    }\n                }\n            }\n        }\n    }\n    \n    private cachedListSelections: {[selector: string]: {[index: number]: VdomNode}} = {};\n    public getVisNodeFromSelector(selector: string): VdomNode|null {\n        const lastSplitPos = selector.lastIndexOf('>');\n        const selectorWithoutLast = selector.substr(0, lastSplitPos);\n        const lastPart = selector.substr(lastSplitPos + 1);\n        const parentSel = selectorWithoutLast ? this.cachedListSelections[selectorWithoutLast] : null;\n        let index = -1;\n        const nthChildPosition = lastPart.indexOf(':nth-child(');\n        if(nthChildPosition !== -1) {\n            index = parseInt(lastPart.substr(nthChildPosition + 11)); // length of ':nth-child('\n            if(parentSel && parentSel[index]) {\n                return parentSel[index];\n            }\n        }\n        \n        const selectedNodes: VdomNode[] = [];\n        this.findMatchingChildren(this.data, selector, 0, selectedNodes);\n        \n        if(selectedNodes && selectedNodes.length === 1) {\n            const el = selectedNodes[0];\n            if(index !== -1) {\n                if(!this.cachedListSelections[selectorWithoutLast]) {\n                    this.cachedListSelections[selectorWithoutLast] = {};\n                }\n                this.cachedListSelections[selectorWithoutLast][index] = el;\n            }\n            return el;\n        }\n        return null;\n    }\n    \n    public getVisNodesFromSelector(visNode: VdomNode, selector: string) {\n        const selectedNodes = [];\n        this.findMatchingChildren(visNode, selector, 0, selectedNodes);\n        return selectedNodes;\n    }\n\n    private findChildrenOfType(visNode: VdomNode, type: string, selectedNodes: VdomNode[]) {\n        const addDirectChildrenIfMatch = (node: VdomNode) => {\n            for(const child of node.children) {\n                if(child.type === type) {\n                    selectedNodes.push(child);\n                }\n                if(node.children.length !== 0) {\n                    addDirectChildrenIfMatch(child);\n                }\n            }\n        };\n        addDirectChildrenIfMatch(visNode);\n    }\n\n    public filterNodesBySelector(parentNode: VdomNode, nodes: VdomNode[], selector: string) {\n        return nodes.filter(node => VdomManager.isCssRulePartialMatch(selector, node, parentNode));\n    }\n    \n    private findMatchingChildren(visNode: VdomNode, selector: string, matchIndex: number, selectedNodes: VdomNode[],\n                                 selectedNodeSelectors: string[] = []) {\n        if(!selector && selector !== '') {\n            console.error(visNode, selector, matchIndex, selectedNodes, selectedNodeSelectors);\n            throw Error('undefined selector');\n        }\n\n        let selParts = selector.split('>').map(s => s.trim());\n        let selPart = selParts[matchIndex];\n        \n        if(matchIndex === 0 && selPart === 'svg') {\n            matchIndex++;\n            selPart = selParts[matchIndex];\n            if(matchIndex === selParts.length) {\n                selectedNodes.push(visNode);\n                selectedNodeSelectors.push(selector);\n                return;\n            }\n        }\n\n        if(selector.match(/^[a-z]+$/)) {\n            return this.findChildrenOfType(visNode, selector, selectedNodes);\n        }\n        \n        for(let i = 0; i < visNode.children.length; i++) {\n            let node = visNode.children[i];\n            let matching = false;\n            \n            if(VdomManager.isCssRulePartialMatch(selPart, node, visNode)) {\n                if(matchIndex === selParts.length - 1) {\n                    selectedNodes.push(node);\n                    selectedNodeSelectors.push(selector);\n                } else {\n                    matching = true;\n                }\n            }\n            \n            if(node.children && (matching || selParts.length < 2) && matchIndex + 1 < selParts.length) {\n                this.findMatchingChildren(node, selector, matchIndex + 1, selectedNodes, selectedNodeSelectors);\n            }\n        }\n    }\n\n    public static isCssRulePartialMatch(cssRuleSelectorPart: string, node: VdomNode, parentNode: VdomNode): boolean {\n        if(cssRuleSelectorPart.substr(0, 5) === ':not(') {\n            const newSelPart = cssRuleSelectorPart.substr(0, cssRuleSelectorPart.length - 1).substr(5);\n            return !VdomManager.isCssRulePartialMatch(newSelPart, node, parentNode);\n        }\n        if(cssRuleSelectorPart[0] === '.') { // Example: .className or .classnameA.classnameB\n            const searchClassNames = cssRuleSelectorPart.split('.');\n            searchClassNames.shift(); // remove empty first string.\n            if(node.className) {\n                let allTrue = true;\n                for(const searchClassName of searchClassNames) {\n                    if(node.className.split(' ').indexOf(searchClassName) === -1) {\n                        allTrue = false;\n                    }\n                }\n                return allTrue;\n            }\n        } else if(cssRuleSelectorPart[0] === '#') { // Example: #id\n            if(cssRuleSelectorPart.substr(1) === node.id) {\n                return true;\n            }\n        } else if(cssRuleSelectorPart.match(/^[a-z]+$/)) { // Example: rect\n            if(cssRuleSelectorPart === node.type) {\n                return true;\n            }\n        } else if(cssRuleSelectorPart.indexOf(':nth-child(') !== -1) {\n            let type = 'any';\n            let indexPart = cssRuleSelectorPart;\n\n            if(cssRuleSelectorPart[0] !== ':') {\n                type = cssRuleSelectorPart.substr(0, cssRuleSelectorPart.indexOf(':'));\n                indexPart = cssRuleSelectorPart.substr(cssRuleSelectorPart.indexOf(':'));\n            }\n\n            const targetIndex = parseInt(indexPart.substr(':nth-child('.length));\n            const index = parentNode.children.indexOf(node);\n\n            return (index === targetIndex - 1 && (type === 'any' || node.type === type));\n        }\n        else if(cssRuleSelectorPart.indexOf('.') !== -1) { // Example: rect.className\n            const cutoff = cssRuleSelectorPart.indexOf('.');\n            const typeName = cssRuleSelectorPart.substr(0, cutoff);\n            const className = cssRuleSelectorPart.substr(cutoff + 1);\n            if(typeName === node.type && node.className && node.className.split(' ').indexOf(className) !== -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    if(safeLogCount < 400) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    if(safeLogCount < 400) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import {VdomNodeType} from \"../util/vdom/vdom\";\n\nexport const CSS_STYLES = ['stroke', 'stroke-opacity', 'stroke-width', 'stroke-linejoin',\n    'fill', 'fill-opacity', 'font', 'opacity', 'font-family', 'font-size'];\n\n/*const RELEVANT_ATTRS2 = ['transform', 'd', 'id', 'r', 'fill', 'cx', 'cy', 'x', 'y', 'x1', 'x2', 'y1',\n    'y2', 'opacity', 'fill-opacity', 'width', 'height', 'stroke', 'stroke-opacity', 'stroke-width',\n    'font-size', 'font', 'font-family', 'text-anchor', 'href'];*/\n\n//'svg'|'g'|'rect'|'circle'|'path'|'title'|'tspan'|'text'|'image'|'clippath'|'line'\n\nexport const RELEVANT_ATTRS: {[type in VdomNodeType]: string[]} = {\n    'svg': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width',\n        'font-size', 'font', 'font-family', 'text-anchor'],\n    'g': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width',\n        'font-size', 'font', 'font-family', 'text-anchor', 'clip-path'],\n    'rect': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width', 'x','y',\n        'width', 'height', 'clip-path'],\n    'circle': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width', 'cx',\n        'cy', 'r', 'clip-path'],\n    'path': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width', 'd',\n        'clip-path'],\n    'title': [],\n    'tspan': ['dx', 'dy'],\n    'text': ['fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity', 'stroke-width',\n        'font-size', 'font', 'font-family', 'text-anchor', 'href', 'x', 'y', 'dx', 'dy'],\n    'image': ['opacity', 'x', 'y', 'width', 'height'],\n    'clippath': ['id', 'fill', 'opacity', 'fill-opacity', 'stroke', 'stroke-opacity',\n        'stroke-width'],\n    'line': ['opacity', 'stroke', 'stroke-opacity', 'stroke-width', 'x1', 'x2', 'y1','y2',\n        'clip-path'],\n};\n\nconst ROUNDED_ATTRS_ARR = ['cx', 'cy', 'r', 'x', 'y', 'x1', 'x2', 'y1', 'y2', 'width', 'height',\n    'stroke-width'];\n\nexport const ROUNDED_ATTRS = {};\nfor(const attr of ROUNDED_ATTRS_ARR) {\n    ROUNDED_ATTRS[attr] = true;\n}\n","import {VdomNode} from \"../util/vdom/vdom\";\nimport {VdomManager} from \"../util/vdom/vdom-manager\";\nimport DrawingUtils from \"./drawingUtils\";\nimport CanvasWorker from \"./canvasworker\";\n\ntype DrawMode = 'start'|'normal'|'end'|'forcesingle';\n\nexport default class Canvasrenderer implements CanvasWorker {\n    \n    private ctx: CanvasRenderingContext2D;\n    private parentValues: {[prop: string]: string|number} = {};\n    \n    constructor(private vdom: VdomManager, private canvas: HTMLCanvasElement,\n                private forceSingle = false, private onDrawn = () => {}) {\n        const ctx = canvas.getContext('2d');\n        if(!ctx) throw new Error('could not create canvas context');\n        \n        this.ctx = ctx;\n        this.ctx.scale(this.vdom.data.scale, this.vdom.data.scale);\n        this.ctx.save();\n        \n        this.draw();\n        \n        setTimeout(() => {\n            console.log(this.forceSingle, this.vdom.data);\n            //this.draw();\n        }, 1000);\n    }\n    \n    private lastFullSecond = 0;\n    private countSinceLastFullSecond = 0;\n    \n    draw() {\n        const ctx = this.ctx;\n\n        ctx.restore();\n        ctx.save();\n        \n        //ctx.fillStyle = '#fff';\n        //ctx.fillRect(0, 0, this.vdom.data.width, this.vdom.data.height);\n        ctx.clearRect(0, 0, this.vdom.data.width, this.vdom.data.height);\n    \n        //this.lastDrawn = null;\n        this.drawLine(null, 'start');\n        this.drawCircle(null, 'start');\n        this.drawRect(null, 'start');\n        this.drawText(null, 'start');\n        this.drawImage(null, 'start');\n\n        this.drawNodeAndChildren(this.vdom.data, this.forceSingle);\n\n        this.drawLine(null, 'end');\n        this.drawCircle(null, 'end');\n        this.drawRect(null, 'end');\n        this.drawText(null, 'end');\n        this.drawImage(null, 'end');\n        \n        this.onDrawn();\n    \n        const fullSecond = Math.round(performance.now() / 1000);\n        if(fullSecond !== this.lastFullSecond) {\n            this.lastFullSecond = fullSecond;\n            //console.log(this.countSinceLastFullSecond);\n            this.countSinceLastFullSecond = 0;\n        }\n        this.countSinceLastFullSecond++;\n    }\n    \n    private drawNodeAndChildren(elData: VdomNode, forceSingle: boolean, drawClip?: Path2D) {\n        if(elData.type === 'clippath' && !drawClip) {\n            return;\n        }\n\n        const ctx = this.ctx;\n        const parentValuesBackup = {...this.parentValues};\n\n        const saveRestoreContext = !drawClip && (elData.children.length || elData.transform);\n        if(saveRestoreContext) {\n            ctx.save();\n        }\n\n        this.applyTransform(elData.transform);\n\n        if(elData.transform || drawClip) {\n            forceSingle = true;\n        }\n\n        if(elData['clip-path']) {\n            if(elData['clip-path'].substr(0, 5) === 'url(#') {\n                const clipPathId = elData['clip-path'].substr(5, elData['clip-path'].length - 6);\n                const clipNode = this.vdom.getNodeById(clipPathId);\n                forceSingle = true;\n\n                if(!clipNode) {\n                    //safeErrorLog('clip node not found', elData['clip-path'], clipPathId, this.vdom.data)\n                } else {\n                    const path = new Path2D();\n                    this.drawNodeAndChildren(clipNode, forceSingle, path);\n                    ctx.clip(path);\n                }\n            } else {\n                safeErrorLog('clip path format not supported:', elData['clip-path']);\n            }\n        }\n\n        if(!elData.style.display || elData.style.display !== 'none') {\n            if(!forceSingle) {\n                this.drawSingleNode(elData, 'normal', drawClip);\n            } else {\n                this.drawSingleNode(elData, 'forcesingle', drawClip);\n            }\n        }\n\n        if(elData.children) {\n            this.parentValues['fill'] = elData.fill || this.parentValues['fill'];\n            this.parentValues['style;fill'] = elData.style.fill || this.parentValues['style;fill'];\n            this.parentValues['stroke'] = elData.stroke || this.parentValues['stroke'];\n            this.parentValues['style;stroke'] = elData.style.stroke || this.parentValues['style;stroke'];\n            this.parentValues['opacity'] = elData.opacity || this.parentValues['opacity'];\n\n            for(let i = 0; i < elData.children.length; i++) {\n                this.drawNodeAndChildren(elData.children[i], forceSingle, drawClip);\n            }\n        }\n\n        if(saveRestoreContext) {\n            //safeLog('restoring ctx', elData);\n            ctx.restore();\n        }\n        this.parentValues = parentValuesBackup;\n    }\n    \n    private drawSingleNode(elData: VdomNode, mode: DrawMode = 'normal', path?: Path2D) {\n        const type: string = elData.type;\n        const drawFct = this['draw' + type.substr(0,1).toUpperCase() + type.substr(1)];\n        if(!drawFct) {\n            return console.error('no draw function yet for ', type);\n        }\n        drawFct.call(this, elData, mode, path);\n    }\n\n    private drawClippath(elData: VdomNode) {\n        //safeLog('clippaths can not be rendered yet.')\n    }\n\n    private drawSvg() {}\n    private drawTitle() {}\n    private drawG() {}\n    \n    private circlesByColor: {[color: string]: VdomNode[]} = {};\n    private drawCircle(elData: VdomNode, mode: DrawMode = 'normal', path?: Path2D) {\n        if(mode === 'normal') {\n            let fill = this.getFillStyle(elData, '#000');\n            const stroke = this.getStrokeStyle(elData);\n            const handle = fill + ';' + stroke;\n            if(!this.circlesByColor[handle]) {\n                this.circlesByColor[handle] = [];\n            }\n            this.circlesByColor[handle].push(elData);\n        }\n        if(mode === 'start') {\n            this.circlesByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            for(let fillAndStrokeColor in this.circlesByColor) {\n                if(this.circlesByColor.hasOwnProperty(fillAndStrokeColor)) {\n                    const split = fillAndStrokeColor.split(';');\n                    const fillColor = split[0];\n                    const strokeColor = split[1];\n\n                    this.ctx.fillStyle = fillColor;\n                    let sampleData = this.circlesByColor[fillAndStrokeColor][0];\n                    const lineWidth = this.getStrokeWidth(sampleData);\n                    this.ctx.lineWidth = lineWidth !== undefined ? lineWidth : 1;\n                    this.ctx.strokeStyle = strokeColor;\n\n                    this.ctx.beginPath();\n                    for(let elData of this.circlesByColor[fillAndStrokeColor]) {\n                        // Round values so that paths are connected correctly and there are no rendering glitches\n                        const cx = Math.round(this.vdom.get(elData, 'cx')) || 0;\n                        const cy = Math.round(this.vdom.get(elData, 'cy')) || 0;\n                        const r = Math.round(this.vdom.get(elData, 'r'));\n                        this.ctx.save();\n                        this.applyTransform(elData.transform);\n                        this.ctx.moveTo(cx + r, cy);\n                        this.ctx.arc(cx, cy, r, 0, 2 * Math.PI);\n                        this.ctx.restore();\n                        //this.ctx.restore();\n                    }\n\n                    if(fillColor !== 'none'){\n                        this.ctx.fill();\n                    }\n\n                    if(strokeColor && strokeColor !== 'none') {\n                        this.ctx.stroke();\n                    }\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            let fill = this.getFillStyle(elData, '#000');\n            const strokeStyle = this.getStrokeStyle(elData);\n\n            const cx = this.vdom.get(elData, 'cx') || 0;\n            const cy = this.vdom.get(elData, 'cy') || 0;\n\n            this.ctx.beginPath();\n            this.ctx.fillStyle = fill;\n            this.ctx.strokeStyle = strokeStyle;\n            this.ctx.lineWidth = this.getStrokeWidth(elData);\n            this.ctx.moveTo(cx + elData.r, cy);\n            const context = path ? path : this.ctx;\n            context.arc(cx, cy, elData.r, 0, 2 * Math.PI);\n            if(fill !== 'none' && !path){\n                this.ctx.fill();\n            }\n\n            if(strokeStyle && strokeStyle !== 'none' && !path) {\n                this.ctx.stroke();\n            }\n        }\n    }\n\n    nodeUpdated(node: VdomNode, attr: string) {\n        if(attr === '*' || attr.includes('fill') || attr.includes('opacity')) {\n            delete node['fill-cache'];\n        }\n        if(attr === '*' || attr.includes('stroke') || attr.includes('opacity')) {\n            delete node['stroke-cache'];\n            delete node['strokewidth-cache'];\n        }\n    }\n\n    private getFillStyle(node: VdomNode, defaultColor = 'none'): string {\n        if('fill-cache' in node) {\n            return node['fill-cache'];\n        }\n        let fill = this.getAttributeStyleCss(node, 'fill');\n        let opacity = this.getAttributeStyleCss(node, 'opacity') || 1;\n        const fillOpacity = this.getAttributeStyleCss(node, 'fill-opacity') || 1;\n        opacity *= fillOpacity;\n\n        let defaultCol = '';\n        if(this.parentValues['fill']) {\n            defaultCol = this.parentValues['fill'] as string;\n        }\n        if(this.parentValues['style;fill']) {\n            defaultCol = this.parentValues['style;fill'] as string;\n        }\n        if(!this.parentValues['fill'] && !this.parentValues['style;fill']) {\n            defaultCol = defaultColor;\n        }\n\n        fill = DrawingUtils.colorToRgba(fill, opacity, defaultCol);\n        node['fill-cache'] = fill;\n        return fill;\n    }\n\n    private getAttributeStyleCss(node: VdomNode, style: string) {\n        if(node.style[style]) {\n            return node.style[style];\n        } else {\n            if(this.parentValues[`style;${style}`]) {\n                return this.parentValues[`style;${style}`];\n            }\n            let value = node[style];\n\n            let highestSpec = -1;\n            for(const selector in node.css) {\n                if(node.css[selector][style]) {\n                    const specificity = DrawingUtils.getCssRuleSpecificityNumber(selector);\n                    if(specificity > highestSpec) {\n                        value = node.css[selector][style];\n                        highestSpec = specificity;\n                    }\n                }\n            }\n            return value;\n        }\n    }\n\n    private getStrokeStyle(node: VdomNode, defaultColor = 'none'): string {\n        if('stroke-cache' in node) {\n            return node['stroke-cache'];\n        }\n        const stroke = this.getAttributeStyleCss(node, 'stroke');\n        let opacity = this.getAttributeStyleCss(node, 'opacity') || 1;\n        const fillOpacity = this.getAttributeStyleCss(node, 'stroke-opacity') || 1;\n        opacity *= fillOpacity;\n\n        let defaultCol = '';\n        if(this.parentValues['stroke']) {\n            defaultCol = this.parentValues['stroke'] as string;\n        } else {\n            defaultCol = defaultColor;\n        }\n\n        if(stroke !== undefined) {\n            node['stroke-cache'] = DrawingUtils.colorToRgba(stroke, opacity);\n        } else {\n            node['stroke-cache'] = defaultCol;\n        }\n        return node['stroke-cache'];\n    }\n\n    private getStrokeWidth(node: VdomNode) {\n        if('strokewidth-cache' in node) {\n            return node['strokewidth-cache'];\n        }\n        const width = this.getAttributeStyleCss(node, 'stroke-width');\n        node['strokewidth-cache'] = width === undefined ? undefined : parseFloat(width);\n\n        return node['strokewidth-cache'];\n    }\n\n    private rectsByColor = {};\n\n    private drawRect(elData: VdomNode, mode: DrawMode = 'normal', path?: Path2D) {\n        if(mode === 'normal') {\n            let fill = this.getFillStyle(elData, '#000');\n            const stroke = this.getStrokeStyle(elData);\n            const handle = fill + ';' + stroke;\n            if(!this.rectsByColor[handle]) {\n                this.rectsByColor[handle] = [];\n            }\n            this.rectsByColor[handle].push(elData);\n        }\n        if(mode === 'start') {\n            this.rectsByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            for(let fillAndStrokeColor in this.rectsByColor) {\n                if(this.rectsByColor.hasOwnProperty(fillAndStrokeColor)) {\n                    const split = fillAndStrokeColor.split(';');\n                    const fillColor = split[0];\n                    const strokeColor = split[1];\n                    this.ctx.fillStyle = fillColor;\n\n                    let sampleData = this.rectsByColor[fillAndStrokeColor][0];\n                    const lineWidth = this.getStrokeWidth(sampleData);\n                    this.ctx.lineWidth = lineWidth !== undefined ? lineWidth : 1;\n                    this.ctx.strokeStyle = strokeColor;\n\n                    this.ctx.beginPath();\n                    for(let elData of this.rectsByColor[fillAndStrokeColor]) {\n                        // Round values so that paths are connected correctly and there are no rendering glitches\n                        const x = Math.round(this.vdom.get(elData, 'x')) || 0;\n                        const y = Math.round(this.vdom.get(elData, 'y')) || 0;\n                        this.ctx.save();\n                        this.applyTransform(elData.transform);\n                        this.ctx.moveTo(x, y);\n                        this.ctx.rect(x, y, elData.width, elData.height);\n                        this.ctx.restore();\n                        //this.ctx.restore();\n                    }\n                    if(fillColor !== 'none'){\n                        this.ctx.fill();\n                    }\n\n                    if(strokeColor && strokeColor !== 'none') {\n                        this.ctx.stroke();\n                    }\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            let fill = this.getFillStyle(elData, '#000');\n            const stroke = this.getStrokeStyle(elData);\n\n            const x = this.vdom.get(elData, 'x') || 0;\n            const y = this.vdom.get(elData, 'y') || 0;\n\n            if(fill && fill !== 'none' && !path) {\n                this.ctx.fillStyle = fill;\n                this.ctx.fillRect(x, y, elData.width, elData.height);\n            }\n            if(path) {\n                path.rect(x, y, elData.width, elData.height);\n            }\n\n            if(stroke !== 'none' && !path) {\n                this.ctx.strokeStyle = stroke;\n                this.ctx.beginPath();\n                this.ctx.rect(x, y, elData.width, elData.height);\n                this.ctx.stroke();\n            }\n        }\n    }\n\n    private drawTexts: VdomNode[] = [];\n\n    private drawText(node: VdomNode, mode: DrawMode = 'normal', isClip = false) {\n        const drawSingle = (elData: VdomNode) => {\n            if(elData.text === '') {\n                return;\n            }\n            let fontFamily = this.getAttributeStyleCss(elData, 'font-family') || 'Times New Roman';\n\n            let fontSize = '16px';\n            const customSize = this.getAttributeStyleCss(elData, 'font-size');\n            if(customSize) {\n                fontSize = DrawingUtils.convertSizeToPx(customSize) + 'px';\n            }\n            let font = this.getAttributeStyleCss(elData, 'font');\n            if(!font) {\n                font = fontSize + ' ' + fontFamily;\n            }\n            let align = this.getAttributeStyleCss(elData, 'text-anchor');\n            if(align) {\n                if(align === 'middle') {\n                    align = 'center';\n                }\n                this.ctx.textAlign = align;\n            }\n            this.ctx.font = font;\n            this.ctx.fillStyle = this.getFillStyle(elData, '#000');\n\n            let x = this.vdom.get(elData, 'x') || 0;\n            let y = this.vdom.get(elData, 'y') || 0;\n            let dx = DrawingUtils.convertSizeToPx(elData.dx, false) || 0;\n            let dy = DrawingUtils.convertSizeToPx(elData.dy, false) || 0;\n            this.ctx.fillText(elData.text, x + dx, y + dy);\n        };\n        if(mode === 'start') {\n            this.drawTexts = [];\n            return;\n        }\n        if(mode === 'normal') {\n            this.drawTexts.push(node);\n            return;\n        }\n        if(mode === 'forcesingle') {\n            return drawSingle(node);\n        }\n        if(mode === 'end') {\n            for(const currentNode of this.drawTexts) {\n                drawSingle(currentNode);\n            }\n            return;\n        }\n    }\n\n    private drawImages: VdomNode[] = [];\n\n    private drawImage(node: VdomNode, mode: DrawMode = 'normal') {\n        const drawSingle = (elData: VdomNode) => {\n            if(elData.href === '') {\n                return;\n            }\n            let fill = elData['fill'] ? elData['fill'] : elData.style['fill'];\n            if(!fill) fill = '#000';\n            this.ctx.fillStyle = fill;\n            let x = this.vdom.get(elData, 'x') || 0;\n            let y = this.vdom.get(elData, 'y') || 0;\n            let width = elData.width || 0;\n            let height = elData.height || 0;\n            if(elData.image) {\n                try {\n                    this.ctx.drawImage(elData.image, x, y, width, height);\n                } catch(e) {\n                    console.log(e);\n                }\n            }\n        };\n        if(mode === 'start') {\n            this.drawImages = [];\n            return;\n        }\n        if(mode === 'normal') {\n            this.drawImages.push(node);\n            return;\n        }\n        if(mode === 'forcesingle') {\n            return drawSingle(node);\n        }\n        if(mode === 'end') {\n            for(const currentNode of this.drawImages) {\n                drawSingle(currentNode);\n            }\n            return;\n        }\n    }\n\n    private drawPath(elData: VdomNode, mode: DrawMode = 'normal', path?: Path2D) {\n        if(mode !== 'normal' && mode !== 'forcesingle') return;\n\n        const fill = this.getFillStyle(elData, '#000');\n        const stroke = this.getStrokeStyle(elData);\n        const strokeWidth = this.getStrokeWidth(elData);\n\n        let p = new Path2D(elData.d);\n        this.ctx.fillStyle = fill;\n        if(stroke !== undefined && stroke !== 'none') {\n            if(strokeWidth !== undefined) {\n                this.ctx.lineWidth = strokeWidth;\n            }\n            this.ctx.strokeStyle = stroke;\n\n            const lineJoin = this.getAttributeStyleCss(elData, 'stroke-linejoin')\n\n            if(lineJoin) {\n                if(lineJoin === 'bevel' || lineJoin === 'round' || lineJoin === 'miter') {\n                    this.ctx.lineJoin = lineJoin;\n                } else {\n                    console.error('unknown line join value:', lineJoin)\n                }\n            }\n            if(!path) {\n                this.ctx.stroke(p);\n            }\n        }\n\n        if(fill && fill !== 'none' && !path) {\n            this.ctx.fill(p);\n        }\n        if(path) {\n            path.addPath(p);\n        }\n    }\n    \n    private drawTspan(elData: VdomNode, mode: DrawMode = 'normal') {\n        if(mode !== 'normal' && mode !== 'forcesingle') return;\n        \n        this.ctx.font = \"10px Arial\";\n        this.ctx.fillStyle = \"#000000\";\n        const textAlign = <CanvasTextAlign> (elData.style.textAnchor === \"middle\" ? \"center\" : elData.style.textAnchor);\n        this.ctx.textAlign = textAlign;\n        this.ctx.fillText(elData.text, this.vdom.get(elData, 'x'), this.vdom.get(elData, 'y'));\n    }\n\n    private drawTextpath(elData: VdomNode) {\n        console.warn('no draw function yet for textpath');\n    }\n\n    private linesByColor: {[color: string]: VdomNode[]} = {};\n    private drawLine(elData, mode: DrawMode = 'normal') {\n        if(this.vdom.data.scale > 1) {\n            //mode = 'forcesingle';\n            // In my tests, drawing a long connected path is very slow for high DPI devices.\n        }\n        if(mode === 'normal') {\n            const stroke = this.getStrokeStyle(elData);\n            const width = this.getStrokeWidth(elData);\n            if(stroke === 'none' || width === 0) {\n                return;\n            }\n            const selector = `${stroke};${width}`;\n            if(!this.linesByColor[selector]) {\n                this.linesByColor[selector] = [];\n            }\n            this.linesByColor[selector].push(elData);\n        }\n        if(mode === 'start') {\n            this.linesByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            //safeLog(Object.keys(this.linesByColor), this.linesByColor);\n            for(let selector in this.linesByColor) {\n                if(this.linesByColor.hasOwnProperty(selector)) {\n                    const split = selector.split(';');\n                    const strokeColor = split[0];\n                    const width = split[1];\n\n                    this.ctx.strokeStyle = strokeColor;\n                    this.ctx.lineWidth = parseFloat(width);\n\n                    this.ctx.beginPath();\n                    for(let elData of this.linesByColor[selector]) {\n                        if(elData.transform) {\n                            this.ctx.save();\n                            this.applyTransform(elData.transform);\n                        }\n\n                        const [x1, x2, y1, y2] = this.vdom.get(elData, ['x1', 'x2', 'y1', 'y2'])\n                            .map(val => Math.round(val) || 0);\n\n                        /*const dist = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n                        if(dist > 50) {\n                            safeLog(elData, dist, x1, x2, y1, y2);\n                        }*/\n\n                        this.ctx.moveTo(x1, y1);\n                        this.ctx.lineTo(x2, y2);\n\n                        if(elData.transform) {\n                            //this.ctx.restore();\n                            this.ctx.restore();\n                        }\n                    }\n\n                    this.ctx.stroke();\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            this.ctx.beginPath();\n\n            const [x1, x2, y1, y2] = this.vdom.get(elData, ['x1', 'x2', 'y1', 'y2'])\n                .map(val => Math.round(val) || 0);\n\n            this.ctx.moveTo(x1, y1);\n            this.ctx.lineTo(x2, y2);\n\n            this.ctx.strokeStyle = this.getStrokeStyle(elData);\n            this.ctx.lineWidth = this.getStrokeWidth(elData);\n            //safeLog(stroke, this.ctx.strokeStyle);\n            this.ctx.stroke();\n        }\n    }\n\n    private drawDefs(node: VdomNode) {\n        //TODO figure out.\n    }\n\n    private drawMarker(node: VdomNode) {\n        //TODO figure out.\n    }\n    \n    private applyTransform(transformString: string) {\n        const transform = transformString ? DrawingUtils.parseTransform(transformString) : null;\n        if(transform) {\n            if(!transform.rotateLast) {\n                this.ctx.rotate(transform.rotate * Math.PI / 180);\n            }\n\n            const x = transform.translateBeforeScale ? transform.translateX : transform.translateX * transform.scaleX;\n            const y = transform.translateBeforeScale ? transform.translateY : transform.translateY * transform.scaleY;\n            this.ctx.transform(transform.scaleX, 0, 0, transform.scaleY, x, y);\n\n            if(transform.rotateLast) {\n                this.ctx.rotate(transform.rotate * Math.PI / 180);\n            }\n\n            return true;\n        }\n        return false;\n    }\n}\n\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 300) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import '../worker-loader';\nimport CanvasWorkerImporter = require('worker-loader?inline=true!./canvasworker');\n\nexport default CanvasWorkerImporter;","module.exports = function() {\n  return require(\"!!/home/micha/Web/ssvg/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(t){var e={};function s(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&\\\"object\\\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:t}),2&e&&\\\"string\\\"!=typeof t)for(var i in t)s.d(r,i,function(e){return t[e]}.bind(null,i));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,\\\"a\\\",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p=\\\"\\\",s(s.s=0)}([function(t,e,s){\\\"use strict\\\";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0});const i=s(1),a=r(s(2));let n;const o=self;let l;o.onmessage=function(t){const e=t.data;if(e&&e.cmd)switch(e.cmd){case\\\"INIT\\\":l=new i.VdomManager(e.data.visData,!1);const t=!!e.data.safeMode;n=new a.default(l,e.data.canvas,t,()=>{o.postMessage({msg:\\\"DRAWN\\\"})});break;case\\\"UPDATE_NODES\\\":const s=e;for(let t of s.data.enterExit){if(\\\"EXIT\\\"===t.cmd){const e=l.getNodeFromIndex(t.childGlobalIndex),s=l.getNodeFromIndex(t.parentGlobalIndex);l.removeNode(e,s)}if(\\\"ENTER\\\"===t.cmd){const e=t.node;t.keepChildren||(e.children=[]),l.addNode(e),l.addNodeToParent(e,t.parentGlobalIndex),n.addNode&&n.addNode(e)}}n.updatePropertiesFromQueue?n.updatePropertiesFromQueue(s.data.update):l.updatePropertiesFromQueue(s.data.update,(t,e)=>{n.nodeUpdated(t,e)}),n.draw();break;default:console.error(\\\"did not find command \\\",e.cmd)}}},function(t,e,s){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0});class r{constructor(t,e){this.data=t,this.ignoreDesign=e,this.sharedData={},this.sharedDataQueue={},this.sharedDataQueueBuffers={},this.queue={},this.useSharedArrayFor=[\\\"cx\\\",\\\"cy\\\",\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\",\\\"x\\\",\\\"y\\\"],this.indexToNodeMap={},this.changed=!1,this.cachedListSelections={},this.ensureNodesMapped()}ensureInitialized(t,e=!0,s){if(\\\"class\\\"===t&&(t=\\\"className\\\"),e&&-1!==this.useSharedArrayFor.indexOf(t)){const e=s<500?1e3:Math.round(2*s);if(this.sharedData[t]){const s=Int32Array.BYTES_PER_ELEMENT*e;if(this.sharedData[t].byteLength/s<.6){const{buffer:s,values:r}=this.createBufferTransferValues(e,this.sharedDataQueue[t]);this.sharedDataQueue[t]=r,this.sharedDataQueueBuffers[t]=s}}else{let s;!this.queue[t]||this.queue[t]instanceof SharedArrayBuffer||(s=this.queue[t]);const{buffer:r,values:i}=this.createBufferTransferValues(e,void 0,s);this.sharedDataQueue[t]=i,this.sharedDataQueueBuffers[t]=r}}else this.queue[t]||(this.queue[t]={})}createBufferTransferValues(t,e,s){let i=new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*t);const a=new Int32Array(i);if(s)for(const t in s)if(s.hasOwnProperty(t)){let e=s[t];\\\"string\\\"==typeof e&&(e=parseFloat(e)),a[t]=e*r.BUFFER_PRECISION_FACTOR}if(e)for(let t=0;t<e.length;t++)e[t]&&(a[t]=e[t]);return{buffer:i,values:a}}set(t,e,s,i=!0){if(\\\"class\\\"===e&&(e=\\\"className\\\"),void 0===t.globalElementIndex)throw console.error(\\\"No index\\\",t),new Error(\\\"Element has no index\\\");const a=t.globalElementIndex,n=i&&-1!==this.useSharedArrayFor.indexOf(e)?\\\"shared\\\":\\\"raw\\\";try{this.changed=!0,\\\"shared\\\"===n?(\\\"string\\\"==typeof s&&(s=parseFloat(s)),s*=r.BUFFER_PRECISION_FACTOR,0===(s=Math.round(s))&&(s=56938516),this.sharedDataQueue[e][a]=s):(this.queue[e][a]=s,this.sharedDataQueue[e]&&this.sharedData[e][a]&&(this.sharedDataQueue[e][a]=0))}catch(s){console.error(s),console.log(this.queue,this.sharedData,n,e,t,a)}}removePendingChanges(t){const e=t.globalElementIndex;for(const t in this.queue)this.queue.hasOwnProperty(t)&&delete this.queue[t][e];for(const t in this.sharedData)this.sharedDataQueue.hasOwnProperty(t)&&(this.sharedDataQueue[t][e]=0)}ensureNodesMapped(){const t=e=>{void 0===e.globalElementIndex&&console.error(\\\"no element index\\\",e),this.indexToNodeMap[e.globalElementIndex]=e;for(const s of e.children)t(s)};t(this.data)}enableFrontendDesignProperties(){this.ignoreDesign=!1}addNodeToParent(t,e){if(\\\"svg\\\"!==t.type){const s=this.getNodeFromIndex(e);if(!s)return console.error(\\\"could not add node without parent\\\",e,t,Object.keys(this.indexToNodeMap)),void new Error(\\\"parent not found\\\");s.children.push(t)}}addNode(t){this.indexToNodeMap[t.globalElementIndex]=t}removeNode(t,e){delete this.indexToNodeMap[t.globalElementIndex];const s=e.children.indexOf(t);e.children.splice(s,1),this.cachedListSelections={},this.removePendingChanges(t)}applyStyleToNodeAndChildren(t,e,s,r){if(t.style[e]=s,r(t,e),t.children)for(let i of t.children)this.applyStyleToNodeAndChildren(i,e,s,r)}applyCssToNodeAndChildren(t,e,s,r,i){if(\\\"*\\\"!==s||r?(t.css[e]||(t.css[e]={}),t.css[e][s]=r):delete t.css[e],i(t,s),t.children)for(let a of t.children)this.applyCssToNodeAndChildren(a,e,s,r,i)}getNodeFromIndex(t){return this.indexToNodeMap[t]}getNodeById(t){const e=Object.values(this.indexToNodeMap).filter(e=>e.id===t);return(!e||e.length>1)&&(a(\\\"multiple nodes with this id!\\\",Object.values(this.indexToNodeMap).filter(t=>t.id).map(t=>t.id),t),a(e.length,e)),e&&1===e.length?e[0]:null}get(t,e){return Array.isArray(e)?e.map(e=>this.getSingle(t,e)):this.getSingle(t,e)}getSingle(t,e){if(this.sharedData[e]&&this.sharedData[e][t.globalElementIndex]){const s=this.sharedData[e][t.globalElementIndex];return 56938516===s?0:s/r.BUFFER_PRECISION_FACTOR}return t[e]}hasChanges(){return this.changed}getQueue(){return this.queue}clearQueue(){this.queue={},this.changed=!1}transferBufferQueueData(){for(let t in this.sharedDataQueue){this.queue[t]=this.sharedDataQueueBuffers[t],this.sharedData[t]=this.sharedDataQueue[t];const e=this.sharedData[t].byteLength/Int32Array.BYTES_PER_ELEMENT,{buffer:s,values:r}=this.createBufferTransferValues(e,this.sharedDataQueue[t]);this.sharedDataQueueBuffers[t]=s,this.sharedDataQueue[t]=r}}updatePropertiesFromQueue(t,e=(()=>{})){for(let s in t){if(!t.hasOwnProperty(s))continue;const i=s.substr(0,\\\"style;\\\".length);if(this.ignoreDesign&&(\\\"style;\\\"===i||-1!==r.IGNOREDESIGN_ATTRIBUTES.indexOf(s)))continue;let a;if(\\\"SharedArrayBuffer\\\"in self&&t[s]instanceof SharedArrayBuffer)this.sharedData[s]=new Int32Array(t[s]);else{a=t[s];for(let t in a){if(!a.hasOwnProperty(t))continue;const n=parseInt(t),o=this.getNodeFromIndex(n);if(!o){console.error(\\\"node not found at index\\\",n);continue}let l=a[t];if(\\\"style;\\\"===i){const t=s.substr(\\\"style;\\\".length);this.applyStyleToNodeAndChildren(o,t,l,e)}else if(\\\"css;\\\"===s.substr(0,4)){const[t,r]=s.substr(4).split(\\\";\\\");this.applyCssToNodeAndChildren(o,t,r,l,e)}else-1!==r.ROUNDED_ATTRS.indexOf(s)&&(\\\"string\\\"==typeof l&&(l=parseFloat(l)),l=Math.round(l)),o[s]=l,e(o,s)}}}}getVisNodeFromSelector(t){const e=t.lastIndexOf(\\\">\\\"),s=t.substr(0,e),r=t.substr(e+1),i=s?this.cachedListSelections[s]:null;let a=-1;const n=r.indexOf(\\\":nth-child(\\\");if(-1!==n&&(a=parseInt(r.substr(n+11)),i&&i[a]))return i[a];const o=[];if(this.findMatchingChildren(this.data,t,0,o),o&&1===o.length){const t=o[0];return-1!==a&&(this.cachedListSelections[s]||(this.cachedListSelections[s]={}),this.cachedListSelections[s][a]=t),t}return null}getVisNodesFromSelector(t,e){const s=[];return this.findMatchingChildren(t,e,0,s),s}findChildrenOfType(t,e,s){const r=t=>{for(const i of t.children)i.type===e&&s.push(i),0!==t.children.length&&r(i)};r(t)}filterNodesBySelector(t,e,s){return e.filter(e=>r.isCssRulePartialMatch(s,e,t))}findMatchingChildren(t,e,s,i,a=[]){if(!e&&\\\"\\\"!==e)throw console.error(t,e,s,i,a),Error(\\\"undefined selector\\\");let n=e.split(\\\">\\\").map(t=>t.trim()),o=n[s];if(0===s&&\\\"svg\\\"===o&&(o=n[++s],s===n.length))return i.push(t),void a.push(e);if(e.match(/^[a-z]+$/))return this.findChildrenOfType(t,e,i);for(let l=0;l<t.children.length;l++){let h=t.children[l],c=!1;r.isCssRulePartialMatch(o,h,t)&&(s===n.length-1?(i.push(h),a.push(e)):c=!0),h.children&&(c||n.length<2)&&s+1<n.length&&this.findMatchingChildren(h,e,s+1,i,a)}}static isCssRulePartialMatch(t,e,s){if(\\\":not(\\\"===t.substr(0,5)){const i=t.substr(0,t.length-1).substr(5);return!r.isCssRulePartialMatch(i,e,s)}if(\\\".\\\"===t[0]){const s=t.split(\\\".\\\");if(s.shift(),e.className){let t=!0;for(const r of s)-1===e.className.split(\\\" \\\").indexOf(r)&&(t=!1);return t}}else if(\\\"#\\\"===t[0]){if(t.substr(1)===e.id)return!0}else if(t.match(/^[a-z]+$/)){if(t===e.type)return!0}else{if(-1!==t.indexOf(\\\":nth-child(\\\")){let r=\\\"any\\\",i=t;\\\":\\\"!==t[0]&&(r=t.substr(0,t.indexOf(\\\":\\\")),i=t.substr(t.indexOf(\\\":\\\")));const a=parseInt(i.substr(\\\":nth-child(\\\".length));return s.children.indexOf(e)===a-1&&(\\\"any\\\"===r||e.type===r)}if(-1!==t.indexOf(\\\".\\\")){const s=t.indexOf(\\\".\\\"),r=t.substr(0,s),i=t.substr(s+1);if(r===e.type&&e.className&&-1!==e.className.split(\\\" \\\").indexOf(i))return!0}}return!1}}r.IGNOREDESIGN_ATTRIBUTES=[\\\"fill\\\",\\\"stroke\\\",\\\"opacity\\\"],r.BUFFER_PRECISION_FACTOR=10,r.ROUNDED_ATTRS=[\\\"cx\\\",\\\"cy\\\"],e.VdomManager=r;let i=0;function a(...t){i<400&&(i++,console.log(...t))}},function(t,e,s){\\\"use strict\\\";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0});const i=r(s(3));e.default=class{constructor(t,e,s=!1,r=(()=>{})){this.vdom=t,this.canvas=e,this.forceSingle=s,this.onDrawn=r,this.parentValues={},this.lastFullSecond=0,this.countSinceLastFullSecond=0,this.circlesByColor={},this.rectsByColor={},this.drawTexts=[],this.drawImages=[],this.linesByColor={};const i=e.getContext(\\\"2d\\\");if(!i)throw new Error(\\\"could not create canvas context\\\");this.ctx=i,this.ctx.scale(this.vdom.data.scale,this.vdom.data.scale),this.ctx.save(),this.draw(),setTimeout(()=>{console.log(this.forceSingle,this.vdom.data)},1e3)}draw(){const t=this.ctx;t.restore(),t.save(),t.clearRect(0,0,this.vdom.data.width,this.vdom.data.height),this.drawLine(null,\\\"start\\\"),this.drawCircle(null,\\\"start\\\"),this.drawRect(null,\\\"start\\\"),this.drawText(null,\\\"start\\\"),this.drawImage(null,\\\"start\\\"),this.drawNodeAndChildren(this.vdom.data,this.forceSingle),this.drawLine(null,\\\"end\\\"),this.drawCircle(null,\\\"end\\\"),this.drawRect(null,\\\"end\\\"),this.drawText(null,\\\"end\\\"),this.drawImage(null,\\\"end\\\"),this.onDrawn();const e=Math.round(performance.now()/1e3);e!==this.lastFullSecond&&(this.lastFullSecond=e,this.countSinceLastFullSecond=0),this.countSinceLastFullSecond++}drawNodeAndChildren(t,e,s){if(\\\"clippath\\\"===t.type&&!s)return;const r=this.ctx,i=Object.assign({},this.parentValues),n=!s&&(t.children.length||t.transform);if(n&&r.save(),this.applyTransform(t.transform),(t.transform||s)&&(e=!0),t[\\\"clip-path\\\"])if(\\\"url(#\\\"===t[\\\"clip-path\\\"].substr(0,5)){const s=t[\\\"clip-path\\\"].substr(5,t[\\\"clip-path\\\"].length-6),i=this.vdom.getNodeById(s);if(e=!0,i){const t=new Path2D;this.drawNodeAndChildren(i,e,t),r.clip(t)}}else!function(...t){a<50&&(a++,console.error(...t))}(\\\"clip path format not supported:\\\",t[\\\"clip-path\\\"]);if(t.style.display&&\\\"none\\\"===t.style.display||(e?this.drawSingleNode(t,\\\"forcesingle\\\",s):this.drawSingleNode(t,\\\"normal\\\",s)),t.children){this.parentValues.fill=t.fill||this.parentValues.fill,this.parentValues[\\\"style;fill\\\"]=t.style.fill||this.parentValues[\\\"style;fill\\\"],this.parentValues.stroke=t.stroke||this.parentValues.stroke,this.parentValues[\\\"style;stroke\\\"]=t.style.stroke||this.parentValues[\\\"style;stroke\\\"],this.parentValues.opacity=t.opacity||this.parentValues.opacity;for(let r=0;r<t.children.length;r++)this.drawNodeAndChildren(t.children[r],e,s)}n&&r.restore(),this.parentValues=i}drawSingleNode(t,e=\\\"normal\\\",s){const r=t.type,i=this[\\\"draw\\\"+r.substr(0,1).toUpperCase()+r.substr(1)];if(!i)return console.error(\\\"no draw function yet for \\\",r);i.call(this,t,e,s)}drawClippath(t){}drawSvg(){}drawTitle(){}drawG(){}drawCircle(t,e=\\\"normal\\\",s){if(\\\"normal\\\"===e){const e=this.getFillStyle(t,\\\"#000\\\")+\\\";\\\"+this.getStrokeStyle(t);this.circlesByColor[e]||(this.circlesByColor[e]=[]),this.circlesByColor[e].push(t)}if(\\\"start\\\"!==e){if(\\\"end\\\"!==e){if(\\\"forcesingle\\\"===e){let e=this.getFillStyle(t,\\\"#000\\\");const r=this.getStrokeStyle(t),i=this.vdom.get(t,\\\"cx\\\")||0,a=this.vdom.get(t,\\\"cy\\\")||0;this.ctx.beginPath(),this.ctx.fillStyle=e,this.ctx.strokeStyle=r,this.ctx.lineWidth=this.getStrokeWidth(t),this.ctx.moveTo(i+t.r,a),(s||this.ctx).arc(i,a,t.r,0,2*Math.PI),\\\"none\\\"===e||s||this.ctx.fill(),r&&\\\"none\\\"!==r&&!s&&this.ctx.stroke()}}else for(let t in this.circlesByColor)if(this.circlesByColor.hasOwnProperty(t)){const e=t.split(\\\";\\\"),s=e[0],r=e[1];this.ctx.fillStyle=s;let i=this.circlesByColor[t][0];const a=this.getStrokeWidth(i);this.ctx.lineWidth=void 0!==a?a:1,this.ctx.strokeStyle=r,this.ctx.beginPath();for(let e of this.circlesByColor[t]){const t=Math.round(this.vdom.get(e,\\\"cx\\\"))||0,s=Math.round(this.vdom.get(e,\\\"cy\\\"))||0,r=Math.round(this.vdom.get(e,\\\"r\\\"));this.ctx.save(),this.applyTransform(e.transform),this.ctx.moveTo(t+r,s),this.ctx.arc(t,s,r,0,2*Math.PI),this.ctx.restore()}\\\"none\\\"!==s&&this.ctx.fill(),r&&\\\"none\\\"!==r&&this.ctx.stroke()}}else this.circlesByColor={}}nodeUpdated(t,e){(\\\"*\\\"===e||e.includes(\\\"fill\\\")||e.includes(\\\"opacity\\\"))&&delete t[\\\"fill-cache\\\"],(\\\"*\\\"===e||e.includes(\\\"stroke\\\")||e.includes(\\\"opacity\\\"))&&(delete t[\\\"stroke-cache\\\"],delete t[\\\"strokewidth-cache\\\"])}getFillStyle(t,e=\\\"none\\\"){if(\\\"fill-cache\\\"in t)return t[\\\"fill-cache\\\"];let s=this.getAttributeStyleCss(t,\\\"fill\\\"),r=this.getAttributeStyleCss(t,\\\"opacity\\\")||1;r*=this.getAttributeStyleCss(t,\\\"fill-opacity\\\")||1;let a=\\\"\\\";return this.parentValues.fill&&(a=this.parentValues.fill),this.parentValues[\\\"style;fill\\\"]&&(a=this.parentValues[\\\"style;fill\\\"]),this.parentValues.fill||this.parentValues[\\\"style;fill\\\"]||(a=e),s=i.default.colorToRgba(s,r,a),t[\\\"fill-cache\\\"]=s,s}getAttributeStyleCss(t,e){if(t.style[e])return t.style[e];{if(this.parentValues[`style;${e}`])return this.parentValues[`style;${e}`];let s=t[e],r=-1;for(const a in t.css)if(t.css[a][e]){const n=i.default.getCssRuleSpecificityNumber(a);n>r&&(s=t.css[a][e],r=n)}return s}}getStrokeStyle(t,e=\\\"none\\\"){if(\\\"stroke-cache\\\"in t)return t[\\\"stroke-cache\\\"];const s=this.getAttributeStyleCss(t,\\\"stroke\\\");let r=this.getAttributeStyleCss(t,\\\"opacity\\\")||1;r*=this.getAttributeStyleCss(t,\\\"stroke-opacity\\\")||1;let a=\\\"\\\";return a=this.parentValues.stroke?this.parentValues.stroke:e,t[\\\"stroke-cache\\\"]=void 0!==s?i.default.colorToRgba(s,r):a,t[\\\"stroke-cache\\\"]}getStrokeWidth(t){if(\\\"strokewidth-cache\\\"in t)return t[\\\"strokewidth-cache\\\"];const e=this.getAttributeStyleCss(t,\\\"stroke-width\\\");return t[\\\"strokewidth-cache\\\"]=void 0===e?void 0:parseFloat(e),t[\\\"strokewidth-cache\\\"]}drawRect(t,e=\\\"normal\\\",s){if(\\\"normal\\\"===e){const e=this.getFillStyle(t,\\\"#000\\\")+\\\";\\\"+this.getStrokeStyle(t);this.rectsByColor[e]||(this.rectsByColor[e]=[]),this.rectsByColor[e].push(t)}if(\\\"start\\\"!==e){if(\\\"end\\\"!==e){if(\\\"forcesingle\\\"===e){let e=this.getFillStyle(t,\\\"#000\\\");const r=this.getStrokeStyle(t),i=this.vdom.get(t,\\\"x\\\")||0,a=this.vdom.get(t,\\\"y\\\")||0;e&&\\\"none\\\"!==e&&!s&&(this.ctx.fillStyle=e,this.ctx.fillRect(i,a,t.width,t.height)),s&&s.rect(i,a,t.width,t.height),\\\"none\\\"===r||s||(this.ctx.strokeStyle=r,this.ctx.beginPath(),this.ctx.rect(i,a,t.width,t.height),this.ctx.stroke())}}else for(let t in this.rectsByColor)if(this.rectsByColor.hasOwnProperty(t)){const e=t.split(\\\";\\\"),s=e[0],r=e[1];this.ctx.fillStyle=s;let i=this.rectsByColor[t][0];const a=this.getStrokeWidth(i);this.ctx.lineWidth=void 0!==a?a:1,this.ctx.strokeStyle=r,this.ctx.beginPath();for(let e of this.rectsByColor[t]){const t=Math.round(this.vdom.get(e,\\\"x\\\"))||0,s=Math.round(this.vdom.get(e,\\\"y\\\"))||0;this.ctx.save(),this.applyTransform(e.transform),this.ctx.moveTo(t,s),this.ctx.rect(t,s,e.width,e.height),this.ctx.restore()}\\\"none\\\"!==s&&this.ctx.fill(),r&&\\\"none\\\"!==r&&this.ctx.stroke()}}else this.rectsByColor={}}drawText(t,e=\\\"normal\\\",s=!1){const r=t=>{if(\\\"\\\"===t.text)return;let e=this.getAttributeStyleCss(t,\\\"font-family\\\")||\\\"Times New Roman\\\",s=\\\"16px\\\";const r=this.getAttributeStyleCss(t,\\\"font-size\\\");r&&(s=i.default.convertSizeToPx(r)+\\\"px\\\");let a=this.getAttributeStyleCss(t,\\\"font\\\");a||(a=s+\\\" \\\"+e);let n=this.getAttributeStyleCss(t,\\\"text-anchor\\\");n&&(\\\"middle\\\"===n&&(n=\\\"center\\\"),this.ctx.textAlign=n),this.ctx.font=a,this.ctx.fillStyle=this.getFillStyle(t,\\\"#000\\\");let o=this.vdom.get(t,\\\"x\\\")||0,l=this.vdom.get(t,\\\"y\\\")||0,h=i.default.convertSizeToPx(t.dx,!1)||0,c=i.default.convertSizeToPx(t.dy,!1)||0;this.ctx.fillText(t.text,o+h,l+c)};if(\\\"start\\\"!==e)if(\\\"normal\\\"!==e){if(\\\"forcesingle\\\"===e)return r(t);if(\\\"end\\\"!==e);else for(const t of this.drawTexts)r(t)}else this.drawTexts.push(t);else this.drawTexts=[]}drawImage(t,e=\\\"normal\\\"){const s=t=>{if(\\\"\\\"===t.href)return;let e=t.fill?t.fill:t.style.fill;e||(e=\\\"#000\\\"),this.ctx.fillStyle=e;let s=this.vdom.get(t,\\\"x\\\")||0,r=this.vdom.get(t,\\\"y\\\")||0,i=t.width||0,a=t.height||0;if(t.image)try{this.ctx.drawImage(t.image,s,r,i,a)}catch(t){console.log(t)}};if(\\\"start\\\"!==e)if(\\\"normal\\\"!==e){if(\\\"forcesingle\\\"===e)return s(t);if(\\\"end\\\"!==e);else for(const t of this.drawImages)s(t)}else this.drawImages.push(t);else this.drawImages=[]}drawPath(t,e=\\\"normal\\\",s){if(\\\"normal\\\"!==e&&\\\"forcesingle\\\"!==e)return;const r=this.getFillStyle(t,\\\"#000\\\"),i=this.getStrokeStyle(t),a=this.getStrokeWidth(t);let n=new Path2D(t.d);if(this.ctx.fillStyle=r,void 0!==i&&\\\"none\\\"!==i){void 0!==a&&(this.ctx.lineWidth=a),this.ctx.strokeStyle=i;const e=this.getAttributeStyleCss(t,\\\"stroke-linejoin\\\");e&&(\\\"bevel\\\"===e||\\\"round\\\"===e||\\\"miter\\\"===e?this.ctx.lineJoin=e:console.error(\\\"unknown line join value:\\\",e)),s||this.ctx.stroke(n)}r&&\\\"none\\\"!==r&&!s&&this.ctx.fill(n),s&&s.addPath(n)}drawTspan(t,e=\\\"normal\\\"){if(\\\"normal\\\"!==e&&\\\"forcesingle\\\"!==e)return;this.ctx.font=\\\"10px Arial\\\",this.ctx.fillStyle=\\\"#000000\\\";const s=\\\"middle\\\"===t.style.textAnchor?\\\"center\\\":t.style.textAnchor;this.ctx.textAlign=s,this.ctx.fillText(t.text,this.vdom.get(t,\\\"x\\\"),this.vdom.get(t,\\\"y\\\"))}drawTextpath(t){console.warn(\\\"no draw function yet for textpath\\\")}drawLine(t,e=\\\"normal\\\"){if(this.vdom.data.scale,\\\"normal\\\"===e){const e=this.getStrokeStyle(t),s=this.getStrokeWidth(t);if(\\\"none\\\"===e||0===s)return;const r=`${e};${s}`;this.linesByColor[r]||(this.linesByColor[r]=[]),this.linesByColor[r].push(t)}if(\\\"start\\\"!==e){if(\\\"end\\\"!==e){if(\\\"forcesingle\\\"===e){this.ctx.beginPath();const[e,s,r,i]=this.vdom.get(t,[\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\"]).map(t=>Math.round(t)||0);this.ctx.moveTo(e,r),this.ctx.lineTo(s,i),this.ctx.strokeStyle=this.getStrokeStyle(t),this.ctx.lineWidth=this.getStrokeWidth(t),this.ctx.stroke()}}else for(let t in this.linesByColor)if(this.linesByColor.hasOwnProperty(t)){const e=t.split(\\\";\\\"),s=e[0],r=e[1];this.ctx.strokeStyle=s,this.ctx.lineWidth=parseFloat(r),this.ctx.beginPath();for(let e of this.linesByColor[t]){e.transform&&(this.ctx.save(),this.applyTransform(e.transform));const[t,s,r,i]=this.vdom.get(e,[\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\"]).map(t=>Math.round(t)||0);this.ctx.moveTo(t,r),this.ctx.lineTo(s,i),e.transform&&this.ctx.restore()}this.ctx.stroke()}}else this.linesByColor={}}drawDefs(t){}drawMarker(t){}applyTransform(t){const e=t?i.default.parseTransform(t):null;if(e){e.rotateLast||this.ctx.rotate(e.rotate*Math.PI/180);const t=e.translateBeforeScale?e.translateX:e.translateX*e.scaleX,s=e.translateBeforeScale?e.translateY:e.translateY*e.scaleY;return this.ctx.transform(e.scaleX,0,0,e.scaleY,t,s),e.rotateLast&&this.ctx.rotate(e.rotate*Math.PI/180),!0}return!1}};let a=0},function(t,e,s){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0});class r{static parseTransform(t){const e={translateX:0,translateY:0,scaleX:1,scaleY:1,rotate:0,translateBeforeScale:!1,rotateLast:!1};if(t){if(\\\"string\\\"!=typeof t)return e.scaleX=t.k,e.scaleY=t.k,e.translateX=t.x,e.translateY=t.y,e.translateBeforeScale=!0,e;let s=t;s=s.replace(/ /g,\\\"\\\");const r=/\\\\s*translate\\\\(([-0-9.]+),([-0-9.]+)\\\\)/.exec(s);r&&(e.translateX=parseFloat(r[1]),e.translateY=parseFloat(r[2]));const i=/\\\\s*scale\\\\(([-0-9.]+)(,[-0-9.]+)?\\\\)/.exec(s);i&&(e.scaleX=parseFloat(i[1]),e.scaleY=i[2]?parseFloat(i[2].substr(1)):parseFloat(i[1]));const a=/\\\\s*rotate\\\\(([-0-9.]+)\\\\)/.exec(s);a&&(e.rotate=parseFloat(a[1])),/\\\\s*translate\\\\(([-0-9.]+),([-0-9.]+)\\\\)scale\\\\(([-0-9.,]+)\\\\)/.exec(s)&&(e.translateBeforeScale=!0),/\\\\s*rotate\\\\(([-0-9.,]+)\\\\)$/.exec(s)&&(e.rotateLast=!0);const n=/\\\\s*matrix\\\\(([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+)\\\\)/.exec(s);n&&(e.scaleX=parseFloat(n[1]),e.scaleY=parseFloat(n[4]),e.translateX=parseFloat(n[5]),e.translateY=parseFloat(n[6]))}return e}static addTransforms(t,e){return{translateX:t.translateX+e.translateX,translateY:t.translateY+e.translateY,scaleX:t.scaleX*e.scaleX,scaleY:t.scaleY*e.scaleY,rotate:t.rotate+e.rotate,translateBeforeScale:!1,rotateLast:!1}}static convertSizeToPx(t,e=!0){const s=e?14:void 0;return void 0===t?s:\\\"number\\\"==typeof t?t:\\\"em\\\"===t.substr(-2)?Math.round(12*parseFloat(t)):\\\"px\\\"===t.substr(-2)?parseInt(t):t.match(/^[0-9]+$/)?parseInt(t):(console.warn(\\\"size in unsupported format: \\\",t),s)}static colorToRgba(t,e=1,s=\\\"none\\\"){if(\\\"none\\\"===t)return t;t||(t=s);const i=`${t}-${e}`;if(r.rgbaCache[i])return r.rgbaCache[i];if(t=r.CssNamedColorToHex(t),1===e&&\\\"string\\\"==typeof t)return r.rgbaCache[i]=t,t;let a;if(\\\"string\\\"==typeof t&&\\\"#\\\"===t[0]){let s;if(!/^#([A-Fa-f0-9]{3}){1,2}$/.test(t))throw new Error(\\\"Bad Hex\\\");3==(s=t.substring(1)).length&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]),a=\\\"rgba(\\\"+[(s=\\\"0x\\\"+s)>>16&255,s>>8&255,255&s].join(\\\",\\\")+\\\",\\\"+e+\\\")\\\"}else if(\\\"object\\\"==typeof t){if(\\\"r\\\"in t)a=\\\"rgba(\\\"+t.r+\\\",\\\"+t.g+\\\",\\\"+t.b+\\\",\\\"+e+\\\")\\\";else if(\\\"h\\\"in t){const s=r.hslToRgb(t.h/360,t.s,t.l);a=\\\"rgba(\\\"+s.r+\\\",\\\"+s.g+\\\",\\\"+s.b+\\\",\\\"+e+\\\")\\\"}}else\\\"rgb(\\\"===t.substr(0,4)&&(a=t.substr(0,t.length-1).replace(\\\"rgb\\\",\\\"rgba\\\")+\\\", \\\"+e+\\\")\\\");return r.rgbaCache[i]=a,a}static hslToRgb(t,e,s){var r,i,a;if(0==e)r=i=a=s;else{var n=function(t,e,s){return s<0&&(s+=1),s>1&&(s-=1),s<1/6?t+6*(e-t)*s:s<.5?e:s<2/3?t+(e-t)*(2/3-s)*6:t},o=s<.5?s*(1+e):s+e-s*e,l=2*s-o;r=n(l,o,t+1/3),i=n(l,o,t),a=n(l,o,t-1/3)}return{r:Math.round(255*r),g:Math.round(255*i),b:Math.round(255*a)}}static CssNamedColorToHex(t){return\\\"string\\\"==typeof t&&i[t.toUpperCase()]?i[t.toUpperCase()]:t}static getCssRuleSpecificityNumber(t){let e=0;t=t.replace(/ >/g,\\\">\\\").replace(/> /g,\\\">\\\");const s=[].concat.apply([],t.split(\\\" \\\").map(t=>t.split(\\\">\\\")));for(const t of s){e+=100;const s=t[0];if(\\\"#\\\"===s)e+=1e3;else if(\\\".\\\"===s){const s=t.split(\\\".\\\").length-1;e+=Math.min(900,100*s)}}return e}}r.rgbaCache={},e.default=r;const i={ALICEBLUE:\\\"#F0F8FF\\\",ANTIQUEWHITE:\\\"#FAEBD7\\\",AQUA:\\\"#00FFFF\\\",AQUAMARINE:\\\"#7FFFD4\\\",AZURE:\\\"#F0FFFF\\\",BEIGE:\\\"#F5F5DC\\\",BISQUE:\\\"#FFE4C4\\\",BLACK:\\\"#000000\\\",BLANCHEDALMOND:\\\"#FFEBCD\\\",BLUE:\\\"#0000FF\\\",BLUEVIOLET:\\\"#8A2BE2\\\",BROWN:\\\"#A52A2A\\\",BURLYWOOD:\\\"#DEB887\\\",CADETBLUE:\\\"#5F9EA0\\\",CHARTREUSE:\\\"#7FFF00\\\",CHOCOLATE:\\\"#D2691E\\\",CORAL:\\\"#FF7F50\\\",CORNFLOWERBLUE:\\\"#6495ED\\\",CORNSILK:\\\"#FFF8DC\\\",CRIMSON:\\\"#DC143C\\\",CYAN:\\\"#00FFFF\\\",DARKBLUE:\\\"#00008B\\\",DARKCYAN:\\\"#008B8B\\\",DARKGOLDENROD:\\\"#B8860B\\\",DARKGRAY:\\\"#A9A9A9\\\",DARKGREY:\\\"#A9A9A9\\\",DARKGREEN:\\\"#006400\\\",DARKKHAKI:\\\"#BDB76B\\\",DARKMAGENTA:\\\"#8B008B\\\",DARKOLIVEGREEN:\\\"#556B2F\\\",DARKORANGE:\\\"#FF8C00\\\",DARKORCHID:\\\"#9932CC\\\",DARKRED:\\\"#8B0000\\\",DARKSALMON:\\\"#E9967A\\\",DARKSEAGREEN:\\\"#8FBC8F\\\",DARKSLATEBLUE:\\\"#483D8B\\\",DARKSLATEGRAY:\\\"#2F4F4F\\\",DARKSLATEGREY:\\\"#2F4F4F\\\",DARKTURQUOISE:\\\"#00CED1\\\",DARKVIOLET:\\\"#9400D3\\\",DEEPPINK:\\\"#FF1493\\\",DEEPSKYBLUE:\\\"#00BFFF\\\",DIMGRAY:\\\"#696969\\\",DIMGREY:\\\"#696969\\\",DODGERBLUE:\\\"#1E90FF\\\",FIREBRICK:\\\"#B22222\\\",FLORALWHITE:\\\"#FFFAF0\\\",FORESTGREEN:\\\"#228B22\\\",FUCHSIA:\\\"#FF00FF\\\",GAINSBORO:\\\"#DCDCDC\\\",GHOSTWHITE:\\\"#F8F8FF\\\",GOLD:\\\"#FFD700\\\",GOLDENROD:\\\"#DAA520\\\",GRAY:\\\"#808080\\\",GREY:\\\"#808080\\\",GREEN:\\\"#008000\\\",GREENYELLOW:\\\"#ADFF2F\\\",HONEYDEW:\\\"#F0FFF0\\\",HOTPINK:\\\"#FF69B4\\\",INDIANRED:\\\"#CD5C5C\\\",INDIGO:\\\"#4B0082\\\",IVORY:\\\"#FFFFF0\\\",KHAKI:\\\"#F0E68C\\\",LAVENDER:\\\"#E6E6FA\\\",LAVENDERBLUSH:\\\"#FFF0F5\\\",LAWNGREEN:\\\"#7CFC00\\\",LEMONCHIFFON:\\\"#FFFACD\\\",LIGHTBLUE:\\\"#ADD8E6\\\",LIGHTCORAL:\\\"#F08080\\\",LIGHTCYAN:\\\"#E0FFFF\\\",LIGHTGOLDENRODYELLOW:\\\"#FAFAD2\\\",LIGHTGRAY:\\\"#D3D3D3\\\",LIGHTGREY:\\\"#D3D3D3\\\",LIGHTGREEN:\\\"#90EE90\\\",LIGHTPINK:\\\"#FFB6C1\\\",LIGHTSALMON:\\\"#FFA07A\\\",LIGHTSEAGREEN:\\\"#20B2AA\\\",LIGHTSKYBLUE:\\\"#87CEFA\\\",LIGHTSLATEGRAY:\\\"#778899\\\",LIGHTSLATEGREY:\\\"#778899\\\",LIGHTSTEELBLUE:\\\"#B0C4DE\\\",LIGHTYELLOW:\\\"#FFFFE0\\\",LIME:\\\"#00FF00\\\",LIMEGREEN:\\\"#32CD32\\\",LINEN:\\\"#FAF0E6\\\",MAGENTA:\\\"#FF00FF\\\",MAROON:\\\"#800000\\\",MEDIUMAQUAMARINE:\\\"#66CDAA\\\",MEDIUMBLUE:\\\"#0000CD\\\",MEDIUMORCHID:\\\"#BA55D3\\\",MEDIUMPURPLE:\\\"#9370DB\\\",MEDIUMSEAGREEN:\\\"#3CB371\\\",MEDIUMSLATEBLUE:\\\"#7B68EE\\\",MEDIUMSPRINGGREEN:\\\"#00FA9A\\\",MEDIUMTURQUOISE:\\\"#48D1CC\\\",MEDIUMVIOLETRED:\\\"#C71585\\\",MIDNIGHTBLUE:\\\"#191970\\\",MINTCREAM:\\\"#F5FFFA\\\",MISTYROSE:\\\"#FFE4E1\\\",MOCCASIN:\\\"#FFE4B5\\\",NAVAJOWHITE:\\\"#FFDEAD\\\",NAVY:\\\"#000080\\\",OLDLACE:\\\"#FDF5E6\\\",OLIVE:\\\"#808000\\\",OLIVEDRAB:\\\"#6B8E23\\\",ORANGE:\\\"#FFA500\\\",ORANGERED:\\\"#FF4500\\\",ORCHID:\\\"#DA70D6\\\",PALEGOLDENROD:\\\"#EEE8AA\\\",PALEGREEN:\\\"#98FB98\\\",PALETURQUOISE:\\\"#AFEEEE\\\",PALEVIOLETRED:\\\"#DB7093\\\",PAPAYAWHIP:\\\"#FFEFD5\\\",PEACHPUFF:\\\"#FFDAB9\\\",PERU:\\\"#CD853F\\\",PINK:\\\"#FFC0CB\\\",PLUM:\\\"#DDA0DD\\\",POWDERBLUE:\\\"#B0E0E6\\\",PURPLE:\\\"#800080\\\",REBECCAPURPLE:\\\"#663399\\\",RED:\\\"#FF0000\\\",ROSYBROWN:\\\"#BC8F8F\\\",ROYALBLUE:\\\"#4169E1\\\",SADDLEBROWN:\\\"#8B4513\\\",SALMON:\\\"#FA8072\\\",SANDYBROWN:\\\"#F4A460\\\",SEAGREEN:\\\"#2E8B57\\\",SEASHELL:\\\"#FFF5EE\\\",SIENNA:\\\"#A0522D\\\",SILVER:\\\"#C0C0C0\\\",SKYBLUE:\\\"#87CEEB\\\",SLATEBLUE:\\\"#6A5ACD\\\",SLATEGRAY:\\\"#708090\\\",SLATEGREY:\\\"#708090\\\",SNOW:\\\"#FFFAFA\\\",SPRINGGREEN:\\\"#00FF7F\\\",STEELBLUE:\\\"#4682B4\\\",TAN:\\\"#D2B48C\\\",TEAL:\\\"#008080\\\",THISTLE:\\\"#D8BFD8\\\",TOMATO:\\\"#FF6347\\\",TURQUOISE:\\\"#40E0D0\\\",VIOLET:\\\"#EE82EE\\\",WHEAT:\\\"#F5DEB3\\\",WHITE:\\\"#FFFFFF\\\",WHITESMOKE:\\\"#F5F5F5\\\",YELLOW:\\\"#FFFF00\\\",YELLOWGREEN:\\\"#9ACD32\\\"}}]);\\n//# sourceMappingURL=ae575840bf0cd0f0313d.worker.js.map\", __webpack_public_path__ + \"ae575840bf0cd0f0313d.worker.js\");\n};","import '../worker-loader';\nimport SyncWorkerImporter = require('worker-loader?inline=true!./syncworker');\n\nexport default SyncWorkerImporter;","module.exports = function() {\n  return require(\"!!/home/micha/Web/ssvg/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(e){var t={};function s(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&\\\"object\\\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:e}),2&t&&\\\"string\\\"!=typeof e)for(var n in e)s.d(r,n,function(t){return e[t]}.bind(null,n));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,\\\"a\\\",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p=\\\"\\\",s(s.s=0)}([function(e,t,s){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0});const r=s(1);let n;self.onmessage=function(e){const t=e.data;if(t&&t.cmd)switch(t.cmd){case\\\"INIT\\\":n=new r.VdomManager(t.data.visData,!1);break;case\\\"UPDATE_NODES\\\":const e=t;for(let t of e.data.enterExit){if(\\\"EXIT\\\"===t.cmd){const e=n.getNodeFromIndex(t.childGlobalIndex),s=n.getNodeFromIndex(t.parentGlobalIndex);n.removeNode(e,s)}if(\\\"ENTER\\\"===t.cmd){const e=t.node;t.keepChildren||(e.children=[]),n.addNode(e),n.addNodeToParent(e,t.parentGlobalIndex)}}break;default:console.error(\\\"did not find command \\\",t.cmd)}}},function(e,t,s){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0});class r{constructor(e,t){this.data=e,this.ignoreDesign=t,this.sharedData={},this.sharedDataQueue={},this.sharedDataQueueBuffers={},this.queue={},this.useSharedArrayFor=[\\\"cx\\\",\\\"cy\\\",\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\",\\\"x\\\",\\\"y\\\"],this.indexToNodeMap={},this.changed=!1,this.cachedListSelections={},this.ensureNodesMapped()}ensureInitialized(e,t=!0,s){if(\\\"class\\\"===e&&(e=\\\"className\\\"),t&&-1!==this.useSharedArrayFor.indexOf(e)){const t=s<500?1e3:Math.round(2*s);if(this.sharedData[e]){const s=Int32Array.BYTES_PER_ELEMENT*t;if(this.sharedData[e].byteLength/s<.6){const{buffer:s,values:r}=this.createBufferTransferValues(t,this.sharedDataQueue[e]);this.sharedDataQueue[e]=r,this.sharedDataQueueBuffers[e]=s}}else{let s;!this.queue[e]||this.queue[e]instanceof SharedArrayBuffer||(s=this.queue[e]);const{buffer:r,values:n}=this.createBufferTransferValues(t,void 0,s);this.sharedDataQueue[e]=n,this.sharedDataQueueBuffers[e]=r}}else this.queue[e]||(this.queue[e]={})}createBufferTransferValues(e,t,s){let n=new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*e);const i=new Int32Array(n);if(s)for(const e in s)if(s.hasOwnProperty(e)){let t=s[e];\\\"string\\\"==typeof t&&(t=parseFloat(t)),i[e]=t*r.BUFFER_PRECISION_FACTOR}if(t)for(let e=0;e<t.length;e++)t[e]&&(i[e]=t[e]);return{buffer:n,values:i}}set(e,t,s,n=!0){if(\\\"class\\\"===t&&(t=\\\"className\\\"),void 0===e.globalElementIndex)throw console.error(\\\"No index\\\",e),new Error(\\\"Element has no index\\\");const i=e.globalElementIndex,a=n&&-1!==this.useSharedArrayFor.indexOf(t)?\\\"shared\\\":\\\"raw\\\";try{this.changed=!0,\\\"shared\\\"===a?(\\\"string\\\"==typeof s&&(s=parseFloat(s)),s*=r.BUFFER_PRECISION_FACTOR,0===(s=Math.round(s))&&(s=56938516),this.sharedDataQueue[t][i]=s):(this.queue[t][i]=s,this.sharedDataQueue[t]&&this.sharedData[t][i]&&(this.sharedDataQueue[t][i]=0))}catch(s){console.error(s),console.log(this.queue,this.sharedData,a,t,e,i)}}removePendingChanges(e){const t=e.globalElementIndex;for(const e in this.queue)this.queue.hasOwnProperty(e)&&delete this.queue[e][t];for(const e in this.sharedData)this.sharedDataQueue.hasOwnProperty(e)&&(this.sharedDataQueue[e][t]=0)}ensureNodesMapped(){const e=t=>{void 0===t.globalElementIndex&&console.error(\\\"no element index\\\",t),this.indexToNodeMap[t.globalElementIndex]=t;for(const s of t.children)e(s)};e(this.data)}enableFrontendDesignProperties(){this.ignoreDesign=!1}addNodeToParent(e,t){if(\\\"svg\\\"!==e.type){const s=this.getNodeFromIndex(t);if(!s)return console.error(\\\"could not add node without parent\\\",t,e,Object.keys(this.indexToNodeMap)),void new Error(\\\"parent not found\\\");s.children.push(e)}}addNode(e){this.indexToNodeMap[e.globalElementIndex]=e}removeNode(e,t){delete this.indexToNodeMap[e.globalElementIndex];const s=t.children.indexOf(e);t.children.splice(s,1),this.cachedListSelections={},this.removePendingChanges(e)}applyStyleToNodeAndChildren(e,t,s,r){if(e.style[t]=s,r(e,t),e.children)for(let n of e.children)this.applyStyleToNodeAndChildren(n,t,s,r)}applyCssToNodeAndChildren(e,t,s,r,n){if(\\\"*\\\"!==s||r?(e.css[t]||(e.css[t]={}),e.css[t][s]=r):delete e.css[t],n(e,s),e.children)for(let i of e.children)this.applyCssToNodeAndChildren(i,t,s,r,n)}getNodeFromIndex(e){return this.indexToNodeMap[e]}getNodeById(e){const t=Object.values(this.indexToNodeMap).filter(t=>t.id===e);return(!t||t.length>1)&&(i(\\\"multiple nodes with this id!\\\",Object.values(this.indexToNodeMap).filter(e=>e.id).map(e=>e.id),e),i(t.length,t)),t&&1===t.length?t[0]:null}get(e,t){return Array.isArray(t)?t.map(t=>this.getSingle(e,t)):this.getSingle(e,t)}getSingle(e,t){if(this.sharedData[t]&&this.sharedData[t][e.globalElementIndex]){const s=this.sharedData[t][e.globalElementIndex];return 56938516===s?0:s/r.BUFFER_PRECISION_FACTOR}return e[t]}hasChanges(){return this.changed}getQueue(){return this.queue}clearQueue(){this.queue={},this.changed=!1}transferBufferQueueData(){for(let e in this.sharedDataQueue){this.queue[e]=this.sharedDataQueueBuffers[e],this.sharedData[e]=this.sharedDataQueue[e];const t=this.sharedData[e].byteLength/Int32Array.BYTES_PER_ELEMENT,{buffer:s,values:r}=this.createBufferTransferValues(t,this.sharedDataQueue[e]);this.sharedDataQueueBuffers[e]=s,this.sharedDataQueue[e]=r}}updatePropertiesFromQueue(e,t=(()=>{})){for(let s in e){if(!e.hasOwnProperty(s))continue;const n=s.substr(0,\\\"style;\\\".length);if(this.ignoreDesign&&(\\\"style;\\\"===n||-1!==r.IGNOREDESIGN_ATTRIBUTES.indexOf(s)))continue;let i;if(\\\"SharedArrayBuffer\\\"in self&&e[s]instanceof SharedArrayBuffer)this.sharedData[s]=new Int32Array(e[s]);else{i=e[s];for(let e in i){if(!i.hasOwnProperty(e))continue;const a=parseInt(e),o=this.getNodeFromIndex(a);if(!o){console.error(\\\"node not found at index\\\",a);continue}let d=i[e];if(\\\"style;\\\"===n){const e=s.substr(\\\"style;\\\".length);this.applyStyleToNodeAndChildren(o,e,d,t)}else if(\\\"css;\\\"===s.substr(0,4)){const[e,r]=s.substr(4).split(\\\";\\\");this.applyCssToNodeAndChildren(o,e,r,d,t)}else-1!==r.ROUNDED_ATTRS.indexOf(s)&&(\\\"string\\\"==typeof d&&(d=parseFloat(d)),d=Math.round(d)),o[s]=d,t(o,s)}}}}getVisNodeFromSelector(e){const t=e.lastIndexOf(\\\">\\\"),s=e.substr(0,t),r=e.substr(t+1),n=s?this.cachedListSelections[s]:null;let i=-1;const a=r.indexOf(\\\":nth-child(\\\");if(-1!==a&&(i=parseInt(r.substr(a+11)),n&&n[i]))return n[i];const o=[];if(this.findMatchingChildren(this.data,e,0,o),o&&1===o.length){const e=o[0];return-1!==i&&(this.cachedListSelections[s]||(this.cachedListSelections[s]={}),this.cachedListSelections[s][i]=e),e}return null}getVisNodesFromSelector(e,t){const s=[];return this.findMatchingChildren(e,t,0,s),s}findChildrenOfType(e,t,s){const r=e=>{for(const n of e.children)n.type===t&&s.push(n),0!==e.children.length&&r(n)};r(e)}filterNodesBySelector(e,t,s){return t.filter(t=>r.isCssRulePartialMatch(s,t,e))}findMatchingChildren(e,t,s,n,i=[]){if(!t&&\\\"\\\"!==t)throw console.error(e,t,s,n,i),Error(\\\"undefined selector\\\");let a=t.split(\\\">\\\").map(e=>e.trim()),o=a[s];if(0===s&&\\\"svg\\\"===o&&(o=a[++s],s===a.length))return n.push(e),void i.push(t);if(t.match(/^[a-z]+$/))return this.findChildrenOfType(e,t,n);for(let d=0;d<e.children.length;d++){let l=e.children[d],h=!1;r.isCssRulePartialMatch(o,l,e)&&(s===a.length-1?(n.push(l),i.push(t)):h=!0),l.children&&(h||a.length<2)&&s+1<a.length&&this.findMatchingChildren(l,t,s+1,n,i)}}static isCssRulePartialMatch(e,t,s){if(\\\":not(\\\"===e.substr(0,5)){const n=e.substr(0,e.length-1).substr(5);return!r.isCssRulePartialMatch(n,t,s)}if(\\\".\\\"===e[0]){const s=e.split(\\\".\\\");if(s.shift(),t.className){let e=!0;for(const r of s)-1===t.className.split(\\\" \\\").indexOf(r)&&(e=!1);return e}}else if(\\\"#\\\"===e[0]){if(e.substr(1)===t.id)return!0}else if(e.match(/^[a-z]+$/)){if(e===t.type)return!0}else{if(-1!==e.indexOf(\\\":nth-child(\\\")){let r=\\\"any\\\",n=e;\\\":\\\"!==e[0]&&(r=e.substr(0,e.indexOf(\\\":\\\")),n=e.substr(e.indexOf(\\\":\\\")));const i=parseInt(n.substr(\\\":nth-child(\\\".length));return s.children.indexOf(t)===i-1&&(\\\"any\\\"===r||t.type===r)}if(-1!==e.indexOf(\\\".\\\")){const s=e.indexOf(\\\".\\\"),r=e.substr(0,s),n=e.substr(s+1);if(r===t.type&&t.className&&-1!==t.className.split(\\\" \\\").indexOf(n))return!0}}return!1}}r.IGNOREDESIGN_ATTRIBUTES=[\\\"fill\\\",\\\"stroke\\\",\\\"opacity\\\"],r.BUFFER_PRECISION_FACTOR=10,r.ROUNDED_ATTRS=[\\\"cx\\\",\\\"cy\\\"],t.VdomManager=r;let n=0;function i(...e){n<400&&(n++,console.log(...e))}}]);\\n//# sourceMappingURL=375485b29ff308a8386b.worker.js.map\", __webpack_public_path__ + \"375485b29ff308a8386b.worker.js\");\n};"],"sourceRoot":""}