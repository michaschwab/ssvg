{"version":3,"sources":["webpack://SSVG/webpack/universalModuleDefinition","webpack://SSVG/webpack/bootstrap","webpack://SSVG/./canvasworker/drawingUtils.ts","webpack://SSVG/./util/vdom/set-property-queue.ts","webpack://SSVG/./frontend/ssvg-auto-exporter.ts","webpack://SSVG/./frontend/ssvg.ts","webpack://SSVG/./frontend/domhandler.ts","webpack://SSVG/./util/vdom/vdom-manager.ts","webpack://SSVG/./canvasworker/canvasrenderer.ts","webpack://SSVG/./canvasworker/index.ts","webpack://SSVG/./canvasworker/canvasworker.ts","webpack://SSVG/./node_modules/worker-loader/dist/workers/InlineWorker.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DrawingUtils","transform","transformObject","translateX","translateY","scaleX","scaleY","rotate","translateBeforeScale","transformString","replace","translate","exec","parseFloat","scale","substr","matrix","transformA","transformB","size","fallback","defaultValue","undefined","Math","round","parseInt","match","console","warn","color","opacity","defaultColor","CssNamedColorToHex","test","substring","length","join","Error","g","b","rgb","hslToRgb","h","hue2rgb","q","COLOR_HEXES","toUpperCase","selector","specificity","parts","concat","apply","split","map","part","start","countClasses","min","ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREY","DARKGREEN","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREY","GREEN","GREENYELLOW","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","KHAKI","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREY","LIGHTGREEN","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","NAVY","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","REBECCAPURPLE","RED","ROSYBROWN","ROYALBLUE","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","STEELBLUE","TAN","TEAL","THISTLE","TOMATO","TURQUOISE","VIOLET","WHEAT","WHITE","WHITESMOKE","YELLOW","YELLOWGREEN","SetPropertyQueue","data","useSharedArrayFor","attrName","useBuffer","this","indexOf","shared","buffer","SharedArrayBuffer","Int32Array","BYTES_PER_ELEMENT","values","raw","forEach","index","BUFFER_PRECISION_FACTOR","element","error","storage","e","log","node","location","search","SSVG","options","unassignedNodes","interactionSelections","svgAssignedAndSizeSet","lastTenCanvasDrawTimes","enterExitQueue","safeMode","useWorker","getFps","maxPixelRatio","canvas","document","createElement","worker","onmessage","msg","logDrawn","updateCanvas","raf","updateFps","requestAnimationFrame","captureD3On","svg","setupElementsIfSvgExists","addEventListener","propagateMouseEvent","propagateTouchEvent","lastHovered","hoveredElement","dispatchEvent","MouseEvent","duplicateTouchEvent","propagateWheelEvent","replaceNativeRemoveChild","replaceNativeAttribute","replaceNativePathFunctions","replaceNativeCreateElement","replaceNativeAppendChild","replaceD3Attr","replaceNativeSelect","replaceNativeGetComputedStyle","replaceD3Select","replaceD3Remove","setTimeout","vdom","svgEl","getElementsByTagName","urlConnector","href","svgSwitchUrl","svgSwitchComment","createComment","parent","parentElement","nextSibling","next","insertBefore","appendChild","domHandler","getVDom","setCanvasSize","useAttrQueue","queue","keys","operation","cmd","keepChildren","children","addNode","parentNodeIndex","removeNode","childIndex","parentNodeSelector","sendUpdateToWorker","renderer","updatePropertiesFromQueue","draw","width","height","devicePixelRatio","style","offscreen","transferControlToOffscreen","sendToWorker","visData","ensureNodesMapped","isWithinSvg","parentEl","parentNode","d3","originalOn","selection","on","me","el","_parents","push","arguments","getReplacement","original","_groups","getVisNode","childElements","getVisNodesFromSelector","getElementFromNode","returnValue","childNode","childEl","selectAll","select","origFilter","filter","selectorString","elements","firstElement","getNodeFromElement","nodes","selectors","sel","trim","filteredNodes","matchingNodes","filterNodesBySelector","filteredElements","origGetComputedStyle","getComputedStyle","getPropertyValue","propertyName","origQuerySelector","Element","querySelector","childNodes","globalElementIndex","originalFct","prefix","els","returnVal","getAttributeFromSelector","getElementSelector","getVisNodeFromSelector","child","queueSetAttributeOnElement","queueSetAttributeOnSelection","origSelectionAttr","attr","origSelectionStyle","originalClassed","classed","className","enableFrontendDesignProperties","indexOfParent","parentSelector","getParentNodeFromSelector","prevClassNames","evaluatedValue","__data__","newClassNames","originalTransition","transition","originalText","text","newRemove","getNewRemoveChild","d3Remove","updateChildSelectors","remove","origCreate","createElementNS","newArgs","Array","from","getNewAppendChild","childElement","oldSelector","combineElementSelectors","type","updateNodeSelector","origRemoveChild","skipUpdateSelectors","writable","removeNodeFromParent","removeChild","origAppend","appended","el2","getNodeDataFromEl","setProperty","styleProp","linkNodeToElement","addNodeToParent","splice","origAppendChild","newAppend","newChild","refChild","origGetTotalLength","SVGPathElement","getTotalLength","getAttribute","origSetAttribute","origSetAttr","setAttribute","origSetAttrNS","setAttributeNS","origGetAttr","evt","propagateEvent","createEvent","initEvent","prop","touches","touch","identifier","pageX","pageY","clientX","clientY","WheelEvent","new_event","triggeredElement","interactionSel","j","vdomNode","x","y","getMousePosition","nodeAtPosition","svgChildEl","event","pos","visNode","cx","cy","parseTransform","sqrt","pow","elX","elY","centerX","centerY","distanceX","abs","distanceY","getTotalTransformation","matchAny","Date","now","shift","timeForTenDrawsMs","fps","enterExit","update","postMessage","CSS_STYLES","ignoreDesign","setAttrQueue","nodesToElements","nodesToRestyle","logged","VdomManager","display","addChildNodesToVisData","safeLog","ensureInitialized","set","fetch","origin","then","resp","blob","createImageBitmap","bitmap","styleName","useSharedArray","self","ensureElementIndex","cb","applyStyles","getData","clearData","getRoundedAttr","val","tagName","toLowerCase","id","fill","x1","x2","y1","y2","stroke","textContent","styleSpecificity","kebabCase","obj","propNames","getOwnPropertyNames","propName","clean","styleSheets","sheet","rules","cssRules","rule","selectorText","applyRuleToMatchingNodes","newSelector","selectorPartsLooseStrict","parentsOfInterest","nodeToBeStyled","getNodeParent","getCssRuleSpecificityNumber","setStyle","longName","longSpecName","setValue","checkNode","currentNode","looseIndex","strictIndex","selPart","isCssRulePartialMatch","getNodeSelector","removedClass","removeRuleStylesFromNode","colorToRgba","childEls","localName","elementType","elementIndex","getParentNode","parents","pop","totalTransform","addTransforms","safeLogCount","logContents","indexToNodeMap","cachedListSelections","addToMap","nodeData","getNodeFromIndex","applyParentStyles","JSON","stringify","styleValue","applyStyleToNodeAndChildren","attrNameStart","ATTRIBUTES_NOT_IGNORED_WITH_IGNOREDESIGN","factor","specificityAttrName","matchingSpecificity","updateDeducedStyles","ROUNDED_ATTRS","strokeOpacity","lastSplitPos","lastIndexOf","selectorWithoutLast","lastPart","parentSel","nthChildPosition","selectedNodes","findMatchingChildren","addDirectChildrenIfMatch","matchIndex","selectedNodeSelectors","selParts","findChildrenOfType","matching","cssRuleSelectorPart","newSelPart","searchClassNames","allTrue","searchClassName","indexPart","targetIndex","cutoff","typeName","forceSingle","onDrawn","lastFullSecond","countSinceLastFullSecond","circlesByColor","rectsByColor","drawTexts","drawImages","linesByColor","ctx","getContext","save","restore","clearRect","drawLine","drawCircle","drawRect","drawText","drawImage","drawNodeAndChildren","fullSecond","performance","elData","applyTransform","drawSingleNode","drawFct","handle","getFillStyle","getStrokeStyle","beginPath","fillStyle","strokeStyle","lineWidth","getStrokeWidth","arc","PI","fillAndStrokeColor","fillColor","strokeColor","sampleData","moveTo","fillOpacity","fillOpacityStyle","fillRect","rect","drawSingle","fontFamily","fontSize","convertSizeToPx","font","align","textAlign","dx","dy","fillText","image","strokeWidth","Path2D","lineJoin","textAnchor","lineTo","CanvasWorkerImporter","URL","webkitURL","content","url","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","Blob","Worker","createObjectURL","encodeURIComponent"],"mappings":"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","file":"ssvg-auto.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SSVG\"] = factory();\n\telse\n\t\troot[\"SSVG\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export type Transformation = {\n    translateX: number,\n    translateY: number,\n    scaleX: number,\n    scaleY: number,\n    rotate: number,\n    translateBeforeScale: boolean\n}\n\nexport default class DrawingUtils {\n    static parseTransform(transform: string|{}): Transformation {\n        const transformObject = {translateX: 0, translateY: 0, scaleX: 1, scaleY: 1, rotate: 0, translateBeforeScale: false};\n        \n        if (transform) {\n            if(typeof transform !== \"string\") {\n                transformObject.scaleX = transform['k'];\n                transformObject.scaleY = transform['k'];\n                transformObject.translateX = transform['x'];\n                transformObject.translateY = transform['y'];\n                return transformObject;\n            }\n            let transformString = <string> transform;\n            transformString = transformString.replace(/ /g, '');\n            \n            //let translate  = /translate\\((\\d+),(\\d+)\\)/.exec(transform);\n            const translate = /\\s*translate\\(([-0-9.]+),([-0-9.]+)\\)/.exec(transformString);\n            if (translate) {\n                transformObject.translateX = parseFloat(translate[1]);\n                transformObject.translateY = parseFloat(translate[2]);\n            }\n            else {\n                //console.error('no translate found', transform);\n            }\n            \n            const scale = /\\s*scale\\(([-0-9.]+)(,[-0-9.]+)?\\)/.exec(transformString);\n            if (scale) {\n                transformObject.scaleX = parseFloat(scale[1]);\n                transformObject.scaleY = scale[2] ? parseFloat(scale[2].substr(1)) : parseFloat(scale[1]);\n            }\n            else {\n                //console.error('no scale found', transform);\n            }\n            \n            const rotate = /\\s*rotate\\(([-0-9.]+)\\)/.exec(transformString);\n            if (rotate) {\n                transformObject.rotate = parseFloat(rotate[1]);\n            }\n            else {\n                //console.error('no rotate found', transform);\n            }\n            \n            const translateScale = /\\s*translate\\(([-0-9.]+),([-0-9.]+)\\)scale\\(([-0-9.,]+)\\)/.exec(transformString);\n            if (translateScale) {\n                transformObject.translateBeforeScale = true;\n            }\n            \n            const matrix = /\\s*matrix\\(([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+)\\)/.exec(transformString);\n            if(matrix) {\n                transformObject.scaleX = parseFloat(matrix[1]);\n                // 2 is horizontal skewing\n                // 3 is vertical skewing\n                transformObject.scaleY = parseFloat(matrix[4]);\n                transformObject.translateX = parseFloat(matrix[5]);\n                transformObject.translateY = parseFloat(matrix[6]);\n            }\n        }\n        \n        return transformObject;\n    }\n\n    static addTransforms(transformA: Transformation, transformB: Transformation): Transformation {\n        return {\n            translateX: transformA.translateX + transformB.translateX,\n            translateY: transformA.translateY + transformB.translateY,\n            scaleX: transformA.scaleX * transformB.scaleX,\n            scaleY: transformA.scaleY * transformB.scaleY,\n            rotate: transformA.rotate + transformB.rotate,\n            translateBeforeScale: false\n        };\n        //TODO: consider translateBeforeScale\n    }\n\n    static convertSizeToPx(size: string|number, fallback = true): number|undefined {\n        const defaultValue = fallback ? 14 : undefined;\n        if(size === undefined) {\n            return defaultValue;\n        }\n        if(typeof size === \"number\") {\n            return size;\n        }\n        if(size.substr(-2) === 'em') {\n            return Math.round(parseFloat(size) * 12);\n        }\n        if(size.substr(-2) === 'px') {\n            return parseInt(size);\n        }\n        if(size.match(/^[0-9]+$/)) {\n            return parseInt(size);\n        }\n        console.warn('size in unsupported format: ', size);\n        return defaultValue;\n    }\n    \n    static colorToRgba(color: string|{r: number, g: number, b: number}|{h: number, s: number, l: number},\n                       opacity: string|number = 1,\n                       defaultColor ='none'): string {\n        if(color === 'none') {\n            return color;\n        }\n        if(!color) {\n            return defaultColor;\n        }\n        color = DrawingUtils.CssNamedColorToHex(color);\n        if(opacity === 1 && typeof color === 'string') {\n            return color;\n        }\n        if(typeof color === 'string' && color[0] === '#') {\n            let c; // From https://stackoverflow.com/questions/21646738/convert-hex-to-rgba\n            if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(color)){\n                c = color.substring(1);\n                if(c.length == 3){\n                    c = c[0] + c[0] + c[1] + c[1] + c[2] + c[2];\n                }\n                c = '0x' + c;\n                return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+',' + opacity + ')';\n            }\n            throw new Error('Bad Hex');\n        } else if(typeof color === 'object') {\n            if('r' in color) {\n                return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')';\n            }\n            if('h' in color) {\n                const rgb = DrawingUtils.hslToRgb(color.h / 360, color.s, color.l);\n                return 'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + opacity + ')';\n            }\n        } else if(color.substr(0, 4) === 'rgb(') {\n            return color.substr(0, color.length - 1).replace('rgb','rgba') +\n                ', ' + opacity + ')';\n        }\n        return color;\n    }\n\n    // From https://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\n    static hslToRgb(h, s, l) {\n        var r, g, b;\n\n        if(s == 0){\n            r = g = b = l; // achromatic\n        } else {\n            var hue2rgb = function hue2rgb(p, q, t){\n                if(t < 0) t += 1;\n                if(t > 1) t -= 1;\n                if(t < 1/6) return p + (q - p) * 6 * t;\n                if(t < 1/2) return q;\n                if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n                return p;\n            };\n\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1/3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1/3);\n        }\n\n        return {r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255)};\n    }\n\n    static CssNamedColorToHex(color: any) {\n        if(typeof color === 'string' && COLOR_HEXES[color.toUpperCase()]) {\n            return COLOR_HEXES[color.toUpperCase()];\n        }\n        return color;\n    }\n\n    /**\n     * Basic implementation to get a sense of specificity. Numbers are completely made up.\n     * Should eventually be more sophisticated, e.g. using https://github.com/keeganstreet/specificity.\n     * @param selector CSS rule as string.\n     */\n    static getCssRuleSpecificityNumber(selector: string) {\n        let specificity = 0;\n\n        selector = selector\n            .replace(/ >/g, '>')\n            .replace(/> /g, '>');\n\n        const parts = [].concat.apply([], selector.split(' ')\n            .map(part => part.split('>')));\n\n        // Rough logic: the more stuff, the more specific. IDs and classes are more specific than other things.\n        for(const part of parts) {\n            specificity += 100;\n            const start = part[0];\n\n            if(start === '#') {\n                specificity += 1000;\n            } else if(start === '.') {\n                // More classes are more specific, but never more specific than an ID.\n                const countClasses = part.split('.').length - 1;\n                specificity += Math.min(900, countClasses * 100);\n            }\n        }\n\n        return specificity;\n    }\n}\n\nconst COLOR_HEXES = {\n    ALICEBLUE: '#F0F8FF',\n    ANTIQUEWHITE: '#FAEBD7',\n    AQUA: '#00FFFF',\n    AQUAMARINE: '#7FFFD4',\n    AZURE: '#F0FFFF',\n    BEIGE: '#F5F5DC',\n    BISQUE: '#FFE4C4',\n    BLACK: '#000000',\n    BLANCHEDALMOND: '#FFEBCD',\n    BLUE: '#0000FF',\n    BLUEVIOLET: '#8A2BE2',\n    BROWN: '#A52A2A',\n    BURLYWOOD: '#DEB887',\n    CADETBLUE: '#5F9EA0',\n    CHARTREUSE: '#7FFF00',\n    CHOCOLATE: '#D2691E',\n    CORAL: '#FF7F50',\n    CORNFLOWERBLUE: '#6495ED',\n    CORNSILK: '#FFF8DC',\n    CRIMSON: '#DC143C',\n    CYAN: '#00FFFF',\n    DARKBLUE: '#00008B',\n    DARKCYAN: '#008B8B',\n    DARKGOLDENROD: '#B8860B',\n    DARKGRAY: '#A9A9A9',\n    DARKGREY: '#A9A9A9',\n    DARKGREEN: '#006400',\n    DARKKHAKI: '#BDB76B',\n    DARKMAGENTA: '#8B008B',\n    DARKOLIVEGREEN: '#556B2F',\n    DARKORANGE: '#FF8C00',\n    DARKORCHID: '#9932CC',\n    DARKRED: '#8B0000',\n    DARKSALMON: '#E9967A',\n    DARKSEAGREEN: '#8FBC8F',\n    DARKSLATEBLUE: '#483D8B',\n    DARKSLATEGRAY: '#2F4F4F',\n    DARKSLATEGREY: '#2F4F4F',\n    DARKTURQUOISE: '#00CED1',\n    DARKVIOLET: '#9400D3',\n    DEEPPINK: '#FF1493',\n    DEEPSKYBLUE: '#00BFFF',\n    DIMGRAY: '#696969',\n    DIMGREY: '#696969',\n    DODGERBLUE: '#1E90FF',\n    FIREBRICK: '#B22222',\n    FLORALWHITE: '#FFFAF0',\n    FORESTGREEN: '#228B22',\n    FUCHSIA: '#FF00FF',\n    GAINSBORO: '#DCDCDC',\n    GHOSTWHITE: '#F8F8FF',\n    GOLD: '#FFD700',\n    GOLDENROD: '#DAA520',\n    GRAY: '#808080',\n    GREY: '#808080',\n    GREEN: '#008000',\n    GREENYELLOW: '#ADFF2F',\n    HONEYDEW: '#F0FFF0',\n    HOTPINK: '#FF69B4',\n    INDIANRED: '#CD5C5C',\n    INDIGO: '#4B0082',\n    IVORY: '#FFFFF0',\n    KHAKI: '#F0E68C',\n    LAVENDER: '#E6E6FA',\n    LAVENDERBLUSH: '#FFF0F5',\n    LAWNGREEN: '#7CFC00',\n    LEMONCHIFFON: '#FFFACD',\n    LIGHTBLUE: '#ADD8E6',\n    LIGHTCORAL: '#F08080',\n    LIGHTCYAN: '#E0FFFF',\n    LIGHTGOLDENRODYELLOW: '#FAFAD2',\n    LIGHTGRAY: '#D3D3D3',\n    LIGHTGREY: '#D3D3D3',\n    LIGHTGREEN: '#90EE90',\n    LIGHTPINK: '#FFB6C1',\n    LIGHTSALMON: '#FFA07A',\n    LIGHTSEAGREEN: '#20B2AA',\n    LIGHTSKYBLUE: '#87CEFA',\n    LIGHTSLATEGRAY: '#778899',\n    LIGHTSLATEGREY: '#778899',\n    LIGHTSTEELBLUE: '#B0C4DE',\n    LIGHTYELLOW: '#FFFFE0',\n    LIME: '#00FF00',\n    LIMEGREEN: '#32CD32',\n    LINEN: '#FAF0E6',\n    MAGENTA: '#FF00FF',\n    MAROON: '#800000',\n    MEDIUMAQUAMARINE: '#66CDAA',\n    MEDIUMBLUE: '#0000CD',\n    MEDIUMORCHID: '#BA55D3',\n    MEDIUMPURPLE: '#9370DB',\n    MEDIUMSEAGREEN: '#3CB371',\n    MEDIUMSLATEBLUE: '#7B68EE',\n    MEDIUMSPRINGGREEN: '#00FA9A',\n    MEDIUMTURQUOISE: '#48D1CC',\n    MEDIUMVIOLETRED: '#C71585',\n    MIDNIGHTBLUE: '#191970',\n    MINTCREAM: '#F5FFFA',\n    MISTYROSE: '#FFE4E1',\n    MOCCASIN: '#FFE4B5',\n    NAVAJOWHITE: '#FFDEAD',\n    NAVY: '#000080',\n    OLDLACE: '#FDF5E6',\n    OLIVE: '#808000',\n    OLIVEDRAB: '#6B8E23',\n    ORANGE: '#FFA500',\n    ORANGERED: '#FF4500',\n    ORCHID: '#DA70D6',\n    PALEGOLDENROD: '#EEE8AA',\n    PALEGREEN: '#98FB98',\n    PALETURQUOISE: '#AFEEEE',\n    PALEVIOLETRED: '#DB7093',\n    PAPAYAWHIP: '#FFEFD5',\n    PEACHPUFF: '#FFDAB9',\n    PERU: '#CD853F',\n    PINK: '#FFC0CB',\n    PLUM: '#DDA0DD',\n    POWDERBLUE: '#B0E0E6',\n    PURPLE: '#800080',\n    REBECCAPURPLE: '#663399',\n    RED: '#FF0000',\n    ROSYBROWN: '#BC8F8F',\n    ROYALBLUE: '#4169E1',\n    SADDLEBROWN: '#8B4513',\n    SALMON: '#FA8072',\n    SANDYBROWN: '#F4A460',\n    SEAGREEN: '#2E8B57',\n    SEASHELL: '#FFF5EE',\n    SIENNA: '#A0522D',\n    SILVER: '#C0C0C0',\n    SKYBLUE: '#87CEEB',\n    SLATEBLUE: '#6A5ACD',\n    SLATEGRAY: '#708090',\n    SLATEGREY: '#708090',\n    SNOW: '#FFFAFA',\n    SPRINGGREEN: '#00FF7F',\n    STEELBLUE: '#4682B4',\n    TAN: '#D2B48C',\n    TEAL: '#008080',\n    THISTLE: '#D8BFD8',\n    TOMATO: '#FF6347',\n    TURQUOISE: '#40E0D0',\n    VIOLET: '#EE82EE',\n    WHEAT: '#F5DEB3',\n    WHITE: '#FFFFFF',\n    WHITESMOKE: '#F5F5F5',\n    YELLOW: '#FFFF00',\n    YELLOWGREEN: '#9ACD32'\n};\n\n","import SetPropertyQueueData from \"./set-property-queue-data\";\nimport {VdomNode} from \"./vdom\";\n\nclass CompleteSetPropertyQueueData {\n    'raw': SetPropertyQueueData;\n    'shared': {\n        [attrName: string]: Int32Array\n    };\n}\n\nexport default class SetPropertyQueue {\n    private data: CompleteSetPropertyQueueData = {'raw': {}, 'shared': {}};\n    private useSharedArrayFor = ['cx', 'cy', 'x1', 'x2', 'y1', 'y2', 'x', 'y'];\n    static BUFFER_PRECISION_FACTOR = 10;\n\n    ensureInitialized(attrName: string, useBuffer: boolean) {\n        if(attrName === 'class') {\n            attrName = 'className';\n        }\n\n        if(!useBuffer || this.useSharedArrayFor.indexOf(attrName) === -1) {\n            if(!this.data.raw[attrName]) {\n                this.data.raw[attrName] = [];\n            }\n        } else {\n            if(!this.data.shared[attrName]) {\n                const length = 10000; //Todo use number of elements in vdom\n                const buffer = new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT * length);\n                const values = new Int32Array(buffer);\n\n                // If values have been previously set without a buffer, transfer them.\n                if(this.data.raw[attrName] &&\n                    !(this.data.raw[attrName] instanceof SharedArrayBuffer)) {\n                    const prevData: string[] = <any> this.data.raw[attrName];\n\n                    prevData.forEach((value, index) => {\n                        values[index] = parseFloat(value) * SetPropertyQueue.BUFFER_PRECISION_FACTOR;\n                    });\n                }\n\n                this.data.raw[attrName] = buffer;\n                this.data.shared[attrName] = values;\n            }\n        }\n    }\n\n    set(element: VdomNode|HTMLElement, attrName: string, value: any, useBuffer: boolean) {\n        if(attrName === 'class') {\n            attrName = 'className';\n        }\n        if(element['globalElementIndex'] === undefined) {\n            console.error('No index', element);\n            throw new Error('Element has no index');\n        }\n        const index = element['globalElementIndex'];\n        const storage = useBuffer && this.useSharedArrayFor.indexOf(attrName) !== -1 ? 'shared' : 'raw';\n        try {\n            if(storage === 'shared') {\n                value *= SetPropertyQueue.BUFFER_PRECISION_FACTOR;\n            }\n            this.data[storage][attrName][index] = value;\n        }\n        catch(e) {\n            console.log(e);\n            console.log(this.data, storage, attrName, element, index);\n        }\n    }\n\n    get(node: VdomNode, attrName: string) {\n        const index = node['globalElementIndex'];\n        return this.data.raw[attrName][index];\n    }\n\n    getData() {\n        return this.data.raw;\n    }\n\n    clearData() {\n        this.data = {'raw': {}, 'shared': {}};\n    }\n}\n","import SSVG from \"./ssvg\";\n\nif(!location.search.match(/(\\?|&)svg($|&)/)) {\n    new SSVG();\n}\n\nexport = SSVG;","import {VdomManager} from \"../util/vdom/vdom-manager\";\nimport {VdomNode} from \"../util/vdom/vdom\";\nimport {CanvasWorkerMessage, CanvasUpdateWorkerMessage, CanvasUpdateData} from \"../util/canvas-worker-message\"\nimport Domhandler from \"./domhandler\";\nimport CanvasWorker from \"../canvasworker/canvasworker\";\nimport Canvasrenderer from \"../canvasworker/canvasrenderer\";\nimport DrawingUtils from \"../canvasworker/drawingUtils\";\nimport CanvasWorkerImporter from '../canvasworker';\n\nexport default class SSVG {\n    private unassignedNodes: Node[] = [];\n    private worker: Worker;\n    private domHandler: Domhandler;\n    private vdom: VdomManager;\n    private interactionSelections: HTMLElement[] = [];\n    \n    private renderer: CanvasWorker;\n\n    private svg: SVGElement|undefined;\n    private readonly canvas: HTMLCanvasElement;\n    private svgAssignedAndSizeSet = false;\n    \n    private lastTenCanvasDrawTimes: number[] = [];\n    \n    private enterExitQueue: CanvasUpdateData[] = [];\n\n    private readonly safeMode: boolean = false;\n    private readonly maxPixelRatio: number|undefined;\n    private readonly useWorker: boolean = true;\n    private readonly getFps: (fps: number) => void = () => {};\n\n    private hoveredElement: Element|undefined;\n\n    constructor(options?: {\n        safeMode?: boolean,\n        maxPixelRatio?: number,\n        useWorker?: boolean,\n        getFps?: (fps: number) => void,\n        svg?: SVGElement,\n    }) {\n        if(options) {\n            if(options.safeMode !== undefined) {\n                this.safeMode = options.safeMode;\n            }\n            this.maxPixelRatio = options.maxPixelRatio;\n            if(options.useWorker !== undefined) {\n                this.useWorker = options.useWorker;\n            }\n            if(options.getFps !== undefined) {\n                this.getFps = options.getFps;\n            }\n        }\n\n        this.canvas = document.createElement('canvas');\n        if(!('OffscreenCanvas' in window)) {\n            this.useWorker = false;\n        }\n        \n        if(this.useWorker) {\n            this.worker = new CanvasWorkerImporter();\n    \n            this.worker.onmessage = e => {\n                if(e.data && e.data.msg && e.data.msg === 'DRAWN') {\n                    this.logDrawn();\n                    this.updateCanvas();\n                }\n            };\n            const raf = () => {\n                this.updateFps();\n                requestAnimationFrame(raf);\n            };\n            raf();\n        } else {\n            const raf = () => {\n                this.updateFps();\n                this.logDrawn();\n                this.updateCanvas();\n                requestAnimationFrame(raf);\n            };\n            raf();\n        }\n\n        this.captureD3On();\n        const svg = options && options.svg ? options.svg : undefined;\n        this.setupElementsIfSvgExists(svg);\n        \n        this.canvas.addEventListener('mousedown', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('touchstart', e => this.propagateTouchEvent(e));\n        this.canvas.addEventListener('mousemove', e => {\n            const lastHovered = this.hoveredElement;\n            this.hoveredElement = this.propagateMouseEvent(e);\n            if(lastHovered !== this.hoveredElement) {\n                if(lastHovered) {\n                    lastHovered.dispatchEvent(new MouseEvent('mouseout', e));\n                }\n            }\n            this.propagateMouseEvent(e, 'mouseover');\n        });\n        this.canvas.addEventListener('touchmove', e => {\n            const lastHovered = this.hoveredElement;\n            this.hoveredElement = this.propagateTouchEvent(e);\n            if(lastHovered !== this.hoveredElement) {\n                if(lastHovered) {\n                    lastHovered.dispatchEvent(this.duplicateTouchEvent(e, 'mouseout'));\n                }\n            }\n            this.propagateTouchEvent(e, 'mouseover');\n        });\n        this.canvas.addEventListener('mouseup', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('touchend', e => this.propagateTouchEvent(e));\n        this.canvas.addEventListener('click', e => this.propagateMouseEvent(e));\n        this.canvas.addEventListener('wheel', e => this.propagateWheelEvent(e));\n\n        this.replaceNativeRemoveChild();\n        this.replaceNativeAttribute();\n        this.replaceNativePathFunctions();\n        this.replaceNativeCreateElement();\n        this.replaceNativeAppendChild();\n        this.replaceD3Attr();\n        this.replaceNativeSelect();\n        this.replaceNativeGetComputedStyle();\n        this.replaceD3Select();\n        this.replaceD3Remove();\n\n        setTimeout(() => {\n            console.log(this.vdom.data);\n        }, 1000);\n    }\n    \n    private setupElementsIfSvgExists(svgEl?: SVGElement) {\n        \n        if(this.svg) {\n            return true;\n        }\n\n        const svg = !svgEl ? document.getElementsByTagName('svg')[0] : svgEl;\n        \n        if(!svg) {\n            return false;\n        }\n\n        const urlConnector = document.location.href.indexOf('?') === -1 ? '?' : '&';\n        const svgSwitchUrl = document.location.href + urlConnector + 'svg';\n        const svgSwitchComment = document.createComment(' This project uses SSVG.io to render a SVG as Canvas.\\r\\n' +\n            'To inspect the SVG, please open the following URL:\\r\\n' +\n            svgSwitchUrl + '\\r\\n');\n        \n        this.svg = svg;\n        const parent = this.svg.parentElement;\n\n        if(this.svg.nextSibling) {\n            const next = this.svg.nextSibling;\n            parent.insertBefore(svgSwitchComment, next);\n            parent.insertBefore(this.canvas, next);\n        } else {\n            parent.appendChild(svgSwitchComment);\n            parent.appendChild(this.canvas);\n        }\n\n        this.domHandler = new Domhandler(this.svg, this.useWorker, this.useWorker);\n        this.vdom = this.domHandler.getVDom();\n\n        this.setCanvasSize();\n        \n        return true;\n    }\n    \n    private updateCanvas() {\n        if(!this.svgAssignedAndSizeSet) {\n            return;\n        }\n        if(this.useWorker) {\n            this.domHandler.useAttrQueue(queue => {\n                if(Object.keys(queue).length === 0) {\n                    //requestAnimationFrame(() => this.updateCanvas());\n                    setTimeout(() => this.updateCanvas(), 1);\n                    return;\n                }\n\n                for(let operation of this.enterExitQueue) {\n                    if(operation.cmd === 'ENTER') {\n                        if(!operation.keepChildren) {\n                            operation.node.children = [];\n                        }\n                        this.vdom.addNode(operation.node, operation.parentNodeIndex);\n                    } else if(operation.cmd === 'EXIT') {\n                        this.vdom.removeNode(operation.childIndex, operation.parentNodeSelector);\n                    }\n                }\n                this.sendUpdateToWorker(queue);\n            });\n        } else {\n            this.domHandler.useAttrQueue(queue => {\n                if(this.renderer.updatePropertiesFromQueue) {\n                    this.renderer.updatePropertiesFromQueue(queue);\n                }\n                this.renderer.draw();\n            });\n        }\n    }\n    \n    private setCanvasSize() {\n        if(!this.svg || !this.vdom.data.width || !this.vdom.data.height) {\n            return;\n        }\n        this.vdom.data.scale = window.devicePixelRatio;\n        if(this.maxPixelRatio !== undefined && this.vdom.data.scale > this.maxPixelRatio) {\n            this.vdom.data.scale = this.maxPixelRatio;\n        }\n    \n        this.canvas.style.width = this.vdom.data.width + 'px';\n        this.canvas.style.height = this.vdom.data.height + 'px';\n        this.canvas.width = this.vdom.data.width * this.vdom.data.scale;\n        this.canvas.height = this.vdom.data.height * this.vdom.data.scale;\n        \n        if(this.useWorker) {\n            const offscreen = (this.canvas as any).transferControlToOffscreen();\n            this.sendToWorker({cmd: 'INIT', data: {\n                    canvas: offscreen,\n                    visData: this.vdom.data,\n                    safeMode: this.safeMode\n                }\n            }, [offscreen]);\n            this.vdom.ensureNodesMapped();\n        } else {\n            this.renderer = new Canvasrenderer(this.vdom, this.canvas, this.safeMode, () => {});\n        }\n        \n        this.svgAssignedAndSizeSet = true;\n    }\n\n    private isWithinSvg(element: Element) {\n        let isWithinSvg = false;\n        let parentEl = element;\n\n        while(parentEl && parentEl.parentNode) {\n            if(parentEl === this.svg) {\n                isWithinSvg = true;\n            }\n            parentEl = <Element> parentEl.parentNode;\n        }\n        return isWithinSvg;\n    }\n    \n    private captureD3On() {\n        if((window as any)['d3']) {\n            const d3 = (window as any)['d3'];\n            const originalOn = d3.selection.prototype.on;\n            const me = this;\n\n            d3.selection.prototype.on = function()\n            {\n                let el = this._parents && this._parents.length ? this._parents[0] : this[0].parentNode;\n                if(el === document.children[0]) {\n                    el = me.svg;\n                }\n                let isWithinSvg = me.isWithinSvg(el);\n\n                if(el && isWithinSvg && me.interactionSelections.indexOf(el) === -1)\n                {\n                    me.interactionSelections.push(el); // This one works for native get/setAttribute\n                    //interactionSelections.push(this); // This one works for d3 .attr.\n                }\n        \n                return originalOn.apply(this, arguments);\n            };\n        }\n    }\n    \n    private replaceD3Select() {\n        if((window as any)['d3']) {\n            const me = this;\n            const d3 = (window as any)['d3'];\n\n            const getReplacement = (original) => {\n                return function(selector: string|(()=>{})) {\n                    if(typeof selector === 'string') {\n\n                        let element: HTMLElement|SVGElement;\n                        if(this === d3) {\n                            element = me.svg;\n                        } else {\n                            element = this._groups ? this._groups[0][0] : this[0][0];\n                        }\n\n                        if(!element) {\n                            console.error('no element', this, selector);\n                            return original.apply(this, arguments);\n                        }\n                        const node = me.domHandler.getVisNode(element);\n\n                        if(!node) {\n                            console.warn('node not found', element);\n                            return original.apply(this, arguments);\n                        }\n\n                        const childNodes = me.vdom.getVisNodesFromSelector(node, selector);\n                        const childElements = childNodes.map(node => {\n                            return me.domHandler.getElementFromNode(node);\n                        });\n\n                        const returnValue = original.apply(this, arguments);\n                        const elementsOutsideSvg: NodeList = returnValue._groups ? returnValue._groups[0]\n                            : returnValue[0];\n                        elementsOutsideSvg.forEach(childNode => {\n                            const childEl = <Element> <any> childNode;\n                            if(childElements.indexOf(childEl) === -1) {\n                                childElements.push();\n                            }\n                        });\n\n                        if(returnValue._groups) {\n                            returnValue._groups[0] = childElements;\n                        } else {\n                            // Older d3 versions\n                            const parentNode = returnValue[0].parentNode;\n                            returnValue[0] = childElements;\n                            returnValue[0].parentNode = parentNode;\n                        }\n\n                        return returnValue;\n                    }\n\n                    return original.apply(this, arguments);\n                }\n            };\n\n            d3.selection.prototype.selectAll = getReplacement(d3.selection.prototype.selectAll);\n            d3.selectAll = getReplacement(d3.selectAll);\n            d3.selection.prototype.select = getReplacement(d3.selection.prototype.select);\n            d3.select = getReplacement(d3.select);\n\n            const origFilter = d3.selection.prototype.filter;\n            d3.selection.prototype.filter = function(selectorString: string) {\n                const elements = this._groups ? this._groups[0] : this[0];\n                if(typeof selectorString !== 'string') {\n                    return origFilter.apply(this, arguments);\n                }\n                let firstElement = elements[0];\n                let i = 1;\n                while(!firstElement && i < elements.length) {\n                    i++;\n                    firstElement = elements[i];\n                }\n\n                const parentNode = firstElement ? me.domHandler.getNodeFromElement(firstElement.parentNode) : null;\n                const nodes = elements.map(element => me.domHandler.getNodeFromElement(element));\n\n                const selectors = selectorString.split(',').map(sel => sel.trim());\n                const filteredNodes = [];\n\n                for(const selector of selectors) {\n                    const matchingNodes = me.vdom.filterNodesBySelector(parentNode, nodes, selector);\n\n                    for(const node of matchingNodes) {\n                        if(filteredNodes.indexOf(node) === -1) {\n                            filteredNodes.push(node);\n                        }\n                    }\n                }\n\n                const filteredElements = filteredNodes.map(node => me.domHandler.getElementFromNode(node));\n\n                const returnValue = origFilter.apply(this, arguments);\n\n                if(returnValue._groups) {\n                    returnValue._groups[0] = filteredElements;\n                } else {\n                    // Older d3 versions\n                    const parentNode = returnValue[0].parentNode;\n                    returnValue[0] = filteredElements;\n                    returnValue[0].parentNode = parentNode;\n                }\n                return returnValue;\n            }\n        }\n    }\n\n    private replaceNativeGetComputedStyle() {\n        const origGetComputedStyle = window.getComputedStyle;\n        const me = this;\n\n        window.getComputedStyle = function(element: HTMLElement) {\n            if(element && !me.isWithinSvg(element) && (<Window> <any> element) !== window) {\n                return origGetComputedStyle.call(this, element);\n            }\n\n            const node = me.domHandler.getNodeFromElement(element);\n            if(!node) {\n                console.warn('node not found for ', this, element);\n                return origGetComputedStyle.call(this, element);\n            }\n            return {\n                getPropertyValue(propertyName: string): string {\n                    //console.log(propertyName, node, node.style[propertyName]);\n                    return node.style[propertyName];\n                }\n            } as CSSStyleDeclaration;\n        };\n    }\n\n    private replaceNativeSelect() {\n        const origQuerySelector = Element.prototype.querySelector;\n        const me = this;\n\n        Element.prototype.querySelector = function(selector: string) {\n            if(!me.isWithinSvg(this)) {\n                return origQuerySelector.apply(this, arguments);\n            }\n\n            const node = me.domHandler.getVisNode(this);\n            const childNodes = me.vdom.getVisNodesFromSelector(node, selector);\n            if(childNodes.length === 0) {\n                console.warn('could not find selection', this, node, node.globalElementIndex, selector);\n                return null;\n            }\n            return me.domHandler.getElementFromNode(childNodes[0]);\n        };\n    }\n\n    private replaceD3Attr() {\n\n        const me = this;\n\n        function getReplacement(originalFct, prefix = '') {\n            return function(name, value) {\n                \n                if(value === undefined) {\n\n                    if(me.unassignedNodes.indexOf(this) !== -1) {\n                        return originalFct.apply(this, arguments);\n                    } else {\n                        // Dealing with d3 v3.\n                        const els = this._groups ? this._groups[0] : this[0];\n                        if(els[0] && !me.isWithinSvg(els[0])) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        if(els.length > 1) {\n                            const returnVal = [];\n                            for(const el of els) {\n                                returnVal.push(me.domHandler.getAttributeFromSelector(el, name))\n                            }\n                            return returnVal;\n                        } else {\n                            return me.domHandler.getAttributeFromSelector(els[0], name);\n                        }\n                    }\n                } else {\n                    if(name === 'class' || !me.svg) {\n                        return originalFct.apply(this, arguments);\n                    }\n                    // For d3 v4, this would just be this.groups[0]. The rest is for\n                    // earlier versions, where selectAll() returned other values.\n                    let elements = this._groups ? this._groups[0] : this[0];\n\n                    if(typeof elements === 'object' && Object.keys(elements).length === 1 && elements.parentNode) {\n                        const parentElement = elements.parentNode;\n                        let parentNode: VdomNode;\n                        if(parentElement !== document.children[0]) {\n                            const selector = me.domHandler.getElementSelector(parentElement);\n                            if(selector === null) {\n                                console.error('selector not found', parentElement, elements);\n                                throw Error('selector not found');\n                            }\n                            parentNode = me.vdom.getVisNodeFromSelector(selector);\n                        } else {\n                            parentNode = me.vdom.data;\n                        }\n\n                        elements = [];\n                        for(const child of parentNode.children) {\n                            elements.push(me.domHandler.getElementFromNode(child));\n                        }\n                    }\n                    if(!elements) {\n                        return originalFct.apply(this, arguments);\n                    }\n                    const filteredElements = [];\n                    try {\n                        for (const element of elements) {\n                            if (element) {\n                                filteredElements.push(element);\n                            }\n                        }\n                    } catch(e) {\n                        console.error(elements, this);\n                        console.error(e);\n                    }\n                    if(filteredElements.length === 1) {\n                        const element = filteredElements[0];\n                        if(!element) {\n                            console.warn('element not found', this, name, value);\n                            return this;\n                        }\n                        if(!me.isWithinSvg(element)) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        me.domHandler.queueSetAttributeOnElement(element, prefix + name, value);\n                    } else {\n                        if(!me.isWithinSvg(elements[0])) {\n                            return originalFct.apply(this, arguments);\n                        }\n                        me.domHandler.queueSetAttributeOnSelection(filteredElements, prefix + name, value);\n                    }\n                    \n                    if(filteredElements[0] === me.svg && (name === 'width' || name === 'height')) {\n                        me.vdom.data[name] = parseInt(value);\n                        me.setCanvasSize();\n                    }\n                \n                    return this;\n                }\n            };\n        }\n    \n        if((window as any)['d3']) {\n            const d3 = (window as any)['d3'];\n\n            const origSelectionAttr = d3.selection.prototype.attr;\n            d3.selection.prototype.attr = getReplacement(origSelectionAttr);\n\n            const origSelectionStyle = d3.selection.prototype.style;\n            d3.selection.prototype.style = getReplacement(origSelectionStyle, 'style;');\n\n            const originalClassed = d3.selection.prototype.classed;\n            d3.selection.prototype.classed = function(className: string,\n                                                      value?: boolean|((data: any, index: number) => boolean)) {\n                if(value !== undefined) {\n                    me.domHandler.enableFrontendDesignProperties();\n                    let elements = this._groups ? this._groups[0] : this[0];\n                    let i = 0;\n                    for(let element of elements) {\n                        if(element) {\n                            const indexOfParent = element.childIndex;\n                            const parentSelector = element['parentSelector'];\n                            const parent = me.vdom.getParentNodeFromSelector(parentSelector);\n                            const node = parent.children[indexOfParent];\n                            if(!node) {\n                                console.warn('node not found', element, parent, indexOfParent, className);\n                                continue;\n                            }\n                            const prevClassNames = node.className || '';\n                            const evaluatedValue = typeof value === \"function\" ? value((<any> element).__data__, i) : value;\n                            if(evaluatedValue === true) {\n                                if(prevClassNames.indexOf(className) === -1) {\n                                    let newClassNames = (prevClassNames + ' ' + className).trim();\n\n                                    me.domHandler.queueSetAttributeOnElement(element, 'class', newClassNames);\n                                }\n                            } else if(evaluatedValue === false) {\n                                const containedPreviously = prevClassNames.indexOf(className) !== -1;\n                                if(containedPreviously) {\n                                    const newClassNames = prevClassNames.replace(className, '').replace('  ', ' ');\n                                    me.domHandler.queueSetAttributeOnElement(element, 'class', newClassNames);\n\n                                    if(!node['removedClasses']) {\n                                        node['removedClasses'] = [];\n                                    }\n                                    node['removedClasses'].push(className); // For removing associated styles.\n                                }\n                            }\n                        }\n\n                        i++;\n                    }\n                }\n                return originalClassed.apply(this, arguments);\n            };\n\n            const originalTransition = d3.selection.prototype.transition;\n            d3.selection.prototype.transition = function() {\n                me.domHandler.enableFrontendDesignProperties();\n                return originalTransition.apply(this, arguments);\n            };\n\n            const originalText = d3.selection.prototype.text;\n            d3.selection.prototype.text = function(value?: boolean|((data: any, index: number) => boolean)) {\n                if(value !== undefined) {\n                    let elements = this._groups ? this._groups[0] : this[0];\n                    let i = 0;\n                    for(let element of elements) {\n                        if(element && me.isWithinSvg(element)) {\n                            const evaluatedValue = typeof value === \"function\" ? value((<any> element).__data__, i) : value;\n                            me.domHandler.queueSetAttributeOnElement(element, 'text', evaluatedValue);\n                        }\n\n                        i++;\n                    }\n                }\n                return originalText.apply(this, arguments);\n            };\n        }\n    }\n\n    private replaceD3Remove() {\n        if(window['d3']) {\n            const d3 = window['d3'];\n            const me = this;\n\n            const newRemove = this.getNewRemoveChild(() => {}, true);\n            const d3Remove = function() {\n                let elements = this._groups ? this._groups[0] : this[0];\n\n                if(elements.length) {\n                    let parentElement: HTMLElement = null;\n                    for(let i = elements.length - 1; i > -1; i--) {\n                        const element = elements[i];\n                        if(element) {\n                            parentElement = element.parentNode;\n                            if(!parentElement) {\n                                console.error('element has no parent node', element);\n                            }\n                            newRemove.call(parentElement, element);\n                        }\n\n                    }\n                    if(parentElement) {\n                        me.updateChildSelectors(parentElement);\n                    }\n                }\n                return this;\n            };\n            d3.selection.prototype.remove = d3Remove;\n            //d3.transition.prototype.remove = d3Remove;\n        }\n    }\n    \n    private replaceNativeCreateElement() {\n        const origCreate = document.createElementNS;\n        const me = this;\n        \n        document.createElementNS = function() {\n            let newArgs = Array.from(arguments);\n            const el = origCreate.apply(this, newArgs);\n            \n            /*el.appendChild = () => {\n                console.log('hi!!', el, arguments);\n                //return el;\n            };*/\n    \n            el.appendChild = me.getNewAppendChild(el.appendChild);\n            \n            me.unassignedNodes.push(el);\n    \n            //console.log(me.unassignedNodes);\n            \n            return el;\n        }\n    }\n\n    private updateChildSelectors(parentElement: Element, parentNode?: VdomNode) {\n        const parentSelector = parentElement['selector'];\n        if(!parentSelector) {\n            console.error('this node has no selector', parentElement)\n        }\n        if(!parentNode) {\n            parentNode = this.vdom.getParentNodeFromSelector(parentSelector);\n        }\n        for(let i = 0; i < parentNode.children.length; i++) {\n            const childNode: VdomNode = parentNode.children[i];\n            const childElement = this.domHandler.getElementFromNode(childNode);\n            if(!childElement) {\n                console.error('element not found', childNode, parentNode.children.length, i);\n                continue;\n            }\n            const oldSelector = childElement['selector'];\n\n            childElement['childIndex'] = i;\n            childElement['parentSelector'] = parentSelector;\n            childElement['selector'] = this.domHandler.combineElementSelectors(parentSelector, childNode.type, i+1);\n\n            this.domHandler.updateNodeSelector(oldSelector, childElement['selector']);\n\n            this.updateChildSelectors(childElement, childNode);\n        }\n    }\n\n    private getNewRemoveChild(origRemoveChild: ((<T extends Node>(oldChild: T) => T)|(() => void)),\n        skipUpdateSelectors = false) {\n        const me = this;\n\n        return function<T extends Node>(this: Element, el: T) {\n            if(!this) {\n                console.error('context not defined');\n                return el;\n            }\n            if(!me.isWithinSvg(<Element> <any> el)) {\n                return origRemoveChild.apply(this, arguments);\n            }\n            const parentNode = me.domHandler.getNodeFromElement(<Element> <any> this);\n            const parentSelector = this['selector'];\n            const node = me.domHandler.getNodeFromElement(<Element> <any> el);\n\n            if(!node) {\n                console.error('node not found', node, el, this, parentNode);\n                return origRemoveChild.apply(this, arguments);\n            }\n\n            // Remove all child elements.\n            for(const childNode of node.children) {\n                const childEl = me.domHandler.getElementFromNode(childNode);\n                //el.removeChild(childEl);\n            }\n\n            // Remove from current parent first.\n            Object.defineProperty(el, 'parentNode', {\n                writable: true,\n                value: undefined\n            });\n\n            //console.log('remove')\n            me.enterExitQueue.push({\n                cmd: 'EXIT',\n                childIndex: el['childIndex'],\n                parentNodeSelector: parentSelector\n            });\n\n            me.domHandler.removeNodeFromParent(<Element> <any> el, node);\n\n            // Fix child indices of all children.\n            if(!skipUpdateSelectors) {\n                if(!parentSelector) {\n                    console.error('parent not found', parentNode, parentSelector, this, el);\n                }\n                me.updateChildSelectors(this);\n            }\n\n            delete el['selector'];\n\n            return el;\n        };\n    }\n\n    private replaceNativeRemoveChild() {\n        Element.prototype.removeChild = this.getNewRemoveChild(Element.prototype.removeChild);\n    }\n    \n    private getNewAppendChild(origAppend) {\n        const me = this;\n        \n        return function<T extends Node>(this: Element, el: T) {\n            if(!me.svgAssignedAndSizeSet) {\n                if(!me.svg && el['tagName'] === 'svg') {\n                    const appended = origAppend.apply(this, arguments);\n                    me.setupElementsIfSvgExists(<SVGElement> <any> el);\n                    return appended;\n                    \n                } else {\n                    return origAppend.apply(this, arguments);\n                }\n            }\n            \n            if(!me.isWithinSvg(this)) {\n                return origAppend.apply(this, arguments);\n            }\n\n            Object.defineProperty(el, 'ownerSVGElement', {\n                writable: true,\n                value: me.svg\n            });\n            el['appendChild'] = <T extends Node>(el2: T) => {\n                return me.getNewAppendChild(origAppend).call(el, el2);\n            };\n            const parentSelector = me.domHandler.getElementSelector(this);\n            if(parentSelector === null) {\n                return origAppend.apply(this, arguments);\n            }\n\n            const parentNode = me.domHandler.getNodeFromElement(this);\n            if(!parentNode) {\n                return console.error('parent node not found', parentSelector, this);\n            }\n            let node: VdomNode;\n            let keepChildren = false;\n\n            if(el['parentSelector']) {\n                node = me.domHandler.getVisNode(<Element> <any> el);\n\n                me.getNewRemoveChild(() => {}).call(this, el);\n                keepChildren = true; // If the element is being moved around, keep children.\n            } else {\n                node = me.domHandler.getNodeDataFromEl(<HTMLElement><any> el);\n            }\n\n            (el as any)['parentSelector'] = parentSelector;\n            (el as any)['selector'] = me.domHandler.getElementSelector(<Element><any> el, parentNode);\n            (el as any)['childIndex'] = parentNode.children.length;\n\n            Object.defineProperty(el, 'style', {\n                writable: true,\n                value: {\n                    setProperty: function(styleProp: string, value: string) {\n                        me.domHandler.queueSetAttributeOnElement(el as any, 'style;' + styleProp, value);\n                    },\n                    getPropertyValue: function(styleProp) {\n                        me.domHandler.enableFrontendDesignProperties();\n                        return node.style[styleProp];\n                    }\n                }\n            });\n\n            Object.defineProperty(el, 'parentNode', {\n                writable: true,\n                value: this\n            });\n    \n            me.domHandler.linkNodeToElement(node, el);\n            me.domHandler.addNodeToParent(parentNode, node);\n            me.updateChildSelectors(el as unknown as Element, node);\n            \n            if(me.useWorker) {\n                me.enterExitQueue.push({\n                    cmd: 'ENTER',\n                    node: node,\n                    parentNodeIndex: parentNode.globalElementIndex,\n                    keepChildren: keepChildren\n                });\n            } else {\n                if(me.renderer.addNode) {\n                    me.renderer.addNode(node);\n                }\n            }\n    \n            if(me.unassignedNodes.indexOf(el) !== -1) {\n                const index = me.unassignedNodes.indexOf(el);\n                me.unassignedNodes.splice(index, 1);\n            }\n    \n            return el;\n        };\n    }\n    \n    private replaceNativeAppendChild() {\n        const origAppendChild = Element.prototype.appendChild;\n        const newAppend = this.getNewAppendChild(origAppendChild);\n    \n        Element.prototype.appendChild = newAppend;\n        Element.prototype.insertBefore = function<T extends Node>(newChild: T, refChild: Node|null) {\n    \n            newAppend.call(this, newChild);\n            \n            return newChild;\n        };\n    }\n\n    private replaceNativePathFunctions() {\n        const me = this;\n        //const origGetPointAtLength = SVGPathElement.prototype.getPointAtLength;\n        const origGetTotalLength = SVGPathElement.prototype.getTotalLength;\n\n        /*SVGPathElement.prototype.getPointAtLength = function() {\n            if(me.isWithinSvg(this)) {\n                const d = this.getAttribute('d');\n                me.origSetAttribute.call(this, 'd', d);\n            }\n            return origGetPointAtLength.apply(this, arguments);\n        };*/\n        SVGPathElement.prototype.getTotalLength = function() {\n            if(me.isWithinSvg(this)) {\n                const d = this.getAttribute('d');\n                me.origSetAttribute.call(this, 'd', d);\n            }\n\n            return origGetTotalLength.apply(this, arguments);\n        };\n    }\n\n    private origSetAttribute;\n\n    private replaceNativeAttribute() {\n        const origSetAttr = Element.prototype.setAttribute;\n        this.origSetAttribute = origSetAttr;\n        const origSetAttrNS = Element.prototype.setAttributeNS;\n        const origGetAttr = Element.prototype.getAttribute;\n        const me = this;\n    \n        Element.prototype.setAttribute = function(name: string, value: any) {\n            if(name === 'easypz' || me.unassignedNodes.indexOf(this) !== -1) {\n                // Update the original SVG\n                origSetAttr.apply(this, arguments);\n                return;\n            }\n            if(name === 'class') {\n                origSetAttr.apply(this, arguments);\n            }\n            if(!me.isWithinSvg(this)) {\n                return origSetAttr.apply(this, arguments);\n            }\n            me.domHandler.queueSetAttributeOnElement(this, name, value);\n        };\n        //TODO: Figure out how to access the element when setting a style property.\n        /*CSSStyleDeclaration.prototype.setProperty = function(name: string, value: any) {\n            safeLog(this, arguments);\n            me.elementHandler.queueSetAttributeOnElement(this, 'style;' + name, value);\n        };*/\n        Element.prototype.setAttributeNS = function(name: string, value: any) {\n            if(name === 'easypz' || me.unassignedNodes.indexOf(this) !== -1) {\n                // Update the original SVG\n                origSetAttrNS.apply(this, arguments);\n                return;\n            }\n            if(name === 'class') {\n                origSetAttrNS.apply(this, arguments);\n            }\n            if(!me.isWithinSvg(this)) {\n                return origSetAttrNS.apply(this, arguments);\n            }\n            me.domHandler.queueSetAttributeOnElement(this, name, value);\n        };\n    \n        Element.prototype.getAttribute = function(name) {\n            if(me.unassignedNodes.indexOf(this) !== -1) {\n                return origGetAttr.apply(this, arguments);\n            } else {\n                try {\n                    return me.domHandler.getAttributeFromSelector(this, name);\n                } catch(e) {\n                    console.error(e);\n                    return origGetAttr.apply(this, arguments);\n                }\n            }\n        };\n    }\n    \n    private propagateMouseEvent(evt: MouseEvent, type?: string) {\n        return this.propagateEvent(new MouseEvent(type? type : evt.type, evt));\n    }\n\n    private duplicateTouchEvent(evt: TouchEvent, type?: string) {\n        const e = document.createEvent('TouchEvent');\n        if(!type) {\n            type = evt.type;\n        }\n        e.initEvent(type, true, false);\n        for(const prop in evt) {\n            if(prop !== 'isTrusted' && evt.hasOwnProperty(prop)) {\n                Object.defineProperty(e, prop, {\n                    writable: true,\n                    value: evt[prop],\n                });\n            }\n        }\n        Object.defineProperty(e, 'type', {\n            writable: true,\n            value: type,\n        });\n        const touches = [];\n        for(let i = 0; i < evt.touches.length; i++) {\n            const touch = evt.touches[i];\n            touches.push({identifier: touch.identifier, pageX: touch.pageX, pageY: touch.pageY,\n                clientX: touch.clientX, clientY: touch.clientY});\n        }\n        Object.defineProperty(e, 'touches', {\n            writable: true,\n            value: touches,\n        });\n        return e;\n    }\n\n    private propagateTouchEvent(evt: TouchEvent, type?: string) {\n        return this.propagateEvent(this.duplicateTouchEvent(evt, type));\n    }\n    \n    private propagateWheelEvent(evt: WheelEvent) {\n        return this.propagateEvent(new WheelEvent(evt.type, evt));\n    }\n    \n    private propagateEvent(new_event: MouseEvent|TouchEvent|WheelEvent): undefined|Element {\n        this.svg.dispatchEvent(new_event); // for EasyPZ\n\n        let triggeredElement: undefined|Element;\n\n        for(let interactionSel of this.interactionSelections)\n        {\n            let parentSelector = this.domHandler.getElementSelector(interactionSel);\n            let parentNode = this.vdom.getVisNodeFromSelector(parentSelector);\n            \n            //let matchingVisParent = selectedNodes[i];\n            let j = 1;\n            \n            if(!parentNode) {\n                //console.error(interactionSel, parentSelector, parentNode);\n            } else {\n                for(let vdomNode of parentNode.children)\n                {\n                    const {x, y} = SSVG.getMousePosition(new_event);\n                    let childNode = this.nodeAtPosition(vdomNode, x - 10, y - 10);\n                    if(childNode)\n                    {\n                        //console.log(childNode);\n                        /*let selector = parentSelector + ' > :nth-child(' + j + ')';\n                        let svgEl = this.svg.querySelector(selector);*/\n                        const svgEl = this.domHandler.getElementFromNode(vdomNode);\n                        const svgChildEl = this.domHandler.getElementFromNode(childNode);\n\n                        if(svgChildEl) {\n                            Object.defineProperty(new_event, 'target', {\n                                writable: true,\n                                value: svgChildEl\n                            });\n                        }\n\n                        if(svgChildEl) {\n                            triggeredElement = svgChildEl;\n                            svgChildEl.dispatchEvent(new_event);\n                        }\n\n                        if(svgEl && !triggeredElement) {\n                            triggeredElement = svgEl;\n                            svgEl.dispatchEvent(new_event);\n                        }\n                    }\n                    j++;\n                }\n            }\n        }\n        return triggeredElement;\n    }\n\n    //TODO move this function somewhere else.\n    private static getMousePosition(event: MouseEvent|TouchEvent) : {x: number, y: number}|null\n    {\n        let pos = {x: 0, y: 0};\n\n        if(event.type.substr(0,5) === 'mouse' && event['clientX'])\n        {\n            pos = {x: event['clientX'], y: event['clientY']};\n        }\n        else if(event.type.substr(0,5) === 'touch')\n        {\n            const touches = event['touches'] ? event['touches'] : [];\n            if(touches.length < 1) return null;\n            pos = {x: touches[0].clientX, y: touches[0].clientY};\n        }\n\n        return pos;\n    }\n    \n    private nodeAtPosition(visNode: VdomNode, x: number, y: number): false|VdomNode {\n        if (visNode.type === 'circle') {\n            let cx = visNode.cx || 0;\n            let cy = visNode.cy || 0;\n            if (visNode.transform) {\n                const transform = DrawingUtils.parseTransform(visNode.transform);\n                if (transform.translateX) {\n                    cx += transform.translateX;\n                }\n                if (transform.translateY) {\n                    cy += transform.translateY;\n                }\n            }\n            const distance = Math.sqrt(Math.pow(cx - x, 2) + Math.pow(cy - y, 2));\n            return distance < visNode.r ? visNode : false;\n        } else if(visNode.type === 'rect' || visNode.type === 'image') {\n\n            let elX = visNode.x || 0;\n            let elY = visNode.y || 0;\n            const width = visNode.width;\n            const height = visNode.height;\n\n            if (visNode.transform) {\n                const transform = DrawingUtils.parseTransform(visNode.transform);\n                if (transform.translateX) {\n                    elX += transform.translateX;\n                }\n                if (transform.translateY) {\n                    elY += transform.translateY;\n                }\n            }\n\n            const centerX = elX + width / 2;\n            const centerY = elY + height / 2;\n\n            const distanceX = Math.abs(centerX - x);\n            const distanceY = Math.abs(centerY - y);\n\n            return distanceX < width / 2 && distanceY < height / 2 ? visNode : false;\n\n        } else if(visNode.type === 'g') {\n\n            const transform = this.domHandler.getTotalTransformation(visNode);\n            if(transform.translateX) {\n                x -= transform.translateX;\n            }\n            if(transform.translateY) {\n                y -= transform.translateY;\n            }\n\n            let matchAny: false|VdomNode = false;\n            for(let i = 0; i < visNode.children.length; i++) {\n                if(this.nodeAtPosition(visNode.children[i], x, y)) {\n                    matchAny = visNode.children[i];\n                }\n            }\n            return matchAny;\n        }\n        return false;\n    }\n    \n    private logDrawn() {\n        this.lastTenCanvasDrawTimes.push(Date.now());\n        \n        if(this.lastTenCanvasDrawTimes.length > 100) {\n            this.lastTenCanvasDrawTimes.shift(); // Remove first item\n        }\n    }\n    \n    private updateFps() {\n        if(this.lastTenCanvasDrawTimes.length) {\n            const timeForTenDrawsMs = Date.now() - this.lastTenCanvasDrawTimes[0];\n            const fps = Math.round(this.lastTenCanvasDrawTimes.length / timeForTenDrawsMs * 1000);\n            this.getFps(fps);\n        }\n    }\n\n    private sendUpdateToWorker(queue) {\n        const msg: CanvasUpdateWorkerMessage = {\n            cmd: 'UPDATE_NODES',\n            data: {\n                enterExit: this.enterExitQueue,\n                update: queue,\n            }\n        };\n\n        this.sendToWorker(msg);\n\n        this.enterExitQueue = [];\n    }\n\n    private sendToWorker(msg: CanvasWorkerMessage, data?: any) {\n        this.worker.postMessage(msg, data);\n        //console.log(roughSizeOfObject(msg));\n    }\n}\n\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import {VdomNode, VdomNodeType} from \"../util/vdom/vdom\";\nimport SetPropertyQueue from \"../util/vdom/set-property-queue\";\nimport {VdomManager} from \"../util/vdom/vdom-manager\";\nimport DrawingUtils, {Transformation} from \"../canvasworker/drawingUtils\";\nimport drawingUtils from \"../canvasworker/drawingUtils\";\n\nexport const CSS_STYLES = ['stroke', 'stroke-opacity', 'stroke-width', 'stroke-linejoin',\n    'fill', 'fill-opacity', 'font', 'opacity', 'font-family', 'font-size'];\n\nexport default class Domhandler {\n    private readonly vdom: VdomManager;\n    private setAttrQueue = new SetPropertyQueue();\n    private nodesToElements: { nodes: VdomNode[], elements: Element[]} = { nodes: [], elements: []};\n    private nodesToRestyle: VdomNode[] = [];\n\n    constructor(private svg: SVGElement, useWorker: boolean, private ignoreDesign: boolean) {\n        const visData: any = {\n            width: parseInt(this.svg.getAttribute('width')),\n            height: parseInt(this.svg.getAttribute('height')),\n            scale: 1,\n            children: [],\n            globalElementIndex: 0,\n        };\n\n        this.vdom = new VdomManager(visData, ignoreDesign);\n        this.linkNodeToElement(visData, this.svg);\n        this.svg.style.display = 'none';\n        this.svg['selector'] = 'svg';\n\n        this.addChildNodesToVisData(this.svg.childNodes, this.vdom.data);\n\n        window.setTimeout(() => {\n            // Re-do the styles.\n            this.nodesToRestyle = [];\n            // Can not use this.nodesToRestyle = this.nodesToElements.nodes because this links the object and adding\n            // to this.nodesToRestyle would break the nodesToElements mapping.\n            for(const node of this.nodesToElements.nodes) {\n                this.nodesToRestyle.push(node);\n            }\n        }, 100);\n    }\n\n    enableFrontendDesignProperties() {\n        this.ignoreDesign = false;\n        this.vdom.enableFrontendDesignProperties();\n    }\n    \n    getVDom() {\n        return this.vdom;\n    }\n    \n    queueSetAttributeOnElement(element: Element, attrName: string, value: any) {\n        //TODO: merge with updatePropertiesFromQueue from VdomManager?\n        const parent = element.parentNode;\n        let parentSelector = parent === this.svg ? \"svg\" : (element as any)['parentSelector'] as string;\n        let childIndex = (element as any)['childIndex'];\n    \n        if(!parentSelector && element === this.svg) {\n            parentSelector = 'SVG_PARENT';\n            childIndex = 0;\n        }\n    \n        if(!parentSelector) {\n            safeLog(element, parent);\n            console.error('selector not found');\n            return;\n        }\n\n        if(element === this.svg && attrName.indexOf('style;') === 0) {\n            attrName = attrName.substr('style;'.length);\n        }\n        //attrName = this.checkAttrName(parentSelector, attrName, false);\n        this.setAttrQueue.ensureInitialized(attrName, false);\n\n        const evaluatedValue = typeof value === \"function\" ? value.call(<any> element, (<any> element).__data__, childIndex) : value;\n        //const node = this.getNodeFromElement(element);\n        //this.setAttrQueue.set(node, attrName, evaluatedValue, false);\n        const node = this.getNodeFromElement(element);\n        this.setAttrQueue.set(node, attrName, evaluatedValue, false);\n\n        if(attrName === \"href\") {\n            try {\n                fetch(location.origin + evaluatedValue, {mode: 'cors'})\n                    .then(resp => resp.blob())\n                    .then(blob => createImageBitmap(blob))\n                    .then(bitmap => {\n                        //this.checkAttrName(parentSelector, \"image\", false);\n                        this.setAttrQueue.ensureInitialized(\"image\", false);\n                        this.setAttrQueue[parentSelector][\"image\"][childIndex] = bitmap;\n                    });\n            }\n            catch(e) {console.log(e);}\n        }\n\n        if(attrName === 'class' || attrName.indexOf('style') !== -1) {\n            // Apply classes immediately so styles can be applied correctly.\n\n            if(attrName === 'class') {\n                node.className = evaluatedValue;\n                this.nodesToRestyle.push(node);\n            } else {\n                const styleName = attrName.substr(6);\n                if(!node.style) {\n                    console.error('no styles on node ', node);\n                }\n                node.style[styleName] = evaluatedValue;\n            }\n        }\n    }\n\n    logged = 0;\n    queueSetAttributeOnSelection(elements: (HTMLElement & {__data__: any})[], attrName: string, value) {\n        if(!elements.length) return;\n        if(!elements[0]) {\n            //console.error('selection elements not found', elements);\n            return;\n        }\n        const useSharedArray = 'SharedArrayBuffer' in self;\n\n        let parentElement = elements[0].parentNode;\n        let parentSelector = parentElement === this.svg ? \"svg\" : parentElement['selector'];\n        if(!parentSelector) {\n            safeLog(elements, parentElement);\n            console.error('selector not found');\n        }\n\n        this.setAttrQueue.ensureInitialized(attrName, useSharedArray);\n\n        for(let i = 0; i < elements.length; i++) {\n            const svgEl = elements[i];\n\n            const evaluatedValue = typeof value === \"function\" ? value(svgEl.__data__, i) : value;\n            this.ensureElementIndex(svgEl);\n\n            this.setAttrQueue.set(svgEl, attrName, evaluatedValue, useSharedArray);\n\n            //TODO: re-implement.\n            /*if(attrName === \"href\") {\n                try {\n                    fetch(location.origin + evaluatedValue, {mode: 'cors'})\n                    .then(resp => resp.blob())\n                    .then(blob => createImageBitmap(blob))\n                    .then(bitmap => {\n                        //this.checkAttrName(parentSelector, \"image\", useSharedArray, parentNode);\n                        this.setAttrQueue.ensureInitialized(\"image\", false);\n                        this.setAttrQueue[parentSelector][\"image\"][indexOfParent] = bitmap;\n                    });\n                }\n                catch(e) {console.log(e);}\n            }*/\n        }\n\n        if(attrName === 'className' || attrName.indexOf('style') !== -1) {\n            // Apply classes immediately so styles can be applied correctly.\n            for(let i = 0; i < elements.length; i++) {\n                const node = this.getNodeFromElement(elements[i]);\n                const evaluatedValue = typeof value === \"function\" ? value(elements[i].__data__, i) : value;\n\n                if(attrName === 'className') {\n                    node.className = evaluatedValue;\n                    this.nodesToRestyle.push(node);\n                } else {\n                    const styleName = attrName.substr(6);\n                    node.style[styleName] = evaluatedValue;\n                }\n            }\n        }\n    }\n\n    ensureElementIndex(svgEl: HTMLElement) {\n        if(!svgEl['globalElementIndex']) {\n            const node = this.getNodeFromElement(svgEl);\n            svgEl['globalElementIndex'] = node.globalElementIndex;\n        }\n    }\n\n    useAttrQueue(cb: (data) => void = () => {}) {\n        if(this.nodesToRestyle) {\n            this.applyStyles();\n        }\n\n        const data = this.setAttrQueue.getData();\n        cb(data);\n        this.vdom.updatePropertiesFromQueue(data);\n\n        //this.setAttrQueue = {};\n        this.setAttrQueue.clearData();\n    }\n\n    getAttributeFromSelector(element: Element, name: string) {\n        const node = this.getNodeFromElement(element);\n        \n        if(!node) {\n            console.error('trying to get attribute for unfit selection', node, element, name);\n            throw Error('element not found');\n        }\n        \n        return node[name];\n    }\n    \n    getVisNode(element: Element): VdomNode|null {\n        const selector = this.getElementSelector(element);\n\n        if(selector === null) {\n            return null;\n        }\n        \n        return this.vdom.getVisNodeFromSelector(selector);\n    }\n    \n    getNodeDataFromEl(el: HTMLElement): VdomNode {\n        const getRoundedAttr = (el: Element, attrName: string) => {\n            const val = el.getAttribute(attrName);\n            return val ? parseFloat(val) : null;\n        };\n        \n        const node = {\n            type: el.tagName.toLowerCase() as VdomNodeType,\n            transform: el.getAttribute('transform'),\n            d: el.getAttribute('d'),\n            className: el.getAttribute('class'),\n            id: el.getAttribute('id'),\n            r: getRoundedAttr(el, 'r'),\n            fill: el.getAttribute('fill'),\n            cx: getRoundedAttr(el, 'cx'),\n            cy: getRoundedAttr(el, 'cy'),\n            x: getRoundedAttr(el, 'x'),\n            y: getRoundedAttr(el, 'y'),\n            x1: getRoundedAttr(el, 'x1'),\n            x2: getRoundedAttr(el, 'x2'),\n            y1: getRoundedAttr(el, 'y1'),\n            y2: getRoundedAttr(el, 'y2'),\n            opacity: getRoundedAttr(el, 'opacity'),\n            width: getRoundedAttr(el, 'width'),\n            height: getRoundedAttr(el, 'height'),\n            stroke: el.getAttribute('stroke'),\n            \"stroke-width\": getRoundedAttr(el, 'stroke-width'),\n            text: !el.childNodes || (el.childNodes.length === 1 && !(el.childNodes[0] as HTMLElement).tagName) ? el.textContent : undefined,\n            'font-size': el.getAttribute('font-size'),\n            'font-family': el.getAttribute('font-family'),\n            'font': el.getAttribute('font'),\n            'text-anchor': el.getAttribute('text-anchor'),\n            href: el.getAttribute('href'),\n            style: {},\n            styleSpecificity: {},\n            children: [],\n            globalElementIndex: -1,\n        };\n\n        for(const styleProp in el.style) {\n            if(el.style.hasOwnProperty(styleProp)) {\n                const val = el.style[styleProp];\n                if(val !== '' && typeof el.style[styleProp] !== 'function') {\n                    const kebabCase = styleProp.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n                    node.style[kebabCase] = el.style[styleProp];\n                }\n            }\n        }\n\n        const clean = obj => {\n            const propNames = Object.getOwnPropertyNames(obj);\n            for (let i = 0; i < propNames.length; i++) {\n                const propName = propNames[i];\n                if (obj[propName] === null || obj[propName] === undefined) {\n                    delete obj[propName];\n                }\n            }\n        };\n        \n        clean(node);\n        \n        return node;\n    }\n\n    private applyStyles() {\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            const sheet = document.styleSheets[i] as any;\n            const rules = (sheet.rules ? sheet.rules : sheet.cssRules) as CSSRuleList;\n        \n            for (let j = 0; j < rules.length; j++) {\n                const rule = rules[j] as any;\n                const selector = rule.selectorText as string;\n                if(!selector) {\n                    continue; // Skip @imports etc.\n                }\n                this.applyRuleToMatchingNodes(selector, rule);\n            }\n        }\n\n        this.nodesToRestyle = [];\n    }\n\n    updateNodeSelector(oldSelector: string, newSelector: string) {\n        /*if(oldSelector === newSelector) {\n            return;\n        }\n        if(this.setAttrQueue[newSelector]) {\n            console.warn('having problems rearranging the elements! old:', oldSelector, ', new:', newSelector,\n                this.setAttrQueue[oldSelector], this.setAttrQueue[newSelector]);\n            delete this.setAttrQueue[oldSelector];\n        } else {\n            this.setAttrQueue[newSelector] = this.setAttrQueue[oldSelector];\n            delete this.setAttrQueue[oldSelector];\n        }*/\n    }\n\n    private applyRuleToMatchingNodes(selectorString: string, rule: {style: {[settingName: string]: string}}): boolean {\n        selectorString = selectorString.trim();\n\n        const selector = selectorString\n            .replace(' >', '>')\n            .replace('> ', '>')\n            .replace('svg>', '');\n        \n        const selectorPartsLooseStrict = selector.split(' ')\n            .map(part => part.split('>'));\n\n\n        const parentsOfInterest = [];\n        for(const nodeToBeStyled of this.nodesToRestyle) {\n            let parent = this.getNodeParent(nodeToBeStyled);\n            while(parent && parentsOfInterest.indexOf(parent) === -1) {\n                parentsOfInterest.push(parent);\n                parent = this.getNodeParent(parent);\n            }\n        }\n        const specificity = DrawingUtils.getCssRuleSpecificityNumber(selectorString);\n\n        const setStyle = (styleName: string, rule: {style: {[settingName: string]: string}}, child: VdomNode) => {\n            if(rule.style[styleName]) {\n                const longName = 'style;' + styleName;\n                const longSpecName = 'styleSpecificity;' + styleName;\n                this.setAttrQueue.ensureInitialized(longName, false);\n                this.setAttrQueue.ensureInitialized(longSpecName, false);\n                /*this.checkAttrName(parentSelector, longName);\n                this.checkAttrName(parentSelector, longSpecName);*/\n                let setValue = false;\n\n                if(!this.setAttrQueue.get(child, longName) && !child.style[styleName]) {\n                    setValue = true;\n                } else {\n                    if(child.styleSpecificity[styleName]) {\n                        // If a later rule has the same or higher specificity, apply.\n                        // Hence, later rules override earlier rules.\n                        if(child.styleSpecificity[styleName] <= specificity) {\n                            if(this.setAttrQueue.get(child, longSpecName)) {\n                                setValue = this.setAttrQueue.get(child, longSpecName) <= specificity;\n                            } else {\n                                setValue = true;\n                            }\n                        } else {\n                            setValue = this.setAttrQueue.get(child, longSpecName) <= specificity;\n                        }\n                    } else {\n                        setValue = this.setAttrQueue.get(child, longSpecName) <= specificity;\n                    }\n                }\n\n                if(setValue) {\n                    this.setAttrQueue.set(child, longName, rule.style[styleName], false);\n                    this.setAttrQueue.set(child, longSpecName, specificity, false);\n                    /*this.setAttrQueue[parentSelector][longName][childIndex] = rule.style[styleName];\n                    this.setAttrQueue[parentSelector][longSpecName][childIndex] = specificity;*/\n                }\n            }\n        };\n\n        const checkNode = (currentNode: VdomNode, looseIndex = 0, strictIndex = 0): boolean => {\n            const selPart = selectorPartsLooseStrict[looseIndex][strictIndex];\n\n            for(let childIndex = 0; childIndex < currentNode.children.length; childIndex++) {\n                const child = currentNode.children[childIndex];\n                if(parentsOfInterest.indexOf(child) === -1 && this.nodesToRestyle.indexOf(child) === -1) {\n                    continue;\n                }\n                let partialMatch = VdomManager.isCssRulePartialMatch(selPart, child, currentNode);\n\n                if(partialMatch) {\n                    if(selectorPartsLooseStrict[looseIndex].length > strictIndex + 1) {\n                        checkNode(child, looseIndex, strictIndex + 1);\n                    } else if(selectorPartsLooseStrict.length > looseIndex + 1) {\n                        checkNode(child, looseIndex + 1, strictIndex);\n                    } else {\n                        const parentSelector = this.getNodeSelector(currentNode);\n\n                        for(const styleName of CSS_STYLES) {\n                            setStyle(styleName, rule, child);\n                        }\n                    }\n                } else {\n                    if(child['removedClasses']) {\n                        // temporarily add the class, see if it matches this rule, and if so, un-apply its stuff.\n                        for(const removedClass of child['removedClasses']) {\n                            child.className += ' ' + removedClass;\n\n                            let newPartialMatch = VdomManager.isCssRulePartialMatch(selPart, child, currentNode);\n                            if(newPartialMatch) {\n                                const parentSelector = this.getNodeSelector(currentNode);\n                                this.removeRuleStylesFromNode(parentSelector, child, childIndex, rule);\n                            }\n\n                            child.className = child.className.substr(0, child.className.length -\n                                removedClass.length - 1);\n                        }\n                        setTimeout(() => {\n                            delete child['removedClasses'];\n                        }); // After this frame, reset which classes have been removed.\n                    }\n                    checkNode(child, looseIndex, strictIndex);\n                }\n            }\n            return false;\n        };\n\n        return checkNode(this.vdom.data);\n    }\n\n    removeRuleStylesFromNode(parentSelector: string, child: VdomNode, childIndex: number,\n                             rule: {style: {[settingName: string]: string}}) {\n        if(rule.style['stroke']) {\n            const color = drawingUtils.colorToRgba(rule.style['stroke']);\n            if(child.style['stroke'] === color || child.style['stroke-rgba'] === color) {\n                //this.checkAttrName(parentSelector, 'style;stroke');\n                //this.setAttrQueue[parentSelector]['style;stroke'][childIndex] = '';\n                //this.checkAttrName(parentSelector, 'style;stroke-rgba');\n                //this.setAttrQueue[parentSelector]['style;stroke-rgba'][childIndex] = '';\n\n                this.setAttrQueue.ensureInitialized('style;stroke', false);\n                this.setAttrQueue.ensureInitialized('style;stroke-rgba', false);\n                this.setAttrQueue.set(child, 'style;stroke', '', false);\n                this.setAttrQueue.set(child, 'style;troke-rgba', '', false);\n            }\n        }\n        //TODO remove other styles.\n    }\n\n    removeNodeFromParent(element: Element, node: VdomNode) {\n        const parentSelector = element['parentSelector'];\n        const childIndex = element['childIndex'];\n        this.vdom.removeNode(childIndex, parentSelector);\n        let index = this.nodesToElements.nodes.indexOf(node);\n        if(index === -1) {\n            return console.error('node not found', node);\n        }\n\n        this.nodesToElements.nodes.splice(index, 1);\n        this.nodesToElements.elements.splice(index, 1);\n\n        // Remove all pending changes on this element\n        const selector = element['selector'];\n        delete this.setAttrQueue[selector];\n\n        // Update indices\n        for(let i = index; i < this.nodesToElements.nodes.length; i++) {\n            this.nodesToElements.nodes[i].globalElementIndex = i;\n        }\n\n        for(let attrName in this.setAttrQueue[parentSelector]) {\n            for(let i = childIndex + 1; i < this.setAttrQueue[parentSelector][attrName].length; i++) {\n                this.setAttrQueue[parentSelector][attrName][i-1] = this.setAttrQueue[parentSelector][attrName][i];\n            }\n        }\n    }\n\n    addNodeToParent(parentNode, node) {\n        parentNode.children.push(node);\n        this.nodesToRestyle.push(node);\n    }\n    \n    private addChildNodesToVisData(childEls: HTMLElement[]|NodeList, parentNode: VdomNode): void {\n        const parentEl = this.getElementFromNode(parentNode);\n\n        for(let i  = 0; i < childEls.length; i++) {\n            let el = childEls[i] as HTMLElement;\n            \n            try\n            {\n                const node = this.getNodeDataFromEl(el);\n\n                (el as any)['parentSelector'] = this.getElementSelector(parentEl);\n                (el as any)['selector'] = this.getElementSelector(<Element><any> el);\n                (el as any)['childIndex'] = parentNode.children.length;\n\n                parentNode.children.push(node);\n                this.linkNodeToElement(node, el);\n                this.nodesToRestyle.push(node);\n                \n                if(el.childNodes)\n                {\n                    this.addChildNodesToVisData(el.childNodes, node);\n                }\n                if(node.type === 'tspan')\n                {\n                    //console.log(node, el, el.childNodes, el.textContent);\n                    //console.log(el.childNodes[0])\n                    //console.log(node, style.textAnchor);\n                }\n                if(node.type === 'text')\n                {\n                    //console.log(node, el, el.childNodes, el.textContent);\n                }\n            }\n            catch(e)\n            {\n                //console.log(e);\n                //console.log(el);\n            }\n        }\n    }\n\n    getNodeSelector(node: VdomNode): string {\n        if(node === this.vdom.data) {\n            return 'svg';\n        }\n        const element = this.getElementFromNode(node);\n        if(!element) {\n            console.error('could not find element for node ', node);\n            return '';\n        }\n        return this.getElementSelector(element, undefined, node);\n    }\n    \n    getElementSelector(element: Element, parentNode?: VdomNode, node?: VdomNode): string|null {\n        let sel = (element as any)['selector'];\n        \n        if(sel)\n        {\n            return sel;\n        }\n        else\n        {\n            if(element === this.svg) {\n                sel = 'svg';\n            } else {\n                let parentSelector = (element as any)['parentSelector'] ?\n                    (element as any)['parentSelector'] as string : '';\n\n                if(!parentNode) {\n                    parentNode = this.vdom.getVisNodeFromSelector(parentSelector);\n                }\n                if(!parentNode) {\n                    console.warn('Element not found', element, parentSelector, parentSelector.length, this.vdom.data);\n                    return null;\n                }\n                let index = parentNode.children.length + 1;\n                if(node && parentNode.children.indexOf(node) !== -1) {\n                    index = parentNode.children.indexOf(node) + 1;\n                }\n                let name = element.localName;\n                if (!name) {\n                    console.error(parentNode);\n                    throw Error('name is null');\n                }\n                name = name.toLowerCase();\n                sel = this.combineElementSelectors(parentSelector, name, index);\n            }\n            \n            return sel;\n        }\n    }\n\n    combineElementSelectors(parentSelector: string, elementType: string, childIndex: number) {\n        return parentSelector + ' > ' + elementType + ':nth-child(' + childIndex + ')';\n    }\n\n    getNodeParent(node:VdomNode): VdomNode|null {\n        if(node === this.vdom.data) {\n            return null;\n        }\n        const el = this.getElementFromNode(node);\n        if(!el) {\n            return null;\n        }\n        const parentEl = el.parentNode as Element;\n        return this.getNodeFromElement(parentEl);\n    }\n\n    linkNodeToElement(node: VdomNode, element: Node) {\n        this.nodesToElements.nodes.push(node);\n        node.globalElementIndex = this.nodesToElements.elements.length;\n        this.nodesToElements.elements.push(element as Element);\n    }\n\n    getElementFromNode(node: VdomNode): Element {\n        if(node === this.vdom.data) {\n            return this.svg;\n        }\n        return this.nodesToElements.elements[node.globalElementIndex];\n    }\n\n    getNodeFromElement(element: Element): VdomNode {\n        if(element === this.svg) {\n            return this.vdom.data;\n        }\n        const elementIndex = this.nodesToElements.elements.indexOf(element);\n        return this.nodesToElements.nodes[elementIndex];\n    }\n\n    getParentNode(node: VdomNode): VdomNode|null {\n        const element = this.getElementFromNode(node);\n        const parentElement = element.parentNode as Element;\n        return this.getNodeFromElement(parentElement);\n    }\n\n    getTotalTransformation(node: VdomNode): Transformation {\n        let parent = this.getParentNode(node);\n        const parents = [node];\n\n        while(parent) {\n            parents.push(parent);\n            parent = this.getParentNode(parent);\n        }\n\n        parent = parents.pop();\n        let totalTransform: Transformation = {\n            translateX: 0,\n            translateY: 0,\n            scaleX: 0,\n            scaleY: 0,\n            rotate: 0,\n            translateBeforeScale: false\n        };\n\n        while(parent) {\n            const transform = DrawingUtils.parseTransform(parent.transform);\n            totalTransform = DrawingUtils.addTransforms(totalTransform, transform);\n            parent = parents.pop();\n        }\n\n        return totalTransform;\n    }\n}\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import DrawingUtils from \"../../canvasworker/drawingUtils\";\nimport SetPropertyQueueData from \"./set-property-queue-data\";\nimport {VDOM, VdomNode} from \"./vdom\";\nimport SetPropertyQueue from \"./set-property-queue\";\n\nexport class VdomManager {\n\n    private static ATTRIBUTES_NOT_IGNORED_WITH_IGNOREDESIGN = ['fill', 'stroke', 'opacity', 'x1', 'x2', 'y1', 'y2', 'x',\n        'y'];\n    private indexToNodeMap: {[index: number]: VdomNode} = {};\n    \n    constructor(public data: VDOM, private ignoreDesign: boolean) {\n        this.ensureNodesMapped();\n    }\n\n    ensureNodesMapped() {\n        const addToMap = (node: VdomNode) => {\n            if(node.globalElementIndex === undefined) {\n                console.error('no element index', node);\n            }\n            this.indexToNodeMap[node.globalElementIndex] = node;\n            for(const child of node.children) {\n                addToMap(child);\n            }\n        };\n        addToMap(this.data);\n    }\n\n    enableFrontendDesignProperties() {\n        this.ignoreDesign = false;\n    }\n    \n    addNode(nodeData: VdomNode, parentNodeIndex: number) {\n        let parentNode = this.getNodeFromIndex(parentNodeIndex);\n        if(!parentNode) {\n            console.error('could not add node without parent', parentNodeIndex, nodeData, JSON.stringify(Object.keys(this.indexToNodeMap)));\n            new Error('parent not found');\n            return;\n        }\n        this.applyParentStyles(parentNode, nodeData);\n        \n        parentNode.children.push(nodeData);\n        this.indexToNodeMap[nodeData.globalElementIndex] = nodeData;\n        return nodeData;\n    }\n\n    removeNode(childIndex: number, parentNodeSelector: string) {\n        let parentNode = this.getVisNodeFromSelector(parentNodeSelector);\n        if(!parentNode) {\n            if(parentNodeSelector === \"\") {\n                parentNode = this.data;\n            } else {\n                console.error(parentNode, parentNodeSelector);\n            }\n        }\n\n        parentNode.children.splice(childIndex, 1);\n        this.cachedListSelections = {}; //TODO only remove relevant cache.\n    }\n\n    applyParentStyles(parentNode: VdomNode, childNode: VdomNode) {\n        for(const style in parentNode.style) {\n            if(!childNode.style[style]) {\n                childNode.style[style] = parentNode.style[style];\n            }\n        }\n    }\n    \n    getParentNodeFromSelector(parentSelector: string) {\n        if(!parentSelector) {\n            console.error('no parent selector', parentSelector);\n        }\n        //if(setAttrQueue.hasOwnProperty(parentSelector)) {\n        let parentNode;\n        if(parentSelector === 'SVG_PARENT') {\n            parentNode = {children: [this.data]};\n        } else {\n            parentNode = this.getVisNodeFromSelector(parentSelector);\n        }\n        if(!parentNode) {\n            console.error('parent node not found with selector', parentSelector);\n        }\n        return parentNode;\n    }\n\n    applyStyleToNodeAndChildren(node: VdomNode, styleName: string, styleValue: string, specificity: number) {\n        if(!node['styleSpecificity'][styleName] || node['styleSpecificity'][styleName] <= specificity) {\n            node['style'][styleName] = styleValue;\n            node['styleSpecificity'][styleName] = specificity;\n        }\n\n        if(node.children) {\n            for(let child of node.children) {\n                this.applyStyleToNodeAndChildren(child, styleName, styleValue, specificity);\n            }\n        }\n    }\n\n    private getNodeFromIndex(index: number): VdomNode {\n        return this.indexToNodeMap[index];\n    }\n\n    private static ROUNDED_ATTRS = ['cx', 'cy'];\n\n    updatePropertiesFromQueue(setAttrQueue: SetPropertyQueueData) {\n                \n        for(let attrName in setAttrQueue) {\n            if(!setAttrQueue.hasOwnProperty(attrName)) {\n                continue;\n            }\n            const attrNameStart = attrName.substr(0, 'style;'.length);\n\n            if(this.ignoreDesign && (attrNameStart === 'style;' ||\n                VdomManager.ATTRIBUTES_NOT_IGNORED_WITH_IGNOREDESIGN.indexOf(attrName) !== -1)) {\n                continue;\n            }\n\n            let values: string[]|Int32Array;\n            let factor: number|undefined;\n\n            if('SharedArrayBuffer' in self &&\n                setAttrQueue[attrName] instanceof SharedArrayBuffer) {\n                values = new Int32Array(<ArrayBuffer> setAttrQueue[attrName]);\n                factor = 1 / SetPropertyQueue.BUFFER_PRECISION_FACTOR;\n            } else {\n                values = setAttrQueue[attrName] as string[];\n            }\n\n            for(let childIndex in values) {\n                // This skips all values that are 0 because the SharedArrayBuffer fills up with zeros.\n                //TODO(michaschwab): Find a solution for zero values.\n                if(!values.hasOwnProperty(childIndex)) {\n                    continue;\n                }\n                if(values[childIndex] === 0) {\n                    continue;\n                }\n                const index = parseInt(childIndex);\n                const childNode = this.getNodeFromIndex(index);\n                if(!childNode) {\n                    continue;\n                }\n                let value = factor ? factor * <number> values[childIndex] : values[childIndex];\n                if(attrNameStart === 'style;') {\n                    const styleName = attrName.substr('style;'.length);\n                    const specificityAttrName = 'styleSpecificity;' + styleName;\n                    try {\n                        const matchingSpecificity: number = setAttrQueue[specificityAttrName][childIndex];\n                        this.applyStyleToNodeAndChildren(childNode, styleName, <string> value, matchingSpecificity);\n                        this.updateDeducedStyles(childNode, styleName, <string> value);\n                    } catch (e) {\n                        console.error(setAttrQueue, specificityAttrName, childIndex);\n                        this.applyStyleToNodeAndChildren(childNode, styleName, <string> value, -1);\n                    }\n\n                } else {\n                    if(VdomManager.ROUNDED_ATTRS.indexOf(attrName) !== -1) {\n                        value = Math.round(<number> value);\n                    }\n                    childNode[attrName] = value;\n                    this.updateDeducedStyles(childNode, attrName, <string> value);\n                }\n            }\n        }\n    }\n\n    updateDeducedStyles(node: VdomNode, attrName: string, value: string) {\n        if(['opacity', 'fill-opacity', 'stroke-opacity', 'stroke', 'fill'].indexOf(attrName) !== -1) {\n            let stroke = node.style.stroke ? node.style.stroke : node.stroke;\n            if(stroke) {\n                let strokeOpacity = node.style['stroke-opacity'] === undefined ? node.style['opacity']\n                    : node.style['stroke-opacity'];\n                if(strokeOpacity === undefined) {\n                    strokeOpacity = node['stroke-opacity'] === undefined ? node['opacity'] : node['stroke-opacity'];\n                }\n\n                node.style['stroke-rgba'] = DrawingUtils.colorToRgba(stroke, strokeOpacity);\n            }\n        }\n    }\n    \n    private cachedListSelections: {[selector: string]: {[index: number]: VdomNode}} = {};\n    public getVisNodeFromSelector(selector: string): VdomNode|null {\n        const lastSplitPos = selector.lastIndexOf('>');\n        const selectorWithoutLast = selector.substr(0, lastSplitPos);\n        const lastPart = selector.substr(lastSplitPos + 1);\n        const parentSel = selectorWithoutLast ? this.cachedListSelections[selectorWithoutLast] : null;\n        let index = -1;\n        const nthChildPosition = lastPart.indexOf(':nth-child(');\n        if(nthChildPosition !== -1) {\n            index = parseInt(lastPart.substr(nthChildPosition + 11)); // length of ':nth-child('\n            if(parentSel && parentSel[index]) {\n                return parentSel[index];\n            }\n        }\n        \n        const selectedNodes: VdomNode[] = [];\n        this.findMatchingChildren(this.data, selector, 0, selectedNodes);\n        \n        if(selectedNodes && selectedNodes.length === 1) {\n            const el = selectedNodes[0];\n            if(index !== -1) {\n                if(!this.cachedListSelections[selectorWithoutLast]) {\n                    this.cachedListSelections[selectorWithoutLast] = {};\n                }\n                this.cachedListSelections[selectorWithoutLast][index] = el;\n            }\n            return el;\n        }\n        return null;\n    }\n    \n    public getVisNodesFromSelector(visNode: VdomNode, selector: string) {\n        const selectedNodes = [];\n        this.findMatchingChildren(visNode, selector, 0, selectedNodes);\n        return selectedNodes;\n    }\n\n    private findChildrenOfType(visNode: VdomNode, type: string, selectedNodes: VdomNode[]) {\n        const addDirectChildrenIfMatch = (node: VdomNode) => {\n            for(const child of node.children) {\n                if(child.type === type) {\n                    selectedNodes.push(child);\n                }\n                if(node.children.length !== 0) {\n                    addDirectChildrenIfMatch(child);\n                }\n            }\n        };\n        addDirectChildrenIfMatch(visNode);\n    }\n\n    public filterNodesBySelector(parentNode: VdomNode, nodes: VdomNode[], selector: string) {\n        return nodes.filter(node => VdomManager.isCssRulePartialMatch(selector, node, parentNode));\n    }\n    \n    private findMatchingChildren(visNode: VdomNode, selector: string, matchIndex: number, selectedNodes: VdomNode[],\n                                 selectedNodeSelectors: string[] = []) {\n        if(!selector && selector !== '') {\n            console.error(visNode, selector, matchIndex, selectedNodes, selectedNodeSelectors);\n            throw Error('undefined selector');\n        }\n\n        let selParts = selector.split('>').map(s => s.trim());\n        let selPart = selParts[matchIndex];\n        \n        if(matchIndex === 0 && selPart === 'svg') {\n            matchIndex++;\n            selPart = selParts[matchIndex];\n            if(matchIndex === selParts.length) {\n                selectedNodes.push(visNode);\n                selectedNodeSelectors.push(selector);\n                return;\n            }\n        }\n\n        if(selector.match(/^[a-z]+$/)) {\n            return this.findChildrenOfType(visNode, selector, selectedNodes);\n        }\n        \n        for(let i = 0; i < visNode.children.length; i++) {\n            let node = visNode.children[i];\n            let matching = false;\n            \n            if(VdomManager.isCssRulePartialMatch(selPart, node, visNode)) {\n                if(matchIndex === selParts.length - 1) {\n                    selectedNodes.push(node);\n                    selectedNodeSelectors.push(selector);\n                } else {\n                    matching = true;\n                }\n            }\n            \n            if(node.children && (matching || selParts.length < 2) && matchIndex + 1 < selParts.length) {\n                this.findMatchingChildren(node, selector, matchIndex + 1, selectedNodes, selectedNodeSelectors);\n            }\n        }\n    }\n\n    public static isCssRulePartialMatch(cssRuleSelectorPart: string, node: VdomNode, parentNode: VdomNode): boolean {\n        if(cssRuleSelectorPart.substr(0, 5) === ':not(') {\n            const newSelPart = cssRuleSelectorPart.substr(0, cssRuleSelectorPart.length - 1).substr(5);\n            return !VdomManager.isCssRulePartialMatch(newSelPart, node, parentNode);\n        }\n        if(cssRuleSelectorPart[0] === '.') { // Example: .className or .classnameA.classnameB\n            const searchClassNames = cssRuleSelectorPart.split('.');\n            searchClassNames.shift(); // remove empty first string.\n            if(node.className) {\n                let allTrue = true;\n                for(const searchClassName of searchClassNames) {\n                    if(node.className.split(' ').indexOf(searchClassName) === -1) {\n                        allTrue = false;\n                    }\n                }\n                return allTrue;\n            }\n        } else if(cssRuleSelectorPart[0] === '#') { // Example: #id\n            if(cssRuleSelectorPart.substr(1) === node.id) {\n                return true;\n            }\n        } else if(cssRuleSelectorPart.match(/^[a-z]+$/)) { // Example: rect\n            if(cssRuleSelectorPart === node.type) {\n                return true;\n            }\n        } else if(cssRuleSelectorPart.indexOf(':nth-child(') !== -1) {\n            let type = 'any';\n            let indexPart = cssRuleSelectorPart;\n\n            if(cssRuleSelectorPart[0] !== ':') {\n                type = cssRuleSelectorPart.substr(0, cssRuleSelectorPart.indexOf(':'));\n                indexPart = cssRuleSelectorPart.substr(cssRuleSelectorPart.indexOf(':'));\n            }\n\n            const targetIndex = parseInt(indexPart.substr(':nth-child('.length));\n            const index = parentNode.children.indexOf(node);\n\n            return (index === targetIndex - 1 && (type === 'any' || node.type === type));\n        }\n        else if(cssRuleSelectorPart.indexOf('.') !== -1) { // Example: rect.className\n            const cutoff = cssRuleSelectorPart.indexOf('.');\n            const typeName = cssRuleSelectorPart.substr(0, cutoff);\n            const className = cssRuleSelectorPart.substr(cutoff + 1);\n            if(typeName === node.type && node.className && node.className.split(' ').indexOf(className) !== -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}","import {VdomNode} from \"../util/vdom/vdom\";\nimport {VdomManager} from \"../util/vdom/vdom-manager\";\nimport DrawingUtils from \"./drawingUtils\";\nimport CanvasWorker from \"./canvasworker\";\n\ntype DrawMode = 'start'|'normal'|'end'|'forcesingle';\n\nexport default class Canvasrenderer implements CanvasWorker {\n    \n    private ctx: CanvasRenderingContext2D;\n    \n    constructor(private vdom: VdomManager, private canvas: HTMLCanvasElement,\n                private forceSingle = false, private onDrawn = () => {}) {\n        const ctx = canvas.getContext('2d');\n        if(!ctx) throw new Error('could not create canvas context');\n        \n        this.ctx = ctx;\n        this.ctx.scale(this.vdom.data.scale, this.vdom.data.scale);\n        this.ctx.save();\n        \n        this.draw();\n        \n        setTimeout(() => {\n            console.log(this.forceSingle, this.vdom.data);\n            this.draw();\n        }, 1000);\n    }\n    \n    private lastFullSecond = 0;\n    private countSinceLastFullSecond = 0;\n    \n    draw() {\n        const ctx = this.ctx;\n        \n        ctx.restore();\n        ctx.save();\n        \n        //ctx.fillStyle = '#fff';\n        //ctx.fillRect(0, 0, this.vdom.data.width, this.vdom.data.height);\n        ctx.clearRect(0, 0, this.vdom.data.width, this.vdom.data.height);\n    \n        //this.lastDrawn = null;\n        this.drawLine(null, 'start');\n        this.drawCircle(null, 'start');\n        this.drawRect(null, 'start');\n        this.drawText(null, 'start');\n        this.drawImage(null, 'start');\n\n        this.drawNodeAndChildren(this.vdom.data, this.forceSingle);\n\n        this.drawLine(null, 'end');\n        this.drawCircle(null, 'end');\n        this.drawRect(null, 'end');\n        this.drawText(null, 'end');\n        this.drawImage(null, 'end');\n        \n        this.onDrawn();\n    \n        const fullSecond = Math.round(performance.now() / 1000);\n        if(fullSecond !== this.lastFullSecond) {\n            this.lastFullSecond = fullSecond;\n            //console.log(this.countSinceLastFullSecond);\n            this.countSinceLastFullSecond = 0;\n        }\n        this.countSinceLastFullSecond++;\n    }\n    \n    private drawNodeAndChildren(elData: VdomNode, forceSingle: boolean) {\n        const ctx = this.ctx;\n\n        ctx.save();\n        const hasTransformed = this.applyTransform(elData.transform);\n\n        if(elData.transform) {\n            forceSingle = true;\n        }\n        \n        if(elData.type && elData.type !== 'g' && (!elData.style.display || elData.style.display !== 'none')) {\n            if(elData.type === 'title') {\n                return;\n            }\n            \n            if(!forceSingle) {\n                /*if(!this.lastDrawn || (this.lastDrawn && this.lastDrawn.type !== elData.type)) {\n                    if(this.lastDrawn) {\n                        this.drawSingleNode(this.lastDrawn, 'end');\n                    }\n                    this.drawSingleNode(elData, 'start');\n                }*/\n    \n                this.drawSingleNode(elData);\n            } else {\n                this.drawSingleNode(elData, 'forcesingle');\n            }\n            \n            //this.lastDrawn = elData;\n        }\n        \n        if(elData.children) {\n            for(let i = 0; i < elData.children.length; i++) {\n                this.drawNodeAndChildren(elData.children[i], forceSingle);\n            }\n        }\n        ctx.restore();\n        if(hasTransformed) {\n            //ctx.restore();\n        }\n    }\n    \n    private drawSingleNode(elData: VdomNode, mode: DrawMode = 'normal') {\n        const type: string = elData.type;\n        const drawFct = this['draw' + type.substr(0,1).toUpperCase() + type.substr(1)];\n        if(!drawFct) {\n            return console.error('no draw function yet for ', type);\n        }\n        drawFct.call(this, elData, mode);\n    }\n\n    private drawClippath(elData: VdomNode) {\n        console.warn('clippaths can not be rendered yet.')\n    }\n    \n    private circlesByColor: {[color: string]: VdomNode[]} = {};\n    private drawCircle(elData: VdomNode, mode: DrawMode = 'normal') {\n        if(mode === 'normal') {\n            let fill = this.getFillStyle(elData, '#000');\n            const stroke = this.getStrokeStyle(elData);\n            const handle = fill + ';' + stroke;\n            if(!this.circlesByColor[handle]) {\n                this.circlesByColor[handle] = [];\n            }\n            this.circlesByColor[handle].push(elData);\n        }\n        if(mode === 'start') {\n            this.circlesByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            for(let fillAndStrokeColor in this.circlesByColor) {\n                if(this.circlesByColor.hasOwnProperty(fillAndStrokeColor)) {\n                    const split = fillAndStrokeColor.split(';');\n                    const fillColor = split[0];\n                    const strokeColor = split[1];\n\n                    this.ctx.fillStyle = fillColor;\n                    let sampleData = this.circlesByColor[fillAndStrokeColor][0];\n                    const lineWidth = this.getStrokeWidth(sampleData);\n                    this.ctx.lineWidth = lineWidth !== undefined ? lineWidth : 1;\n                    this.ctx.strokeStyle = strokeColor;\n\n                    this.ctx.beginPath();\n                    for(let elData of this.circlesByColor[fillAndStrokeColor]) {\n                        const cx = elData.cx ? elData.cx : 0;\n                        const cy = elData.cy ? elData.cy : 0;\n                        const r = elData.r;\n                        this.ctx.save();\n                        this.applyTransform(elData.transform);\n                        this.ctx.moveTo(cx + r, cy);\n                        this.ctx.arc(cx, cy, r, 0, 2 * Math.PI);\n                        this.ctx.restore();\n                        //this.ctx.restore();\n                    }\n\n                    if(fillColor !== 'none'){\n                        this.ctx.fill();\n                    }\n\n                    if(sampleData.style['stroke-rgba'] && sampleData.style['stroke-rgba'] !== 'none') {\n                        this.ctx.stroke();\n                    }\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            let fill = this.getFillStyle(elData, '#000');\n\n            const cx = elData.cx || 0;\n            const cy = elData.cy || 0;\n\n            this.ctx.beginPath();\n            this.ctx.fillStyle = fill;\n            this.ctx.strokeStyle = this.getStrokeStyle(elData);\n            this.ctx.lineWidth = this.getStrokeWidth(elData);\n            this.ctx.arc(cx, cy, elData.r, 0, 2 * Math.PI);\n            if(fill !== 'none'){\n                this.ctx.fill();\n            }\n\n            if(elData.style['stroke-rgba'] && elData.style['stroke-rgba'] !== 'none') {\n                this.ctx.stroke();\n            }\n        }\n    }\n\n    private getFillStyle(node: VdomNode, defaultColor = 'none'): string {\n        let fill = node.style.fill ? node.style.fill : node.fill;\n        let opacity = node.opacity;\n        if(node.style['fill-opacity']) {\n            opacity = parseFloat(node.style['fill-opacity']);\n        }\n        if(node.style['opacity']) {\n            opacity = parseFloat(node.style['opacity']);\n        }\n        fill = DrawingUtils.colorToRgba(fill, opacity, defaultColor);\n        return fill;\n    }\n\n    private getStrokeStyle(node: VdomNode): string {\n        if(node.style['stroke-rgba']) {\n            return node.style['stroke-rgba'];\n        }\n        let stroke = node.style.stroke ? node.style.stroke : node.stroke;\n        if(stroke !== undefined) {\n            let strokeOpacity = node.style['stroke-opacity'] === undefined ? node.style['opacity']\n                : node.style['stroke-opacity'];\n            if(strokeOpacity === undefined) {\n                strokeOpacity = node['stroke-opacity'] === undefined ? node['opacity'] : node['stroke-opacity'];\n            }\n\n            node.style['stroke-rgba'] = DrawingUtils.colorToRgba(stroke, strokeOpacity);\n            return node.style['stroke-rgba'];\n        }\n        return 'none';\n    }\n\n    private getStrokeWidth(node: VdomNode) {\n        const width = node.style['stroke-width'] !== undefined ? node.style['stroke-width'] : node['stroke-width'];\n        return width === undefined ? undefined : parseFloat(width);\n    }\n\n    private rectsByColor = {};\n\n    private drawRect(elData: VdomNode, mode: DrawMode = 'normal') {\n\n        if(mode === 'normal') {\n            let fill = elData.style.fill ? elData.style.fill : elData.fill;\n            let fillOpacity = elData['fill-opacity'] ? elData['fill-opacity'] : elData['opacity'];\n            let fillOpacityStyle = elData.style['fill-opacity'] ? elData.style['fill-opacity'] : elData.style['opacity'];\n\n            if(fillOpacityStyle !== undefined) {\n                fillOpacity = fillOpacityStyle;\n            }\n\n            //if(!fill) fill = '#000';\n            const fillRgba = DrawingUtils.colorToRgba(fill, fillOpacity);\n            const stroke = this.getStrokeStyle(elData);\n            const handle = fillRgba + ';' + stroke;\n            if(!this.rectsByColor[handle]) {\n                this.rectsByColor[handle] = [];\n            }\n            this.rectsByColor[handle].push(elData);\n        }\n        if(mode === 'start') {\n            this.rectsByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            for(let fillAndStrokeColor in this.rectsByColor) {\n                if(this.rectsByColor.hasOwnProperty(fillAndStrokeColor)) {\n                    const split = fillAndStrokeColor.split(';');\n                    const fillColor = split[0];\n                    const strokeColor = split[1];\n                    this.ctx.fillStyle = fillColor;\n\n                    let sampleData = this.rectsByColor[fillAndStrokeColor][0];\n                    const lineWidth = this.getStrokeWidth(sampleData);\n                    this.ctx.lineWidth = lineWidth !== undefined ? lineWidth : 1;\n                    this.ctx.strokeStyle = strokeColor;\n\n                    this.ctx.beginPath();\n                    for(let elData of this.rectsByColor[fillAndStrokeColor]) {\n                        const x = elData.x ? elData.x : 0;\n                        const y = elData.y ? elData.y : 0;\n                        this.ctx.save();\n                        this.applyTransform(elData.transform);\n                        this.ctx.moveTo(x, y);\n                        this.ctx.rect(x, y, elData.width, elData.height);\n                        this.ctx.restore();\n                        //this.ctx.restore();\n                    }\n                    if(fillColor !== 'none'){\n                        this.ctx.fill();\n                    }\n\n                    if(sampleData.style['stroke-rgba'] && sampleData.style['stroke-rgba'] !== 'none') {\n                        this.ctx.stroke();\n                    }\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            let fill = elData.style.fill ? elData.style.fill : elData.fill;\n            if(fill) {\n                fill = DrawingUtils.colorToRgba(fill, elData.style['fill-opacity']);\n            }\n\n            if(fill && fill !== 'none') {\n                this.ctx.fillStyle = elData.style.fill ? elData.style.fill : elData.fill;\n                this.ctx.fillRect(elData.x, elData.y, elData.width, elData.height);\n            }\n\n            let stroke = elData.style.stroke ? elData.style.stroke : elData.stroke;\n            if(stroke !== undefined) {\n                stroke = DrawingUtils.colorToRgba(stroke, elData.style['stroke-opacity']);\n                this.ctx.strokeStyle = stroke;\n                this.ctx.beginPath();\n                this.ctx.rect(elData.x, elData.y, elData.width, elData.height);\n                this.ctx.stroke();\n            }\n        }\n    }\n\n    private drawTexts: VdomNode[] = [];\n\n    private drawText(node: VdomNode, mode: DrawMode = 'normal') {\n        const drawSingle = (elData: VdomNode) => {\n            if(elData.text === '') {\n                return;\n            }\n            let fontFamily = 'Times New Roman';\n            if(elData['font-family']) {\n                fontFamily = elData['font-family'];\n            }\n            if(elData.style['font-family']) {\n                fontFamily = elData.style['font-family'];\n            }\n            let fontSize = '16px';\n            if(elData['font-size']) {\n                fontSize = DrawingUtils.convertSizeToPx(elData['font-size']) + 'px';\n            }\n            if(elData.style['font-size']) {\n                fontSize = DrawingUtils.convertSizeToPx(elData.style['font-size']) + 'px';\n            }\n            let font = elData.style['font'] ? elData.style['font'] : elData['font'];\n            if(!font) {\n                font = fontSize + ' ' + fontFamily;\n            }\n            let align = elData['text-anchor'] !== undefined ? elData['text-anchor'] : elData.style['text-anchor'];\n            if(align) {\n                if(align === 'middle') {\n                    align = 'center';\n                }\n                this.ctx.textAlign = align;\n            }\n            let fill = elData['fill'] ? elData['fill'] : elData.style['fill'];\n            if(!fill) fill = '#000';\n            this.ctx.font = font;\n            this.ctx.fillStyle = fill;\n            let x = elData.x || 0;\n            let y = elData.y || 0;\n            let dx = DrawingUtils.convertSizeToPx(elData.dx, false) || 0;\n            let dy = DrawingUtils.convertSizeToPx(elData.dy, false) || 0;\n            this.ctx.fillText(elData.text, x + dx, y + dy);\n        };\n        if(mode === 'start') {\n            this.drawTexts = [];\n            return;\n        }\n        if(mode === 'normal') {\n            this.drawTexts.push(node);\n            return;\n        }\n        if(mode === 'forcesingle') {\n            return drawSingle(node);\n        }\n        if(mode === 'end') {\n            for(const currentNode of this.drawTexts) {\n                drawSingle(currentNode);\n            }\n            return;\n        }\n    }\n\n    private drawImages: VdomNode[] = [];\n\n    private drawImage(node: VdomNode, mode: DrawMode = 'normal') {\n        const drawSingle = (elData: VdomNode) => {\n            if(elData.href === '') {\n                return;\n            }\n            let fill = elData['fill'] ? elData['fill'] : elData.style['fill'];\n            if(!fill) fill = '#000';\n            this.ctx.fillStyle = fill;\n            let x = elData.x || 0;\n            let y = elData.y || 0;\n            let width = elData.width || 0;\n            let height = elData.height || 0;\n            if(elData.image) {\n                try {\n                    this.ctx.drawImage(elData.image, x, y, width, height);\n                } catch(e) {\n                    console.log(e);\n                }\n            }\n        };\n        if(mode === 'start') {\n            this.drawImages = [];\n            return;\n        }\n        if(mode === 'normal') {\n            this.drawImages.push(node);\n            return;\n        }\n        if(mode === 'forcesingle') {\n            return drawSingle(node);\n        }\n        if(mode === 'end') {\n            for(const currentNode of this.drawImages) {\n                drawSingle(currentNode);\n            }\n            return;\n        }\n    }\n\n    private drawPath(elData: VdomNode, mode: DrawMode = 'normal') {\n        if(mode !== 'normal' && mode !== 'forcesingle') return;\n\n        const fill = this.getFillStyle(elData, '#000000');\n        const stroke = this.getStrokeStyle(elData);\n        const strokeWidth = this.getStrokeWidth(elData);\n\n        let p = new Path2D(elData.d);\n        this.ctx.fillStyle = fill;\n        if(stroke !== undefined && stroke !== 'none') {\n            if(strokeWidth !== undefined) {\n                this.ctx.lineWidth = strokeWidth;\n            }\n            this.ctx.strokeStyle = stroke;\n\n            if(elData.style['stroke-linejoin']) {\n                const lineJoin = elData.style['stroke-linejoin'];\n                if(lineJoin === 'bevel' || lineJoin === 'round' || lineJoin === 'miter') {\n                    this.ctx.lineJoin = lineJoin;\n                } else {\n                    console.error('unknown line join value:', lineJoin)\n                }\n            }\n            this.ctx.stroke(p);\n        }\n\n        if(fill && fill !== 'none') {\n            this.ctx.fill(p);\n        }\n    }\n    \n    private drawTspan(elData: VdomNode, mode: DrawMode = 'normal') {\n        if(mode !== 'normal' && mode !== 'forcesingle') return;\n        \n        this.ctx.font = \"10px Arial\";\n        this.ctx.fillStyle = \"#000000\";\n        const textAlign = <CanvasTextAlign> (elData.style.textAnchor === \"middle\" ? \"center\" : elData.style.textAnchor);\n        this.ctx.textAlign = textAlign;\n        this.ctx.fillText(elData.text, elData.x, elData.y);\n    }\n\n    private drawTextpath(elData: VdomNode) {\n        console.warn('no draw function yet for textpath');\n    }\n\n    private linesByColor: {[color: string]: VdomNode[]} = {};\n    private drawLine(elData, mode: DrawMode = 'normal') {\n        if(this.vdom.data.scale > 1) {\n            //mode = 'forcesingle';\n            // In my tests, drawing a long connected path is very slow for high DPI devices.\n        }\n        if(mode === 'normal') {\n            const stroke = this.getStrokeStyle(elData);\n            const width = this.getStrokeWidth(elData);\n            if(stroke === 'none' || width === 0) {\n                return;\n            }\n            const selector = `${stroke};${width}`;\n            if(!this.linesByColor[selector]) {\n                this.linesByColor[selector] = [];\n            }\n            this.linesByColor[selector].push(elData);\n        }\n        if(mode === 'start') {\n            this.linesByColor = {};\n            return;\n        }\n        if(mode === 'end') {\n            //safeLog(Object.keys(this.linesByColor), this.linesByColor);\n            for(let selector in this.linesByColor) {\n                if(this.linesByColor.hasOwnProperty(selector)) {\n                    const split = selector.split(';');\n                    const strokeColor = split[0];\n                    const width = split[1];\n\n                    this.ctx.strokeStyle = strokeColor;\n                    this.ctx.lineWidth = parseFloat(width);\n\n                    this.ctx.beginPath();\n                    for(let elData of this.linesByColor[selector]) {\n                        if(elData.transform) {\n                            this.ctx.save();\n                            this.applyTransform(elData.transform);\n                        }\n\n                        this.ctx.moveTo(elData.x1 || 0, elData.y1 || 0);\n                        this.ctx.lineTo(elData.x2 || 0, elData.y2 || 0);\n\n                        if(elData.transform) {\n                            //this.ctx.restore();\n                            this.ctx.restore();\n                        }\n                    }\n\n                    this.ctx.stroke();\n                }\n            }\n            return;\n        }\n        if(mode === 'forcesingle') {\n            this.ctx.beginPath();\n            this.ctx.moveTo(elData.x1 || 0, elData.y1 || 0);\n            this.ctx.lineTo(elData.x2 || 0, elData.y2 || 0);\n\n            this.ctx.strokeStyle = this.getStrokeStyle(elData);\n            this.ctx.lineWidth = this.getStrokeWidth(elData);\n            //safeLog(stroke, this.ctx.strokeStyle);\n            this.ctx.stroke();\n        }\n    }\n\n    private drawDefs(node: VdomNode) {\n        //TODO figure out.\n    }\n\n    private drawMarker(node: VdomNode) {\n        //TODO figure out.\n    }\n    \n    private applyTransform(transformString: string) {\n        const transform = transformString ? DrawingUtils.parseTransform(transformString) : null;\n        if(transform) {\n            if(transform.rotate) {\n                //console.log(transform.rotate);\n            }\n            //console.log(transformString);\n            this.ctx.rotate(transform.rotate * Math.PI / 180);\n            const x = transform.translateBeforeScale ? transform.translateX : transform.translateX * transform.scaleX;\n            const y = transform.translateBeforeScale ? transform.translateY : transform.translateY * transform.scaleY;\n            this.ctx.transform(transform.scaleX, 0, 0, transform.scaleY, x, y);\n            //ctx.rotate(transform.rotate / 2 / Math.PI);\n\n            //console.log(transform.rotate);\n            return true;\n        }\n        return false;\n    }\n}\n\n\nlet safeLogCount = 0;\nfunction safeLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.log(...logContents);\n    }\n}\nfunction safeErrorLog(...logContents) {\n    \n    if(safeLogCount < 50) {\n        safeLogCount++;\n        console.error(...logContents);\n    }\n}\n","import './custom';\nimport CanvasWorkerImporter = require('worker-loader?inline=true!./canvasworker');\n\nexport default CanvasWorkerImporter;","module.exports = function() {\n  return require(\"!!/home/micha/WebstormProjects/ssvg/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(t){var e={};function s(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&\\\"object\\\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:t}),2&e&&\\\"string\\\"!=typeof t)for(var i in t)s.d(r,i,function(e){return t[e]}.bind(null,i));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,\\\"a\\\",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p=\\\"\\\",s(s.s=1)}([function(t,e,s){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0});class r{static parseTransform(t){const e={translateX:0,translateY:0,scaleX:1,scaleY:1,rotate:0,translateBeforeScale:!1};if(t){if(\\\"string\\\"!=typeof t)return e.scaleX=t.k,e.scaleY=t.k,e.translateX=t.x,e.translateY=t.y,e;let s=t;s=s.replace(/ /g,\\\"\\\");const r=/\\\\s*translate\\\\(([-0-9.]+),([-0-9.]+)\\\\)/.exec(s);r&&(e.translateX=parseFloat(r[1]),e.translateY=parseFloat(r[2]));const i=/\\\\s*scale\\\\(([-0-9.]+)(,[-0-9.]+)?\\\\)/.exec(s);i&&(e.scaleX=parseFloat(i[1]),e.scaleY=i[2]?parseFloat(i[2].substr(1)):parseFloat(i[1]));const o=/\\\\s*rotate\\\\(([-0-9.]+)\\\\)/.exec(s);o&&(e.rotate=parseFloat(o[1])),/\\\\s*translate\\\\(([-0-9.]+),([-0-9.]+)\\\\)scale\\\\(([-0-9.,]+)\\\\)/.exec(s)&&(e.translateBeforeScale=!0);const l=/\\\\s*matrix\\\\(([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+),([-0-9.]+)\\\\)/.exec(s);l&&(e.scaleX=parseFloat(l[1]),e.scaleY=parseFloat(l[4]),e.translateX=parseFloat(l[5]),e.translateY=parseFloat(l[6]))}return e}static addTransforms(t,e){return{translateX:t.translateX+e.translateX,translateY:t.translateY+e.translateY,scaleX:t.scaleX*e.scaleX,scaleY:t.scaleY*e.scaleY,rotate:t.rotate+e.rotate,translateBeforeScale:!1}}static convertSizeToPx(t,e=!0){const s=e?14:void 0;return void 0===t?s:\\\"number\\\"==typeof t?t:\\\"em\\\"===t.substr(-2)?Math.round(12*parseFloat(t)):\\\"px\\\"===t.substr(-2)?parseInt(t):t.match(/^[0-9]+$/)?parseInt(t):(console.warn(\\\"size in unsupported format: \\\",t),s)}static colorToRgba(t,e=1,s=\\\"none\\\"){if(\\\"none\\\"===t)return t;if(!t)return s;if(t=r.CssNamedColorToHex(t),1===e&&\\\"string\\\"==typeof t)return t;if(\\\"string\\\"==typeof t&&\\\"#\\\"===t[0]){let s;if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(t))return s=t.substring(1),3==s.length&&(s=s[0]+s[0]+s[1]+s[1]+s[2]+s[2]),s=\\\"0x\\\"+s,\\\"rgba(\\\"+[s>>16&255,s>>8&255,255&s].join(\\\",\\\")+\\\",\\\"+e+\\\")\\\";throw new Error(\\\"Bad Hex\\\")}if(\\\"object\\\"==typeof t){if(\\\"r\\\"in t)return\\\"rgba(\\\"+t.r+\\\",\\\"+t.g+\\\",\\\"+t.b+\\\",\\\"+e+\\\")\\\";if(\\\"h\\\"in t){const s=r.hslToRgb(t.h/360,t.s,t.l);return\\\"rgba(\\\"+s.r+\\\",\\\"+s.g+\\\",\\\"+s.b+\\\",\\\"+e+\\\")\\\"}}else if(\\\"rgb(\\\"===t.substr(0,4))return t.substr(0,t.length-1).replace(\\\"rgb\\\",\\\"rgba\\\")+\\\", \\\"+e+\\\")\\\";return t}static hslToRgb(t,e,s){var r,i,o;if(0==e)r=i=o=s;else{var l=function(t,e,s){return s<0&&(s+=1),s>1&&(s-=1),s<1/6?t+6*(e-t)*s:s<.5?e:s<2/3?t+(e-t)*(2/3-s)*6:t},n=s<.5?s*(1+e):s+e-s*e,a=2*s-n;r=l(a,n,t+1/3),i=l(a,n,t),o=l(a,n,t-1/3)}return{r:Math.round(255*r),g:Math.round(255*i),b:Math.round(255*o)}}static CssNamedColorToHex(t){return\\\"string\\\"==typeof t&&i[t.toUpperCase()]?i[t.toUpperCase()]:t}static getCssRuleSpecificityNumber(t){let e=0;t=t.replace(/ >/g,\\\">\\\").replace(/> /g,\\\">\\\");const s=[].concat.apply([],t.split(\\\" \\\").map(t=>t.split(\\\">\\\")));for(const t of s){e+=100;const s=t[0];if(\\\"#\\\"===s)e+=1e3;else if(\\\".\\\"===s){const s=t.split(\\\".\\\").length-1;e+=Math.min(900,100*s)}}return e}}e.default=r;const i={ALICEBLUE:\\\"#F0F8FF\\\",ANTIQUEWHITE:\\\"#FAEBD7\\\",AQUA:\\\"#00FFFF\\\",AQUAMARINE:\\\"#7FFFD4\\\",AZURE:\\\"#F0FFFF\\\",BEIGE:\\\"#F5F5DC\\\",BISQUE:\\\"#FFE4C4\\\",BLACK:\\\"#000000\\\",BLANCHEDALMOND:\\\"#FFEBCD\\\",BLUE:\\\"#0000FF\\\",BLUEVIOLET:\\\"#8A2BE2\\\",BROWN:\\\"#A52A2A\\\",BURLYWOOD:\\\"#DEB887\\\",CADETBLUE:\\\"#5F9EA0\\\",CHARTREUSE:\\\"#7FFF00\\\",CHOCOLATE:\\\"#D2691E\\\",CORAL:\\\"#FF7F50\\\",CORNFLOWERBLUE:\\\"#6495ED\\\",CORNSILK:\\\"#FFF8DC\\\",CRIMSON:\\\"#DC143C\\\",CYAN:\\\"#00FFFF\\\",DARKBLUE:\\\"#00008B\\\",DARKCYAN:\\\"#008B8B\\\",DARKGOLDENROD:\\\"#B8860B\\\",DARKGRAY:\\\"#A9A9A9\\\",DARKGREY:\\\"#A9A9A9\\\",DARKGREEN:\\\"#006400\\\",DARKKHAKI:\\\"#BDB76B\\\",DARKMAGENTA:\\\"#8B008B\\\",DARKOLIVEGREEN:\\\"#556B2F\\\",DARKORANGE:\\\"#FF8C00\\\",DARKORCHID:\\\"#9932CC\\\",DARKRED:\\\"#8B0000\\\",DARKSALMON:\\\"#E9967A\\\",DARKSEAGREEN:\\\"#8FBC8F\\\",DARKSLATEBLUE:\\\"#483D8B\\\",DARKSLATEGRAY:\\\"#2F4F4F\\\",DARKSLATEGREY:\\\"#2F4F4F\\\",DARKTURQUOISE:\\\"#00CED1\\\",DARKVIOLET:\\\"#9400D3\\\",DEEPPINK:\\\"#FF1493\\\",DEEPSKYBLUE:\\\"#00BFFF\\\",DIMGRAY:\\\"#696969\\\",DIMGREY:\\\"#696969\\\",DODGERBLUE:\\\"#1E90FF\\\",FIREBRICK:\\\"#B22222\\\",FLORALWHITE:\\\"#FFFAF0\\\",FORESTGREEN:\\\"#228B22\\\",FUCHSIA:\\\"#FF00FF\\\",GAINSBORO:\\\"#DCDCDC\\\",GHOSTWHITE:\\\"#F8F8FF\\\",GOLD:\\\"#FFD700\\\",GOLDENROD:\\\"#DAA520\\\",GRAY:\\\"#808080\\\",GREY:\\\"#808080\\\",GREEN:\\\"#008000\\\",GREENYELLOW:\\\"#ADFF2F\\\",HONEYDEW:\\\"#F0FFF0\\\",HOTPINK:\\\"#FF69B4\\\",INDIANRED:\\\"#CD5C5C\\\",INDIGO:\\\"#4B0082\\\",IVORY:\\\"#FFFFF0\\\",KHAKI:\\\"#F0E68C\\\",LAVENDER:\\\"#E6E6FA\\\",LAVENDERBLUSH:\\\"#FFF0F5\\\",LAWNGREEN:\\\"#7CFC00\\\",LEMONCHIFFON:\\\"#FFFACD\\\",LIGHTBLUE:\\\"#ADD8E6\\\",LIGHTCORAL:\\\"#F08080\\\",LIGHTCYAN:\\\"#E0FFFF\\\",LIGHTGOLDENRODYELLOW:\\\"#FAFAD2\\\",LIGHTGRAY:\\\"#D3D3D3\\\",LIGHTGREY:\\\"#D3D3D3\\\",LIGHTGREEN:\\\"#90EE90\\\",LIGHTPINK:\\\"#FFB6C1\\\",LIGHTSALMON:\\\"#FFA07A\\\",LIGHTSEAGREEN:\\\"#20B2AA\\\",LIGHTSKYBLUE:\\\"#87CEFA\\\",LIGHTSLATEGRAY:\\\"#778899\\\",LIGHTSLATEGREY:\\\"#778899\\\",LIGHTSTEELBLUE:\\\"#B0C4DE\\\",LIGHTYELLOW:\\\"#FFFFE0\\\",LIME:\\\"#00FF00\\\",LIMEGREEN:\\\"#32CD32\\\",LINEN:\\\"#FAF0E6\\\",MAGENTA:\\\"#FF00FF\\\",MAROON:\\\"#800000\\\",MEDIUMAQUAMARINE:\\\"#66CDAA\\\",MEDIUMBLUE:\\\"#0000CD\\\",MEDIUMORCHID:\\\"#BA55D3\\\",MEDIUMPURPLE:\\\"#9370DB\\\",MEDIUMSEAGREEN:\\\"#3CB371\\\",MEDIUMSLATEBLUE:\\\"#7B68EE\\\",MEDIUMSPRINGGREEN:\\\"#00FA9A\\\",MEDIUMTURQUOISE:\\\"#48D1CC\\\",MEDIUMVIOLETRED:\\\"#C71585\\\",MIDNIGHTBLUE:\\\"#191970\\\",MINTCREAM:\\\"#F5FFFA\\\",MISTYROSE:\\\"#FFE4E1\\\",MOCCASIN:\\\"#FFE4B5\\\",NAVAJOWHITE:\\\"#FFDEAD\\\",NAVY:\\\"#000080\\\",OLDLACE:\\\"#FDF5E6\\\",OLIVE:\\\"#808000\\\",OLIVEDRAB:\\\"#6B8E23\\\",ORANGE:\\\"#FFA500\\\",ORANGERED:\\\"#FF4500\\\",ORCHID:\\\"#DA70D6\\\",PALEGOLDENROD:\\\"#EEE8AA\\\",PALEGREEN:\\\"#98FB98\\\",PALETURQUOISE:\\\"#AFEEEE\\\",PALEVIOLETRED:\\\"#DB7093\\\",PAPAYAWHIP:\\\"#FFEFD5\\\",PEACHPUFF:\\\"#FFDAB9\\\",PERU:\\\"#CD853F\\\",PINK:\\\"#FFC0CB\\\",PLUM:\\\"#DDA0DD\\\",POWDERBLUE:\\\"#B0E0E6\\\",PURPLE:\\\"#800080\\\",REBECCAPURPLE:\\\"#663399\\\",RED:\\\"#FF0000\\\",ROSYBROWN:\\\"#BC8F8F\\\",ROYALBLUE:\\\"#4169E1\\\",SADDLEBROWN:\\\"#8B4513\\\",SALMON:\\\"#FA8072\\\",SANDYBROWN:\\\"#F4A460\\\",SEAGREEN:\\\"#2E8B57\\\",SEASHELL:\\\"#FFF5EE\\\",SIENNA:\\\"#A0522D\\\",SILVER:\\\"#C0C0C0\\\",SKYBLUE:\\\"#87CEEB\\\",SLATEBLUE:\\\"#6A5ACD\\\",SLATEGRAY:\\\"#708090\\\",SLATEGREY:\\\"#708090\\\",SNOW:\\\"#FFFAFA\\\",SPRINGGREEN:\\\"#00FF7F\\\",STEELBLUE:\\\"#4682B4\\\",TAN:\\\"#D2B48C\\\",TEAL:\\\"#008080\\\",THISTLE:\\\"#D8BFD8\\\",TOMATO:\\\"#FF6347\\\",TURQUOISE:\\\"#40E0D0\\\",VIOLET:\\\"#EE82EE\\\",WHEAT:\\\"#F5DEB3\\\",WHITE:\\\"#FFFFFF\\\",WHITESMOKE:\\\"#F5F5F5\\\",YELLOW:\\\"#FFFF00\\\",YELLOWGREEN:\\\"#9ACD32\\\"}},function(t,e,s){\\\"use strict\\\";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0});const i=s(2),o=r(s(4));let l;const n=self;let a;n.onmessage=function(t){const e=t.data;if(e&&e.cmd)switch(e.cmd){case\\\"INIT\\\":a=new i.VdomManager(e.data.visData,!1);const t=!!e.data.safeMode;l=new o.default(a,e.data.canvas,t,()=>{n.postMessage({msg:\\\"DRAWN\\\"})});break;case\\\"UPDATE_NODES\\\":const s=e;for(let t of s.data.enterExit)if(\\\"ENTER\\\"===t.cmd){t.keepChildren||(t.node.children=[]);const e=a.addNode(t.node,t.parentNodeIndex);l.addNode&&l.addNode(e)}else\\\"EXIT\\\"===t.cmd&&a.removeNode(t.childIndex,t.parentNodeSelector);l.updatePropertiesFromQueue?l.updatePropertiesFromQueue(s.data.update):a.updatePropertiesFromQueue(s.data.update),l.draw();break;default:console.error(\\\"did not find command \\\",e.cmd)}}},function(t,e,s){\\\"use strict\\\";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0});const i=r(s(0)),o=r(s(3));class l{constructor(t,e){this.data=t,this.ignoreDesign=e,this.indexToNodeMap={},this.cachedListSelections={},this.ensureNodesMapped()}ensureNodesMapped(){const t=e=>{void 0===e.globalElementIndex&&console.error(\\\"no element index\\\",e),this.indexToNodeMap[e.globalElementIndex]=e;for(const s of e.children)t(s)};t(this.data)}enableFrontendDesignProperties(){this.ignoreDesign=!1}addNode(t,e){let s=this.getNodeFromIndex(e);return s?(this.applyParentStyles(s,t),s.children.push(t),this.indexToNodeMap[t.globalElementIndex]=t,t):(console.error(\\\"could not add node without parent\\\",e,t,JSON.stringify(Object.keys(this.indexToNodeMap))),void new Error(\\\"parent not found\\\"))}removeNode(t,e){let s=this.getVisNodeFromSelector(e);s||(\\\"\\\"===e?s=this.data:console.error(s,e)),s.children.splice(t,1),this.cachedListSelections={}}applyParentStyles(t,e){for(const s in t.style)e.style[s]||(e.style[s]=t.style[s])}getParentNodeFromSelector(t){let e;return t||console.error(\\\"no parent selector\\\",t),e=\\\"SVG_PARENT\\\"===t?{children:[this.data]}:this.getVisNodeFromSelector(t),e||console.error(\\\"parent node not found with selector\\\",t),e}applyStyleToNodeAndChildren(t,e,s,r){if((!t.styleSpecificity[e]||t.styleSpecificity[e]<=r)&&(t.style[e]=s,t.styleSpecificity[e]=r),t.children)for(let i of t.children)this.applyStyleToNodeAndChildren(i,e,s,r)}getNodeFromIndex(t){return this.indexToNodeMap[t]}updatePropertiesFromQueue(t){for(let e in t){if(!t.hasOwnProperty(e))continue;const s=e.substr(0,\\\"style;\\\".length);if(this.ignoreDesign&&(\\\"style;\\\"===s||-1!==l.ATTRIBUTES_NOT_IGNORED_WITH_IGNOREDESIGN.indexOf(e)))continue;let r,i;\\\"SharedArrayBuffer\\\"in self&&t[e]instanceof SharedArrayBuffer?(r=new Int32Array(t[e]),i=1/o.default.BUFFER_PRECISION_FACTOR):r=t[e];for(let o in r){if(!r.hasOwnProperty(o))continue;if(0===r[o])continue;const n=parseInt(o),a=this.getNodeFromIndex(n);if(!a)continue;let c=i?i*r[o]:r[o];if(\\\"style;\\\"===s){const s=e.substr(\\\"style;\\\".length),r=\\\"styleSpecificity;\\\"+s;try{const e=t[r][o];this.applyStyleToNodeAndChildren(a,s,c,e),this.updateDeducedStyles(a,s,c)}catch(e){console.error(t,r,o),this.applyStyleToNodeAndChildren(a,s,c,-1)}}else-1!==l.ROUNDED_ATTRS.indexOf(e)&&(c=Math.round(c)),a[e]=c,this.updateDeducedStyles(a,e,c)}}}updateDeducedStyles(t,e,s){if(-1!==[\\\"opacity\\\",\\\"fill-opacity\\\",\\\"stroke-opacity\\\",\\\"stroke\\\",\\\"fill\\\"].indexOf(e)){let e=t.style.stroke?t.style.stroke:t.stroke;if(e){let s=void 0===t.style[\\\"stroke-opacity\\\"]?t.style.opacity:t.style[\\\"stroke-opacity\\\"];void 0===s&&(s=void 0===t[\\\"stroke-opacity\\\"]?t.opacity:t[\\\"stroke-opacity\\\"]),t.style[\\\"stroke-rgba\\\"]=i.default.colorToRgba(e,s)}}}getVisNodeFromSelector(t){const e=t.lastIndexOf(\\\">\\\"),s=t.substr(0,e),r=t.substr(e+1),i=s?this.cachedListSelections[s]:null;let o=-1;const l=r.indexOf(\\\":nth-child(\\\");if(-1!==l&&(o=parseInt(r.substr(l+11)),i&&i[o]))return i[o];const n=[];if(this.findMatchingChildren(this.data,t,0,n),n&&1===n.length){const t=n[0];return-1!==o&&(this.cachedListSelections[s]||(this.cachedListSelections[s]={}),this.cachedListSelections[s][o]=t),t}return null}getVisNodesFromSelector(t,e){const s=[];return this.findMatchingChildren(t,e,0,s),s}findChildrenOfType(t,e,s){const r=t=>{for(const i of t.children)i.type===e&&s.push(i),0!==t.children.length&&r(i)};r(t)}filterNodesBySelector(t,e,s){return e.filter(e=>l.isCssRulePartialMatch(s,e,t))}findMatchingChildren(t,e,s,r,i=[]){if(!e&&\\\"\\\"!==e)throw console.error(t,e,s,r,i),Error(\\\"undefined selector\\\");let o=e.split(\\\">\\\").map(t=>t.trim()),n=o[s];if(0===s&&\\\"svg\\\"===n&&(n=o[++s],s===o.length))return r.push(t),void i.push(e);if(e.match(/^[a-z]+$/))return this.findChildrenOfType(t,e,r);for(let a=0;a<t.children.length;a++){let c=t.children[a],d=!1;l.isCssRulePartialMatch(n,c,t)&&(s===o.length-1?(r.push(c),i.push(e)):d=!0),c.children&&(d||o.length<2)&&s+1<o.length&&this.findMatchingChildren(c,e,s+1,r,i)}}static isCssRulePartialMatch(t,e,s){if(\\\":not(\\\"===t.substr(0,5)){const r=t.substr(0,t.length-1).substr(5);return!l.isCssRulePartialMatch(r,e,s)}if(\\\".\\\"===t[0]){const s=t.split(\\\".\\\");if(s.shift(),e.className){let t=!0;for(const r of s)-1===e.className.split(\\\" \\\").indexOf(r)&&(t=!1);return t}}else if(\\\"#\\\"===t[0]){if(t.substr(1)===e.id)return!0}else if(t.match(/^[a-z]+$/)){if(t===e.type)return!0}else{if(-1!==t.indexOf(\\\":nth-child(\\\")){let r=\\\"any\\\",i=t;\\\":\\\"!==t[0]&&(r=t.substr(0,t.indexOf(\\\":\\\")),i=t.substr(t.indexOf(\\\":\\\")));const o=parseInt(i.substr(\\\":nth-child(\\\".length));return s.children.indexOf(e)===o-1&&(\\\"any\\\"===r||e.type===r)}if(-1!==t.indexOf(\\\".\\\")){const s=t.indexOf(\\\".\\\"),r=t.substr(0,s),i=t.substr(s+1);if(r===e.type&&e.className&&-1!==e.className.split(\\\" \\\").indexOf(i))return!0}}return!1}}e.VdomManager=l,l.ATTRIBUTES_NOT_IGNORED_WITH_IGNOREDESIGN=[\\\"fill\\\",\\\"stroke\\\",\\\"opacity\\\",\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\",\\\"x\\\",\\\"y\\\"],l.ROUNDED_ATTRS=[\\\"cx\\\",\\\"cy\\\"]},function(t,e,s){\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0});class r{constructor(){this.data={raw:{},shared:{}},this.useSharedArrayFor=[\\\"cx\\\",\\\"cy\\\",\\\"x1\\\",\\\"x2\\\",\\\"y1\\\",\\\"y2\\\",\\\"x\\\",\\\"y\\\"]}ensureInitialized(t,e){if(\\\"class\\\"===t&&(t=\\\"className\\\"),e&&-1!==this.useSharedArrayFor.indexOf(t)){if(!this.data.shared[t]){const e=1e4,s=new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT*e),i=new Int32Array(s);if(this.data.raw[t]&&!(this.data.raw[t]instanceof SharedArrayBuffer)){this.data.raw[t].forEach((t,e)=>{i[e]=parseFloat(t)*r.BUFFER_PRECISION_FACTOR})}this.data.raw[t]=s,this.data.shared[t]=i}}else this.data.raw[t]||(this.data.raw[t]=[])}set(t,e,s,i){if(\\\"class\\\"===e&&(e=\\\"className\\\"),void 0===t.globalElementIndex)throw console.error(\\\"No index\\\",t),new Error(\\\"Element has no index\\\");const o=t.globalElementIndex,l=i&&-1!==this.useSharedArrayFor.indexOf(e)?\\\"shared\\\":\\\"raw\\\";try{\\\"shared\\\"===l&&(s*=r.BUFFER_PRECISION_FACTOR),this.data[l][e][o]=s}catch(s){console.log(s),console.log(this.data,l,e,t,o)}}get(t,e){const s=t.globalElementIndex;return this.data.raw[e][s]}getData(){return this.data.raw}clearData(){this.data={raw:{},shared:{}}}}e.default=r,r.BUFFER_PRECISION_FACTOR=10},function(t,e,s){\\\"use strict\\\";var r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0});const i=r(s(0));e.default=class{constructor(t,e,s=!1,r=(()=>{})){this.vdom=t,this.canvas=e,this.forceSingle=s,this.onDrawn=r,this.lastFullSecond=0,this.countSinceLastFullSecond=0,this.circlesByColor={},this.rectsByColor={},this.drawTexts=[],this.drawImages=[],this.linesByColor={};const i=e.getContext(\\\"2d\\\");if(!i)throw new Error(\\\"could not create canvas context\\\");this.ctx=i,this.ctx.scale(this.vdom.data.scale,this.vdom.data.scale),this.ctx.save(),this.draw(),setTimeout(()=>{console.log(this.forceSingle,this.vdom.data),this.draw()},1e3)}draw(){const t=this.ctx;t.restore(),t.save(),t.clearRect(0,0,this.vdom.data.width,this.vdom.data.height),this.drawLine(null,\\\"start\\\"),this.drawCircle(null,\\\"start\\\"),this.drawRect(null,\\\"start\\\"),this.drawText(null,\\\"start\\\"),this.drawImage(null,\\\"start\\\"),this.drawNodeAndChildren(this.vdom.data,this.forceSingle),this.drawLine(null,\\\"end\\\"),this.drawCircle(null,\\\"end\\\"),this.drawRect(null,\\\"end\\\"),this.drawText(null,\\\"end\\\"),this.drawImage(null,\\\"end\\\"),this.onDrawn();const e=Math.round(performance.now()/1e3);e!==this.lastFullSecond&&(this.lastFullSecond=e,this.countSinceLastFullSecond=0),this.countSinceLastFullSecond++}drawNodeAndChildren(t,e){const s=this.ctx;s.save();this.applyTransform(t.transform);if(t.transform&&(e=!0),t.type&&\\\"g\\\"!==t.type&&(!t.style.display||\\\"none\\\"!==t.style.display)){if(\\\"title\\\"===t.type)return;e?this.drawSingleNode(t,\\\"forcesingle\\\"):this.drawSingleNode(t)}if(t.children)for(let s=0;s<t.children.length;s++)this.drawNodeAndChildren(t.children[s],e);s.restore()}drawSingleNode(t,e=\\\"normal\\\"){const s=t.type,r=this[\\\"draw\\\"+s.substr(0,1).toUpperCase()+s.substr(1)];if(!r)return console.error(\\\"no draw function yet for \\\",s);r.call(this,t,e)}drawClippath(t){console.warn(\\\"clippaths can not be rendered yet.\\\")}drawCircle(t,e=\\\"normal\\\"){if(\\\"normal\\\"===e){const e=this.getFillStyle(t,\\\"#000\\\")+\\\";\\\"+this.getStrokeStyle(t);this.circlesByColor[e]||(this.circlesByColor[e]=[]),this.circlesByColor[e].push(t)}if(\\\"start\\\"!==e){if(\\\"end\\\"!==e){if(\\\"forcesingle\\\"===e){let e=this.getFillStyle(t,\\\"#000\\\");const s=t.cx||0,r=t.cy||0;this.ctx.beginPath(),this.ctx.fillStyle=e,this.ctx.strokeStyle=this.getStrokeStyle(t),this.ctx.lineWidth=this.getStrokeWidth(t),this.ctx.arc(s,r,t.r,0,2*Math.PI),\\\"none\\\"!==e&&this.ctx.fill(),t.style[\\\"stroke-rgba\\\"]&&\\\"none\\\"!==t.style[\\\"stroke-rgba\\\"]&&this.ctx.stroke()}}else for(let t in this.circlesByColor)if(this.circlesByColor.hasOwnProperty(t)){const e=t.split(\\\";\\\"),s=e[0],r=e[1];this.ctx.fillStyle=s;let i=this.circlesByColor[t][0];const o=this.getStrokeWidth(i);this.ctx.lineWidth=void 0!==o?o:1,this.ctx.strokeStyle=r,this.ctx.beginPath();for(let e of this.circlesByColor[t]){const t=e.cx?e.cx:0,s=e.cy?e.cy:0,r=e.r;this.ctx.save(),this.applyTransform(e.transform),this.ctx.moveTo(t+r,s),this.ctx.arc(t,s,r,0,2*Math.PI),this.ctx.restore()}\\\"none\\\"!==s&&this.ctx.fill(),i.style[\\\"stroke-rgba\\\"]&&\\\"none\\\"!==i.style[\\\"stroke-rgba\\\"]&&this.ctx.stroke()}}else this.circlesByColor={}}getFillStyle(t,e=\\\"none\\\"){let s=t.style.fill?t.style.fill:t.fill,r=t.opacity;return t.style[\\\"fill-opacity\\\"]&&(r=parseFloat(t.style[\\\"fill-opacity\\\"])),t.style.opacity&&(r=parseFloat(t.style.opacity)),s=i.default.colorToRgba(s,r,e),s}getStrokeStyle(t){if(t.style[\\\"stroke-rgba\\\"])return t.style[\\\"stroke-rgba\\\"];let e=t.style.stroke?t.style.stroke:t.stroke;if(void 0!==e){let s=void 0===t.style[\\\"stroke-opacity\\\"]?t.style.opacity:t.style[\\\"stroke-opacity\\\"];return void 0===s&&(s=void 0===t[\\\"stroke-opacity\\\"]?t.opacity:t[\\\"stroke-opacity\\\"]),t.style[\\\"stroke-rgba\\\"]=i.default.colorToRgba(e,s),t.style[\\\"stroke-rgba\\\"]}return\\\"none\\\"}getStrokeWidth(t){const e=void 0!==t.style[\\\"stroke-width\\\"]?t.style[\\\"stroke-width\\\"]:t[\\\"stroke-width\\\"];return void 0===e?void 0:parseFloat(e)}drawRect(t,e=\\\"normal\\\"){if(\\\"normal\\\"===e){let e=t.style.fill?t.style.fill:t.fill,s=t[\\\"fill-opacity\\\"]?t[\\\"fill-opacity\\\"]:t.opacity,r=t.style[\\\"fill-opacity\\\"]?t.style[\\\"fill-opacity\\\"]:t.style.opacity;void 0!==r&&(s=r);const o=i.default.colorToRgba(e,s)+\\\";\\\"+this.getStrokeStyle(t);this.rectsByColor[o]||(this.rectsByColor[o]=[]),this.rectsByColor[o].push(t)}if(\\\"start\\\"!==e){if(\\\"end\\\"!==e){if(\\\"forcesingle\\\"===e){let e=t.style.fill?t.style.fill:t.fill;e&&(e=i.default.colorToRgba(e,t.style[\\\"fill-opacity\\\"])),e&&\\\"none\\\"!==e&&(this.ctx.fillStyle=t.style.fill?t.style.fill:t.fill,this.ctx.fillRect(t.x,t.y,t.width,t.height));let s=t.style.stroke?t.style.stroke:t.stroke;void 0!==s&&(s=i.default.colorToRgba(s,t.style[\\\"stroke-opacity\\\"]),this.ctx.strokeStyle=s,this.ctx.beginPath(),this.ctx.rect(t.x,t.y,t.width,t.height),this.ctx.stroke())}}else for(let t in this.rectsByColor)if(this.rectsByColor.hasOwnProperty(t)){const e=t.split(\\\";\\\"),s=e[0],r=e[1];this.ctx.fillStyle=s;let i=this.rectsByColor[t][0];const o=this.getStrokeWidth(i);this.ctx.lineWidth=void 0!==o?o:1,this.ctx.strokeStyle=r,this.ctx.beginPath();for(let e of this.rectsByColor[t]){const t=e.x?e.x:0,s=e.y?e.y:0;this.ctx.save(),this.applyTransform(e.transform),this.ctx.moveTo(t,s),this.ctx.rect(t,s,e.width,e.height),this.ctx.restore()}\\\"none\\\"!==s&&this.ctx.fill(),i.style[\\\"stroke-rgba\\\"]&&\\\"none\\\"!==i.style[\\\"stroke-rgba\\\"]&&this.ctx.stroke()}}else this.rectsByColor={}}drawText(t,e=\\\"normal\\\"){const s=t=>{if(\\\"\\\"===t.text)return;let e=\\\"Times New Roman\\\";t[\\\"font-family\\\"]&&(e=t[\\\"font-family\\\"]),t.style[\\\"font-family\\\"]&&(e=t.style[\\\"font-family\\\"]);let s=\\\"16px\\\";t[\\\"font-size\\\"]&&(s=i.default.convertSizeToPx(t[\\\"font-size\\\"])+\\\"px\\\"),t.style[\\\"font-size\\\"]&&(s=i.default.convertSizeToPx(t.style[\\\"font-size\\\"])+\\\"px\\\");let r=t.style.font?t.style.font:t.font;r||(r=s+\\\" \\\"+e);let o=void 0!==t[\\\"text-anchor\\\"]?t[\\\"text-anchor\\\"]:t.style[\\\"text-anchor\\\"];o&&(\\\"middle\\\"===o&&(o=\\\"center\\\"),this.ctx.textAlign=o);let l=t.fill?t.fill:t.style.fill;l||(l=\\\"#000\\\"),this.ctx.font=r,this.ctx.fillStyle=l;let n=t.x||0,a=t.y||0,c=i.default.convertSizeToPx(t.dx,!1)||0,d=i.default.convertSizeToPx(t.dy,!1)||0;this.ctx.fillText(t.text,n+c,a+d)};if(\\\"start\\\"!==e)if(\\\"normal\\\"!==e){if(\\\"forcesingle\\\"===e)return s(t);if(\\\"end\\\"!==e);else for(const t of this.drawTexts)s(t)}else this.drawTexts.push(t);else this.drawTexts=[]}drawImage(t,e=\\\"normal\\\"){const s=t=>{if(\\\"\\\"===t.href)return;let e=t.fill?t.fill:t.style.fill;e||(e=\\\"#000\\\"),this.ctx.fillStyle=e;let s=t.x||0,r=t.y||0,i=t.width||0,o=t.height||0;if(t.image)try{this.ctx.drawImage(t.image,s,r,i,o)}catch(t){console.log(t)}};if(\\\"start\\\"!==e)if(\\\"normal\\\"!==e){if(\\\"forcesingle\\\"===e)return s(t);if(\\\"end\\\"!==e);else for(const t of this.drawImages)s(t)}else this.drawImages.push(t);else this.drawImages=[]}drawPath(t,e=\\\"normal\\\"){if(\\\"normal\\\"!==e&&\\\"forcesingle\\\"!==e)return;const s=this.getFillStyle(t,\\\"#000000\\\"),r=this.getStrokeStyle(t),i=this.getStrokeWidth(t);let o=new Path2D(t.d);if(this.ctx.fillStyle=s,void 0!==r&&\\\"none\\\"!==r){if(void 0!==i&&(this.ctx.lineWidth=i),this.ctx.strokeStyle=r,t.style[\\\"stroke-linejoin\\\"]){const e=t.style[\\\"stroke-linejoin\\\"];\\\"bevel\\\"===e||\\\"round\\\"===e||\\\"miter\\\"===e?this.ctx.lineJoin=e:console.error(\\\"unknown line join value:\\\",e)}this.ctx.stroke(o)}s&&\\\"none\\\"!==s&&this.ctx.fill(o)}drawTspan(t,e=\\\"normal\\\"){if(\\\"normal\\\"!==e&&\\\"forcesingle\\\"!==e)return;this.ctx.font=\\\"10px Arial\\\",this.ctx.fillStyle=\\\"#000000\\\";const s=\\\"middle\\\"===t.style.textAnchor?\\\"center\\\":t.style.textAnchor;this.ctx.textAlign=s,this.ctx.fillText(t.text,t.x,t.y)}drawTextpath(t){console.warn(\\\"no draw function yet for textpath\\\")}drawLine(t,e=\\\"normal\\\"){if(this.vdom.data.scale,\\\"normal\\\"===e){const e=this.getStrokeStyle(t),s=this.getStrokeWidth(t);if(\\\"none\\\"===e||0===s)return;const r=`${e};${s}`;this.linesByColor[r]||(this.linesByColor[r]=[]),this.linesByColor[r].push(t)}if(\\\"start\\\"!==e){if(\\\"end\\\"!==e)\\\"forcesingle\\\"===e&&(this.ctx.beginPath(),this.ctx.moveTo(t.x1||0,t.y1||0),this.ctx.lineTo(t.x2||0,t.y2||0),this.ctx.strokeStyle=this.getStrokeStyle(t),this.ctx.lineWidth=this.getStrokeWidth(t),this.ctx.stroke());else for(let t in this.linesByColor)if(this.linesByColor.hasOwnProperty(t)){const e=t.split(\\\";\\\"),s=e[0],r=e[1];this.ctx.strokeStyle=s,this.ctx.lineWidth=parseFloat(r),this.ctx.beginPath();for(let e of this.linesByColor[t])e.transform&&(this.ctx.save(),this.applyTransform(e.transform)),this.ctx.moveTo(e.x1||0,e.y1||0),this.ctx.lineTo(e.x2||0,e.y2||0),e.transform&&this.ctx.restore();this.ctx.stroke()}}else this.linesByColor={}}drawDefs(t){}drawMarker(t){}applyTransform(t){const e=t?i.default.parseTransform(t):null;if(e){e.rotate,this.ctx.rotate(e.rotate*Math.PI/180);const t=e.translateBeforeScale?e.translateX:e.translateX*e.scaleX,s=e.translateBeforeScale?e.translateY:e.translateY*e.scaleY;return this.ctx.transform(e.scaleX,0,0,e.scaleY,t,s),!0}return!1}}}]);\\n//# sourceMappingURL=36c7f679beabb189e585.worker.js.map\", __webpack_public_path__ + \"36c7f679beabb189e585.worker.js\");\n};","'use strict';\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};"],"sourceRoot":""}